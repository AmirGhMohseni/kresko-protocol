/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  UniswapV2Oracle,
  UniswapV2OracleInterface,
} from "../../../../src/contracts/minter/UniswapV2Oracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pairAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_updatePeriod",
        type: "uint256",
      },
    ],
    name: "configurePair",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pairAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountIn",
        type: "uint256",
      },
    ],
    name: "consult",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_kreskoAsset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountIn",
        type: "uint256",
      },
    ],
    name: "consultKrAsset",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "contract IUniswapV2Factory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pairAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_kreskoAsset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_updatePeriod",
        type: "uint256",
      },
    ],
    name: "initPair",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "krAssets",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pairs",
    outputs: [
      {
        components: [
          {
            internalType: "uint224",
            name: "_x",
            type: "uint224",
          },
        ],
        internalType: "struct UQ.uq112x112",
        name: "price0Average",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint224",
            name: "_x",
            type: "uint224",
          },
        ],
        internalType: "struct UQ.uq112x112",
        name: "price1Average",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price0CumulativeLast",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price1CumulativeLast",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "blockTimestampLast",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "updatePeriod",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pairAddress",
        type: "address",
      },
    ],
    name: "update",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516113fd3803806113fd83398101604081905261002f91610058565b60601b6001600160601b03191660805260028054336001600160a01b0319909116179055610086565b600060208284031215610069578081fd5b81516001600160a01b038116811461007f578182fd5b9392505050565b60805160601c61135a6100a360003980610bae525061135a6000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063813c3c9311610066578063813c3c93146100fc5780638da5cb5b1461011c578063b50d882c14610124578063c45a015514610137578063fe33b3021461013f57610093565b80631c1b87721461009857806352244ec8146100ad5780635b10f7ac146100c0578063636cfa0c146100d3575b600080fd5b6100ab6100a636600461113d565b610166565b005b6100ab6100bb3660046111b5565b6102f5565b6100ab6100ce366004611175565b6103de565b6100e66100e1366004611175565b610922565b6040516100f39190611303565b60405180910390f35b61010f61010a36600461113d565b610a67565b6040516100f39190611246565b61010f610a82565b6100e66101323660046111b5565b610a91565b61010f610bac565b61015261014d36600461113d565b610bd0565b6040516100f39897969594939291906112ad565b600080600061017484610c49565b6001600160a01b038716600090815260208181526040918290206006810154835180850190945260038452620dcc0d60ea1b928401929092529497509295509093509063ffffffff166101e35760405162461bcd60e51b81526004016101da919061125a565b60405180910390fd5b506006810154600782015460408051808201909152600381526237303760e81b602082015263ffffffff928316850392909190831610156102375760405162461bcd60e51b81526004016101da919061125a565b5060405180602001604052808263ffffffff16846004015488038161025857fe5b046001600160e01b03908116909152905183546001600160e01b031916911617825560408051602081019091526005830154819063ffffffff84169087038161029d57fe5b046001600160e01b0390811690915290516001840180546001600160e01b0319169190921617905550600481019390935560058301919091556006909101805463ffffffff191663ffffffff90921691909117905550565b60025460408051808201909152600381526203130360ec1b6020820152906001600160a01b0316331461033b5760405162461bcd60e51b81526004016101da919061125a565b506001600160a01b03828116600090815260208190526040902060020154161580159061038457506001600160a01b038281166000908152602081905260409020600301541615155b604051806040016040528060038152602001620dcc0d60ea1b815250906103be5760405162461bcd60e51b81526004016101da919061125a565b506001600160a01b03909116600090815260208190526040902060070155565b60025460408051808201909152600381526203130360ec1b6020820152906001600160a01b031633146104245760405162461bcd60e51b81526004016101da919061125a565b5060408051808201909152600381526237303160e81b60208201526001600160a01b0384166104665760405162461bcd60e51b81526004016101da919061125a565b506040805180820190915260038152621b981960e91b602082015261038482116104a35760405162461bcd60e51b81526004016101da919061125a565b506001600160a01b0383811660009081526020818152604091829020600201548251808401909352600383526237303360e81b91830191909152909116156104fe5760405162461bcd60e51b81526004016101da919061125a565b5060008390506000816001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561053f57600080fd5b505afa158015610553573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105779190611159565b90506000826001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b1580156105b457600080fd5b505afa1580156105c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ec9190611159565b90506001600160a01b0382161580159061060e57506001600160a01b03811615155b604051806040016040528060038152602001620dcc0d60ea1b815250906106485760405162461bcd60e51b81526004016101da919061125a565b50816001600160a01b0316856001600160a01b0316148061067a5750806001600160a01b0316856001600160a01b0316145b156106ae576001600160a01b03858116600090815260016020526040902080546001600160a01b0319169188169190911790555b6000806000856001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b1580156106ec57600080fd5b505afa158015610700573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072491906111e0565b925092509250826001600160701b031660001415801561074c57506001600160701b03821615155b604051806040016040528060038152602001621b981b60e91b815250906107865760405162461bcd60e51b81526004016101da919061125a565b506001600160a01b03898116600090815260208181526040918290206002810180546001600160a01b03199081168b871617909155600390910180549091168885161790558151635909c0d560e01b8152915192891692635909c0d5926004808201939291829003018186803b1580156107ff57600080fd5b505afa158015610813573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610837919061122e565b6000808b6001600160a01b03166001600160a01b0316815260200190815260200160002060040181905550856001600160a01b0316635a3d54936040518163ffffffff1660e01b815260040160206040518083038186803b15801561089b57600080fd5b505afa1580156108af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d3919061122e565b6001600160a01b03999099166000908152602081905260409020600581019990995560078901969096555050506006909401805463ffffffff191663ffffffff90931692909217909155505050565b6001600160a01b0380841660009081526020818152604080832081516101208101835281546001600160e01b03908116610100830190815282528351808601855260018401549091168152938101939093526002810154851691830182905260038101548516606084015260048101546080840152600581015460a0840152600681015463ffffffff1660c08401526007015460e08301529192909190851614156109ec5780516109dc906109d79085610e3e565b610ec8565b6001600160901b03169150610a5f565b80606001516001600160a01b0316846001600160a01b0316146040518060400160405280600381526020016206e60760eb1b81525090610a3f5760405162461bcd60e51b81526004016101da919061125a565b506020810151610a53906109d79085610e3e565b6001600160901b031691505b509392505050565b6001602052600090815260409020546001600160a01b031681565b6002546001600160a01b031681565b6001600160a01b038083166000818152600160208181526040808420548616845283825280842081516101208101835281546001600160e01b0390811661010083019081528252835180860185529583015416855292830193909352600283015486169082018190526003830154909516606082015260048201546080820152600582015460a0820152600682015463ffffffff1660c082015260079091015460e0820152909290911415610b60578051610b50906109d79085610e3e565b6001600160901b03169150610ba5565b80606001516001600160a01b0316846001600160a01b031614610b865760009150610ba5565b6020810151610b99906109d79085610e3e565b6001600160901b031691505b5092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600060208181529181526040908190208151808401835281546001600160e01b039081168252835194850190935260018201549092168352600281015460038201546004830154600584015460068501546007909501549596956001600160a01b039485169594909316939192909163ffffffff169088565b6000806000610c56610ed3565b9050836001600160a01b0316635909c0d56040518163ffffffff1660e01b815260040160206040518083038186803b158015610c9157600080fd5b505afa158015610ca5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc9919061122e565b9250836001600160a01b0316635a3d54936040518163ffffffff1660e01b815260040160206040518083038186803b158015610d0457600080fd5b505afa158015610d18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3c919061122e565b91506000806000866001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b158015610d7c57600080fd5b505afa158015610d90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db491906111e0565b9250925092508363ffffffff168163ffffffff1614610e345780840363ffffffff8116610ded6001600160701b03808616908716610edd565b600001516001600160e01b031602870196508063ffffffff16610e22856001600160701b0316856001600160701b0316610edd565b516001600160e01b0316029590950194505b5050509193909250565b610e46611101565b6000821580610e6c57505082516001600160e01b031682810290838281610e6957fe5b04145b610eb1576040805162461bcd60e51b815260206004820152601160248201527055513a3a6d756c3a206f766572666c6f7760781b604482015290519081900360640190fd5b604080516020810190915290815290505b92915050565b805160701c5b919050565b63ffffffff421690565b610ee5611114565b60008211610f3a576040805162461bcd60e51b815260206004820152601e60248201527f55513a3a6672616374696f6e3a206469766973696f6e206279207a65726f0000604482015290519081900360640190fd5b82610f545750604080516020810190915260008152610ec2565b6001600160901b038311610fe957600082607085901b81610f7157fe5b0490506001600160e01b03811115610fc9576040805162461bcd60e51b815260206004820152601660248201527555513a3a6672616374696f6e3a206f766572666c6f7760501b604482015290519081900360640190fd5b6040518060200160405280826001600160e01b0316815250915050610ec2565b6000610ffa84600160701b85611051565b90506001600160e01b03811115610fc9576040805162461bcd60e51b815260206004820152601660248201527555513a3a6672616374696f6e3a206f766572666c6f7760501b604482015290519081900360640190fd5b6000808060001985870986860292508281109083900303905080611087576000841161107c57600080fd5b5082900490506110fa565b80841161109357600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b9392505050565b6040518060200160405280600081525090565b60408051602081019091526000815290565b80516001600160701b0381168114610ece57600080fd5b60006020828403121561114e578081fd5b81356110fa8161130c565b60006020828403121561116a578081fd5b81516110fa8161130c565b600080600060608486031215611189578182fd5b83356111948161130c565b925060208401356111a48161130c565b929592945050506040919091013590565b600080604083850312156111c7578182fd5b82356111d28161130c565b946020939093013593505050565b6000806000606084860312156111f4578283fd5b6111fd84611126565b925061120b60208501611126565b9150604084015163ffffffff81168114611223578182fd5b809150509250925092565b60006020828403121561123f578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6000602080835283518082850152825b818110156112865785810183015185820160400152820161126a565b818111156112975783604083870101525b50601f01601f1916929092016040019392505050565b97516001600160e01b039081168952965190961660208801526001600160a01b039485166040880152929093166060860152608085015260a084019190915263ffffffff1660c083015260e08201526101000190565b90815260200190565b6001600160a01b038116811461132157600080fd5b5056fea26469706673582212201ba41cbcf77069a02ae11460a97bdf42fe50f2a66c37810f0f64166cdd12c98764736f6c63430007060033";

type UniswapV2OracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapV2OracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapV2Oracle__factory extends ContractFactory {
  constructor(...args: UniswapV2OracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "UniswapV2Oracle";
  }

  override deploy(
    _factory: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UniswapV2Oracle> {
    return super.deploy(_factory, overrides || {}) as Promise<UniswapV2Oracle>;
  }
  override getDeployTransaction(
    _factory: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_factory, overrides || {});
  }
  override attach(address: string): UniswapV2Oracle {
    return super.attach(address) as UniswapV2Oracle;
  }
  override connect(signer: Signer): UniswapV2Oracle__factory {
    return super.connect(signer) as UniswapV2Oracle__factory;
  }
  static readonly contractName: "UniswapV2Oracle";

  public readonly contractName: "UniswapV2Oracle";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV2OracleInterface {
    return new utils.Interface(_abi) as UniswapV2OracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapV2Oracle {
    return new Contract(address, _abi, signerOrProvider) as UniswapV2Oracle;
  }
}
