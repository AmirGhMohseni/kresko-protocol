/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type { KrStakingHelper, KrStakingHelperInterface } from "../../../../src/contracts/staking/KrStakingHelper";

const _abi = [
    {
        inputs: [
            {
                internalType: "contract IUniswapV2Router02",
                name: "_router",
                type: "address",
            },
            {
                internalType: "contract IUniswapV2Factory",
                name: "_factory",
                type: "address",
            },
            {
                internalType: "contract IKrStaking",
                name: "_staking",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address",
            },
        ],
        name: "ClaimRewardsMulti",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "pid",
                type: "uint256",
            },
        ],
        name: "LiquidityAndStakeAdded",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "pid",
                type: "uint256",
            },
        ],
        name: "LiquidityAndStakeRemoved",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "tokenA",
                type: "address",
            },
            {
                internalType: "address",
                name: "tokenB",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amountADesired",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "amountBDesired",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "amountAMin",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "amountBMin",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
            },
        ],
        name: "addLiquidityAndStake",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
        ],
        name: "claimRewardsMulti",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "factory",
        outputs: [
            {
                internalType: "contract IUniswapV2Factory",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "router",
        outputs: [
            {
                internalType: "contract IUniswapV2Router02",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "staking",
        outputs: [
            {
                internalType: "contract IKrStaking",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "tokenA",
                type: "address",
            },
            {
                internalType: "address",
                name: "tokenB",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "liquidity",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "amountAMin",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "amountBMin",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
            },
        ],
        name: "withdrawAndRemoveLiquidity",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
] as const;

const _bytecode =
    "0x6080346100ce57601f620015b1388190039182017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01683019167ffffffffffffffff8311848410176100d3578084926060946040528339810103126100ce5780516100be9161006d826100e9565b604060208201519161007e836100e9565b01519161008a836100e9565b9160018060a01b0380928160018060a01b031995168560005416176000551683600154161760015516906002541617600255565b6040516114a99081620001088239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff8116036100ce5756fe60406080815260048036101561001457600080fd5b600090813560e01c9283632df56a3f146100935750505080634cf088d91461008a578063b4c29b6814610081578063b6842c6014610078578063c45a01551461006f5763f887ea4014610067575b600080fd5b610062610eec565b50610062610e97565b50610062610cac565b506100626105dc565b50610062610587565b3461055a5760e0367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261055a578135906100ce8261055e565b602435906100db8261055e565b6044359160a435936100ec8561055e565b73ffffffffffffffffffffffffffffffffffffffff85811696909590610113881515610f41565b60015461014a9073ffffffffffffffffffffffffffffffffffffffff165b73ffffffffffffffffffffffffffffffffffffffff1690565b85517fe6a4390500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff80861684830190815290871660208281019190915291959282918791908290819060400103915afa94851561054d575b8b9561051e575b506002546101de9073ffffffffffffffffffffffffffffffffffffffff16610131565b87517fba8fc5bf00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8716858201908152909a918d918a908d9081906020010381845afa8015610511575b829c83916104de575b5061024d90611085565b803b156104da5789517f43a4534b00000000000000000000000000000000000000000000000000000000815233818801908152602081018e9052604081018d905273ffffffffffffffffffffffffffffffffffffffff891660608201528b996103539587958f95929491939092839183919082908490829060800103925af180156104cd575b6104b4575b5080546102fa9073ffffffffffffffffffffffffffffffffffffffff16610131565b8b517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091168a82019081526020810195909552958694859391849160400190565b0393165af180156104a7575b610479575b505089548a906103899073ffffffffffffffffffffffffffffffffffffffff16610131565b85517fbaa2abde00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff938416948101948552968316602085015260408401899052606435606085015260843560808501529390911660a083015260c43560c0830152849291839190829060e00103925af1801561046c575b610440575b5051927f27b4eb450d703cc6355f1bc733710bf45d86de95f33ef1c672786817a5c9265d8585a4f35b61045f90823d8411610465575b6104578183611017565b81019061140b565b50610417565b503d61044d565b610474611051565b610412565b8161049892903d106104a0575b6104908183611017565b8101906110eb565b508a80610364565b503d610486565b6104af611051565b61035f565b806104c16104c792610fbe565b8061057c565b386102d8565b6104d5611051565b6102d3565b5080fd5b61024d9d5061050391508b3d8d1161050a575b6104fb8183611017565b81019061106b565b909c610243565b503d6104f1565b610519611051565b61023a565b8161053f9296503d8711610546575b6105378183611017565b810190611039565b938b6101bb565b503d61052d565b610555611051565b6101b4565b8280fd5b73ffffffffffffffffffffffffffffffffffffffff81160361006257565b600091031261006257565b5034610062576000367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126100625760025460405173ffffffffffffffffffffffffffffffffffffffff9091168152602090f35b503461006257610100367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126100625761061860043561055e565b61062360243561055e565b60c43561062f8161055e565b73ffffffffffffffffffffffffffffffffffffffff8116610651811515610f41565b6001546106739073ffffffffffffffffffffffffffffffffffffffff16610131565b6040517fe6a4390500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff600480358216908301526024803591909116908201529290602090849081806044810103915afa928315610c9f575b600093610c7e575b506002546107089073ffffffffffffffffffffffffffffffffffffffff16610131565b604080517fba8fc5bf00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8616600482015291829060249082905afa8015610c71575b6000918291610c4c575b5061077090611085565b610796604435303360043573ffffffffffffffffffffffffffffffffffffffff1661111a565b6107bc606435303360243573ffffffffffffffffffffffffffffffffffffffff1661111a565b60005461083d906020906107e59073ffffffffffffffffffffffffffffffffffffffff16610131565b6040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116600482015260448035602483015290928391829190820190565b0381600060043573ffffffffffffffffffffffffffffffffffffffff165af18015610c3f575b610c20575b506000546108e9906020906108929073ffffffffffffffffffffffffffffffffffffffff16610131565b6040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152606435602482015291829081906044820190565b0381600060243573ffffffffffffffffffffffffffffffffffffffff165af18015610c13575b610bf4575b506000546109379073ffffffffffffffffffffffffffffffffffffffff16610131565b6040517fe8e3370000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff6004803582169083015260248035919091169082015260448035908201526064803590820152608480359082015260a48035908201523060c482015260e48035908201529490606090869081600081610104810103925af1948515610be7575b600095610bad575b50600254610a6591602091879190610a079073ffffffffffffffffffffffffffffffffffffffff16610131565b6040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116600482015260248101929092529092839190829060009082906044820190565b039273ffffffffffffffffffffffffffffffffffffffff165af18015610ba0575b610b81575b50600254610aae9073ffffffffffffffffffffffffffffffffffffffff16610131565b90813b15610062576040517f0efe6a8b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9390931660048401526024830181905260448301859052610b5d9285926000908290606490829084905af18015610b74575b610b61575b506040519485947f67153b1f92f8a4e823af8ca2fdb93c3d313b9dcb1404c5da9a9c44234a3302e9600087a482526020820190565b0390f35b806104c1610b6e92610fbe565b38610b28565b610b7c611051565b610b23565b610b999060203d6020116104a0576104908183611017565b5038610a8b565b610ba8611051565b610a86565b610a65919550610bd560209160603d8111610be0575b610bcd8183611017565b8101906110ff565b9150509591506109da565b503d610bc3565b610bef611051565b6109d2565b610c0c9060203d6020116104a0576104908183611017565b5038610914565b610c1b611051565b61090f565b610c389060203d6020116104a0576104908183611017565b5038610868565b610c47611051565b610863565b6107709250610c6a915060403d60401161050a576104fb8183611017565b9091610766565b610c79611051565b61075c565b610c9891935060203d602011610546576105378183611017565b91386106e5565b610ca7611051565b6106dd565b5034610062576020367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0112610062576004803590610cea8261055e565b73ffffffffffffffffffffffffffffffffffffffff821690610d0d821515610f41565b600280549091908190610d359073ffffffffffffffffffffffffffffffffffffffff16610131565b92602060409485519485809263040f1f6d60e11b82525afa928315610e8a575b600093610e5a575b5060005b838110610d94576000868651907fac4bb348f20fccad9f5419b8d566bc60a544d193931dc39efe624899e5d068b78383a2f35b8154610db59073ffffffffffffffffffffffffffffffffffffffff16610131565b90813b156100625785517fbf82b7b5000000000000000000000000000000000000000000000000000000008152338582019081526020810183905273ffffffffffffffffffffffffffffffffffffffff8a166040820152610e359360009183919082908490829060600103925af18015610e4d575b610e3a575b50611430565b610d61565b806104c1610e4792610fbe565b38610e2f565b610e55611051565b610e2a565b610e7c91935060203d8111610e83575b610e748183611017565b810190611421565b9138610d5d565b503d610e6a565b610e92611051565b610d55565b5034610062576000367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126100625760015460405173ffffffffffffffffffffffffffffffffffffffff9091168152602090f35b5034610062576000367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126100625760005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602090f35b15610f4857565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4b523a20216164647265737300000000000000000000000000000000000000006044820152606490fd5b50634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff8111610fd257604052565b610fda610fa7565b604052565b60a0810190811067ffffffffffffffff821117610fd257604052565b6040810190811067ffffffffffffffff821117610fd257604052565b90601f8019910116810190811067ffffffffffffffff821117610fd257604052565b90816020910312610062575161104e8161055e565b90565b506040513d6000823e3d90fd5b5190811515820361006257565b91908260409103126100625761104e60208351930161105e565b1561108c57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4b523a2021706f6f6c45786973747300000000000000000000000000000000006044820152606490fd5b908160209103126100625761104e9061105e565b90816060910312610062578051916040602083015192015190565b6040517f23b872dd000000000000000000000000000000000000000000000000000000006020820190815273ffffffffffffffffffffffffffffffffffffffff938416602483015293831660448201526064808201959095529384526111e19392600092839261118986610fdf565b1690826040519561119987610ffb565b602087527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656460208801526111cf843b1515611294565b51925af16111db6112fa565b90611366565b8051806111ec575050565b816020806112019361120695010191016110eb565b611208565b565b1561120f57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608490fd5b1561129b57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b3d15611361573d9067ffffffffffffffff8211611354575b60405191611348601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200184611017565b82523d6000602084013e565b61135c610fa7565b611312565b606090565b90919015611372575090565b8151156113825750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251928360248401526000915b8483106113f25750509180604493116113e5575b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168101030190fd5b60008382840101526113b9565b81830181015186840160440152859350918201916113a5565b9190826040910312610062576020825192015190565b90816020910312610062575190565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461145d5760010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220a48ea7f508685336585a57148b7b16ae71e56b4fe9a7780dd2b8c6575959c0bd64736f6c634300080e0033";

type KrStakingHelperConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: KrStakingHelperConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
    xs.length > 1;

export class KrStakingHelper__factory extends ContractFactory {
    constructor(...args: KrStakingHelperConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args);
        } else {
            super(_abi, _bytecode, args[0]);
        }
        this.contractName = "KrStakingHelper";
    }

    override deploy(
        _router: PromiseOrValue<string>,
        _factory: PromiseOrValue<string>,
        _staking: PromiseOrValue<string>,
        overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<KrStakingHelper> {
        return super.deploy(_router, _factory, _staking, overrides || {}) as Promise<KrStakingHelper>;
    }
    override getDeployTransaction(
        _router: PromiseOrValue<string>,
        _factory: PromiseOrValue<string>,
        _staking: PromiseOrValue<string>,
        overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): TransactionRequest {
        return super.getDeployTransaction(_router, _factory, _staking, overrides || {});
    }
    override attach(address: string): KrStakingHelper {
        return super.attach(address) as KrStakingHelper;
    }
    override connect(signer: Signer): KrStakingHelper__factory {
        return super.connect(signer) as KrStakingHelper__factory;
    }
    static readonly contractName: "KrStakingHelper";

    public readonly contractName: "KrStakingHelper";

    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): KrStakingHelperInterface {
        return new utils.Interface(_abi) as KrStakingHelperInterface;
    }
    static connect(address: string, signerOrProvider: Signer | Provider): KrStakingHelper {
        return new Contract(address, _abi, signerOrProvider) as KrStakingHelper;
    }
}
