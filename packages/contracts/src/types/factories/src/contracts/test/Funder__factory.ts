/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  Funder,
  FunderInterface,
} from "../../../../src/contracts/test/Funder";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_kresko",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Funded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
    ],
    name: "distribute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "drain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "funded",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isEligible",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kresko",
    outputs: [
      {
        internalType: "contract IAccountStateFacet",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "owners",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
    ],
    name: "toggleOwners",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60803461010657601f610946388190039182017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01683019167ffffffffffffffff83118484101761010b57808492602094604052833981010312610106575173ffffffffffffffffffffffffffffffffffffffff811681036101065733600090815260208190526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90921691909117905560405161082490816101228239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001a575b50361561001857005b005b6000803560e01c918263022914a7146100b157505080631826c119146100a857806345f9fc781461009f57806366e305fd146100965780637a9f788d1461008d5780639890220b146100845763d77e128c14610077575b3861000f565b61007f61050b565b610071565b5061007f6104ae565b5061007f6103bd565b5061007f610372565b5061007f610311565b5061007f61016f565b34610117576020367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126101175760ff60406020936004356100f38161011b565b73ffffffffffffffffffffffffffffffffffffffff16815280855220541615158152f35b5080fd5b73ffffffffffffffffffffffffffffffffffffffff81160361013957565b600080fd5b9181601f840112156101395782359167ffffffffffffffff8311610139576020808501948460051b01011161013957565b5034610139576040806003193601126101395760043567ffffffffffffffff8111610139576101a290369060040161013e565b33600090815260208190526040902060243592906101cb906101c6905b5460ff1690565b610560565b82159260005b8381106101da57005b80828482876102046102006101fb6101f66102ed998588610609565b61062f565b61068e565b1590565b610308576000936102a361028a61028a6101f686868961028561025a6102336101f68f9e9d8f9e9d8f9e610609565b73ffffffffffffffffffffffffffffffffffffffff16600090815260016020526040902090565b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b610609565b73ffffffffffffffffffffffffffffffffffffffff1690565b828c6102ff575bf1156102f2575b6102c261028a6101f6838888610609565b7fb436c2bf863ccd7b8f63171201efd4792066b4ce8e543dde9c3e9e9ab98e216c60008951a26105c6565b6101d1565b6102fa610681565b6102b1565b506108fc6102aa565b505050506105c6565b5034610139576020367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126101395760043561034d8161011b565b60018060a01b03166000526001602052602060ff604060002054166040519015158152f35b5034610139576020367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126101395760206103b36004356101fb8161011b565b6040519015158152f35b5034610139576020806003193601126101395760043567ffffffffffffffff8111610139576103f090369060040161013e565b909160009233845283825260409261040d60ff8587205416610560565b845b81811061041b57858551f35b8061042a6104a9928486610609565b356104348161011b565b73ffffffffffffffffffffffffffffffffffffffff168752868552858720546104a49060ff161561049361046c6101f685888a610609565b73ffffffffffffffffffffffffffffffffffffffff16600090815260208190526040902090565b9060ff801983541691151516179055565b6105c6565b61040f565b50346101395760008060031936011261050857338152806020526104d860ff604083205416610560565b80808080478181156104ff575b3390f1156104f257604051f35b6104fa610681565b604051f35b506108fc6104e5565b80fd5b5034610139576000367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126101395760025460405173ffffffffffffffffffffffffffffffffffffffff9091168152602090f35b1561056757565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600260248201527f216f0000000000000000000000000000000000000000000000000000000000006044820152606490fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105f35760010190565b634e487b7160e01b600052601160045260246000fd5b91908110156106195760051b0190565b634e487b7160e01b600052603260045260246000fd5b356106398161011b565b90565b9081602091031261013957604051906020820182811067ffffffffffffffff82111761066b5760405251815290565b634e487b7160e01b600052604160045260246000fd5b506040513d6000823e3d90fd5b66038d7ea4c6800081311090816106db575b816106a9575090565b73ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604090206106399150610200906101bf565b6002546040517fff1389c500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff80841660048301529094935060209185916024918391165afa9283156107e1575b60009361074e575b509091511515906106a0565b60203d81116107da575b601f81017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820167ffffffffffffffff8111838210176107ad576107a59394955060405281019061063c565b919038610742565b7f4e487b710000000000000000000000000000000000000000000000000000000086526041600452602486fd5b503d610758565b6107e9610681565b61073a56fea26469706673582212200bd6842b16e524e470ba8c740faa6bfa7b81e76878636e7d1704ec2dd90eb94164736f6c634300080e0033";

type FunderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FunderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Funder__factory extends ContractFactory {
  constructor(...args: FunderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Funder";
  }

  override deploy(
    _kresko: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Funder> {
    return super.deploy(_kresko, overrides || {}) as Promise<Funder>;
  }
  override getDeployTransaction(
    _kresko: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_kresko, overrides || {});
  }
  override attach(address: string): Funder {
    return super.attach(address) as Funder;
  }
  override connect(signer: Signer): Funder__factory {
    return super.connect(signer) as Funder__factory;
  }
  static readonly contractName: "Funder";

  public readonly contractName: "Funder";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FunderInterface {
    return new utils.Interface(_abi) as FunderInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Funder {
    return new Contract(address, _abi, signerOrProvider) as Funder;
  }
}
