{
    "address": "0xB7E7B5D9C553ea7C8B6274a8079939e9064b46c3",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "_name",
                    "type": "string"
                },
                {
                    "internalType": "string",
                    "name": "_symbol",
                    "type": "string"
                },
                {
                    "internalType": "uint8",
                    "name": "_decimals",
                    "type": "uint8"
                },
                {
                    "internalType": "uint256",
                    "name": "_initialSupply",
                    "type": "uint256"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "inputs": [],
            "name": "DOMAIN_SEPARATOR",
            "outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "allowance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "burn",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "mint",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "minters",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "nonces",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "deadline",
                    "type": "uint256"
                },
                {
                    "internalType": "uint8",
                    "name": "v",
                    "type": "uint8"
                },
                {
                    "internalType": "bytes32",
                    "name": "r",
                    "type": "bytes32"
                },
                {
                    "internalType": "bytes32",
                    "name": "s",
                    "type": "bytes32"
                }
            ],
            "name": "permit",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "_name",
                    "type": "string"
                },
                {
                    "internalType": "string",
                    "name": "_symbol",
                    "type": "string"
                }
            ],
            "name": "reinitializeERC20",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address[]",
                    "name": "_minters",
                    "type": "address[]"
                }
            ],
            "name": "toggleMinters",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "transactionHash": "0xb341e34ea63ba891746e2e745fa7873b27f02ba77532d8443191066408eeb13a",
    "receipt": {
        "to": null,
        "from": "0xDc46c7eA52c6b2ca13D1dB949F79F81Cc0E7193C",
        "contractAddress": "0xB7E7B5D9C553ea7C8B6274a8079939e9064b46c3",
        "transactionIndex": 1,
        "gasUsed": "1456932",
        "logsBloom": "0x
        "blockHash": "0x35c883ae021aeceef12a35ad88149adbba37e8ff96b79a45f29759361beef7db",
        "transactionHash": "0xb341e34ea63ba891746e2e745fa7873b27f02ba77532d8443191066408eeb13a",
        "logs": [
            {
                "transactionIndex": 1,
                "blockNumber": 7376936,
                "transactionHash": "0xb341e34ea63ba891746e2e745fa7873b27f02ba77532d8443191066408eeb13a",
                "address": "0xB7E7B5D9C553ea7C8B6274a8079939e9064b46c3",
                "topics": [
                    "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                    "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "0x000000000000000000000000dc46c7ea52c6b2ca13d1db949f79f81cc0e7193c"
                ],
                "data": "0x00000000000000000000000000000000000000000000d3c21bcecceda1000000",
                "logIndex": 0,
                "blockHash": "0x35c883ae021aeceef12a35ad88149adbba37e8ff96b79a45f29759361beef7db"
            }
        ],
        "blockNumber": 7376936,
        "cumulativeGasUsed": "1503845",
        "status": 1,
        "byzantium": true
    },
    "args": ["krUNNAMED", "krUNNAMED", 18, "1000000000000000000000000"],
    "numDeployments": 1,
    "solcInputHash": "51f4461f5f84db03fe9e96125ef024bf",
    "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"reinitializeERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_minters\",\"type\":\"address[]\"}],\"name\":\"toggleMinters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/test/MockERC20.sol\":\"MockERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@rari-capital/solmate/src/tokens/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Modern and gas efficient ERC20 + EIP-2612 implementation.\\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC20.sol)\\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\\n/// @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\\nabstract contract ERC20 {\\n    /*//////////////////////////////////////////////////////////////\\n                                 EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            METADATA STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    string public name;\\n\\n    string public symbol;\\n\\n    uint8 public immutable decimals;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                              ERC20 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 public totalSupply;\\n\\n    mapping(address => uint256) public balanceOf;\\n\\n    mapping(address => mapping(address => uint256)) public allowance;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            EIP-2612 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 internal immutable INITIAL_CHAIN_ID;\\n\\n    bytes32 internal immutable INITIAL_DOMAIN_SEPARATOR;\\n\\n    mapping(address => uint256) public nonces;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(\\n        string memory _name,\\n        string memory _symbol,\\n        uint8 _decimals\\n    ) {\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = _decimals;\\n\\n        INITIAL_CHAIN_ID = block.chainid;\\n        INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator();\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               ERC20 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function approve(address spender, uint256 amount) public virtual returns (bool) {\\n        allowance[msg.sender][spender] = amount;\\n\\n        emit Approval(msg.sender, spender, amount);\\n\\n        return true;\\n    }\\n\\n    function transfer(address to, uint256 amount) public virtual returns (bool) {\\n        balanceOf[msg.sender] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(msg.sender, to, amount);\\n\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual returns (bool) {\\n        uint256 allowed = allowance[from][msg.sender]; // Saves gas for limited approvals.\\n\\n        if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount;\\n\\n        balanceOf[from] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        return true;\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                             EIP-2612 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) public virtual {\\n        require(deadline >= block.timestamp, \\\"PERMIT_DEADLINE_EXPIRED\\\");\\n\\n        // Unchecked because the only math done is incrementing\\n        // the owner's nonce which cannot realistically overflow.\\n        unchecked {\\n            address recoveredAddress = ecrecover(\\n                keccak256(\\n                    abi.encodePacked(\\n                        \\\"\\\\x19\\\\x01\\\",\\n                        DOMAIN_SEPARATOR(),\\n                        keccak256(\\n                            abi.encode(\\n                                keccak256(\\n                                    \\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\"\\n                                ),\\n                                owner,\\n                                spender,\\n                                value,\\n                                nonces[owner]++,\\n                                deadline\\n                            )\\n                        )\\n                    )\\n                ),\\n                v,\\n                r,\\n                s\\n            );\\n\\n            require(recoveredAddress != address(0) && recoveredAddress == owner, \\\"INVALID_SIGNER\\\");\\n\\n            allowance[recoveredAddress][spender] = value;\\n        }\\n\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {\\n        return block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator();\\n    }\\n\\n    function computeDomainSeparator() internal view virtual returns (bytes32) {\\n        return\\n            keccak256(\\n                abi.encode(\\n                    keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"),\\n                    keccak256(bytes(name)),\\n                    keccak256(\\\"1\\\"),\\n                    block.chainid,\\n                    address(this)\\n                )\\n            );\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                        INTERNAL MINT/BURN LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _mint(address to, uint256 amount) internal virtual {\\n        totalSupply += amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(address(0), to, amount);\\n    }\\n\\n    function _burn(address from, uint256 amount) internal virtual {\\n        balanceOf[from] -= amount;\\n\\n        // Cannot underflow because a user's balance\\n        // will never be larger than the total supply.\\n        unchecked {\\n            totalSupply -= amount;\\n        }\\n\\n        emit Transfer(from, address(0), amount);\\n    }\\n}\\n\",\"keccak256\":\"0x0240f7703cff32a61ee3e9fbb339e09a944260432a9ef37debf3692b1a6c8049\",\"license\":\"AGPL-3.0-only\"},\"src/contracts/test/MockERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.14;\\n\\nimport {ERC20} from \\\"@rari-capital/solmate/src/tokens/ERC20.sol\\\";\\n\\ncontract MockERC20 is ERC20 {\\n    mapping(address => bool) public minters;\\n    address owner;\\n\\n    constructor(\\n        string memory _name,\\n        string memory _symbol,\\n        uint8 _decimals,\\n        uint256 _initialSupply\\n    ) ERC20(_name, _symbol, _decimals) {\\n        _mint(msg.sender, _initialSupply);\\n        minters[msg.sender] = true;\\n        owner = msg.sender;\\n    }\\n\\n    function reinitializeERC20(string memory _name, string memory _symbol) external {\\n        require(msg.sender == owner, \\\"!owner\\\");\\n        name = _name;\\n        symbol = _symbol;\\n    }\\n\\n    function toggleMinters(address[] calldata _minters) external {\\n        require(minters[msg.sender], \\\"!minter\\\");\\n        for (uint256 i; i < _minters.length; i++) {\\n            minters[_minters[i]] = !minters[_minters[i]];\\n        }\\n    }\\n\\n    function mint(address to, uint256 value) public virtual {\\n        require(minters[msg.sender], \\\"!minter\\\");\\n        _mint(to, value);\\n    }\\n\\n    function burn(address from, uint256 value) public virtual {\\n        require(minters[msg.sender], \\\"!minter\\\");\\n        _burn(from, value);\\n    }\\n}\\n\",\"keccak256\":\"0xf24fb5b3a1e62cad691ac1961e4046d299976c54ee7246648076986b4de1249f\",\"license\":\"MIT\"}},\"version\":1}",
    "bytecode": "0x60e08060405234620000b85762001e068038038091620000208285620000d4565b83398101608082820312620000b857815167ffffffffffffffff90818111620000b857826200005191850162000126565b916020840151918211620000b8576200006c91840162000126565b60408301519060ff82168203620000b85760606200008d94015192620001de565b60405161166b90816200079b8239608051816108a1015260a0518161115e015260c051816111850152f35b600080fd5b50634e487b7160e01b600052604160045260246000fd5b601f9091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01681019067ffffffffffffffff8211908210176200011757604052565b62000121620000bd565b604052565b9080601f83011215620000b85781519067ffffffffffffffff8211620001ce575b6040519260209162000181601f85017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016840186620000d4565b838552828483010111620000b85782906000905b83838310620001b557505011620001ab57505090565b6000918301015290565b8193508281939201015182828801015201839162000195565b620001d8620000bd565b62000147565b8051919493929167ffffffffffffffff811162000397575b60009162000210826200020a8554620003a7565b620003e4565b60209081601f8411600114620002e45750918084926200026d989994620002529692620002d8575b50508160011b916000199060031b1c191617905562000498565b6080524660a05262000263620005d7565b60c0523362000728565b336000908152600660205260409020620002ac9080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b600780547fffffffffffffffffffffffff00000000000000000000000000000000000000001633179055565b01519050388062000238565b6000805291907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe084167f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639386905b8282106200037e5750509260019285926200026d9a9b966200025298961062000364575b505050811b01905562000498565b015160001960f88460031b161c1916905538808062000356565b8060018697829497870151815501960194019062000332565b620003a1620000bd565b620001f6565b90600182811c92168015620003d9575b6020831014620003c357565b634e487b7160e01b600052602260045260246000fd5b91607f1691620003b7565b601f8111620003f1575050565b60009081805260208220906020601f850160051c8301941062000431575b601f0160051c01915b8281106200042557505050565b81815560010162000418565b90925082906200040f565b90601f82116200044a575050565b60019160009083825260208220906020601f850160051c830194106200048d575b601f0160051c01915b828110620004825750505050565b818155830162000474565b90925082906200046b565b805190919067ffffffffffffffff8111620005c7575b600190620004c881620004c28454620003a7565b6200043c565b602080601f83116001146200052457508192939460009262000518575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600383901b1c191690821b179055565b015190503880620004e5565b60016000527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08316959091907fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6926000905b888210620005af575050838596971062000595575b505050811b019055565b015160001960f88460031b161c191690553880806200058b565b80878596829496860151815501950193019062000576565b620005d1620000bd565b620004ae565b604051600090815490620005eb82620003a7565b92838252602093848301936001908181169081600014620006f05750600114620006b0575b505091816200062a620006aa936200069b950382620000d4565b519020604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f95810195865260208601929092527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc69085015246606085015230608085015291829060a0850190565b03601f198101835282620000d4565b51902090565b908592506000805282600020916000925b828410620006da57505050820101816200062a62000610565b80548685018601528794909301928101620006c1565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168652505050604082019050816200062a62000610565b6002549082198211620007845760207fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91846000940160025560018060a01b0316938484526003825260408420818154019055604051908152a3565b634e487b7160e01b600052601160045260246000fdfe60806040526004361015610013575b600080fd5b60003560e01c806306fdde0314610167578063095ea7b31461015e5780630ce403f41461015557806318160ddd1461014c57806323b872dd14610143578063313ce5671461013a5780633644e5151461013157806340c10f191461012857806370a082311461011f5780637ecebe001461011657806395d89b411461010d5780639dc29fac14610104578063a9059cbb146100fb578063d505accf146100f2578063dd62ed3e146100e9578063e8aa4527146100e05763f46eccc4146100d857600080fd5b61000e610ff1565b5061000e610f7a565b5061000e610ef8565b5061000e610cc2565b5061000e610c07565b5061000e610b35565b5061000e610a8f565b5061000e610a33565b5061000e6109d7565b5061000e610907565b5061000e6108c5565b5061000e610868565b5061000e6106e0565b5061000e6106a3565b5061000e6104ba565b5061000e61037c565b5061000e610265565b90600182811c921680156101a0575b602083101461018a57565b634e487b7160e01b600052602260045260246000fd5b91607f169161017f565b50634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176101e357604052565b6101eb6101aa565b604052565b919091602080825283519081818401526000945b82861061024f575050806040939411610242575b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016010190565b6000838284010152610218565b8581018201518487016040015294810194610204565b503461000e5760008060031936011261035b576040519080805461028881610170565b8085529160019180831690811561031c57506001146102c2575b6102be856102b2818703826101c1565b604051918291826101f0565b0390f35b80809450527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b8284106103045750505081016020016102b2826102be6102a2565b805460208587018101919091529093019281016102e9565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016602087015250506040840192506102b291508390506102be6102a2565b80fd5b73ffffffffffffffffffffffffffffffffffffffff81160361000e57565b503461000e576040367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e576004356103b88161035e565b60243590336000526004602052816103e68260406000209060018060a01b0316600052602052604060002090565b5560405191825273ffffffffffffffffffffffffffffffffffffffff169033907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590602090a3602060405160018152f35b81601f8201121561000e5780359067ffffffffffffffff82116104ad575b6040519261048b601f84017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016602001856101c1565b8284526020838301011161000e57816000926020809301838601378301015290565b6104b56101aa565b610455565b503461000e576040367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e5767ffffffffffffffff60043581811161000e5761050b903690600401610437565b60243582811161000e57610523903690600401610437565b60075473ffffffffffffffffffffffffffffffffffffffff163303610644578151928311610637575b6000926105628161055d8654610170565b611307565b602080601f83116001146105a75750819061059794869261059c575b50508160011b916000199060031b1c19161783556113eb565b604051f35b01519050388061057e565b919293601f1984166105da600080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56390565b9387905b82821061061f57505091600193918561059797969410610606575b505050811b0183556113eb565b015160001960f88460031b161c191690553880806105f9565b806001869782949787015181550196019401906105de565b61063f6101aa565b61054c565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f216f776e657200000000000000000000000000000000000000000000000000006044820152606490fd5b503461000e576000367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e576020600254604051908152f35b503461000e576060367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e5760043561071c8161035e565b602435906107298261035e565b73ffffffffffffffffffffffffffffffffffffffff818116600081815260046020908152604080832033845290915290206044359491937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9392916107be919087905460018101610813575b505073ffffffffffffffffffffffffffffffffffffffff16600090815260036020526040902090565b6107c9868254611069565b905573ffffffffffffffffffffffffffffffffffffffff81166000908152600360205260409020805486019055604051948552169280602081015b0390a360405160018152602090f35b81811061085b575b036108533361083c8460018060a01b03166000526004602052604060002090565b9060018060a01b0316600052602052604060002090565b558638610795565b610863611052565b61081b565b503461000e576000367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e57602060405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b503461000e576000367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e5760206108ff611159565b604051908152f35b503461000e576040367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e5760206004356109458161035e565b602435907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60009384923384526006825261098660ff6040862054166114ff565b84600254811981116109ca575b0160025573ffffffffffffffffffffffffffffffffffffffff168084526003825260408085208054870190555194855293a3604051f35b6109d2611052565b610993565b503461000e576020367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e57600435610a138161035e565b60018060a01b031660005260036020526020604060002054604051908152f35b503461000e576020367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e57600435610a6f8161035e565b60018060a01b031660005260056020526020604060002054604051908152f35b503461000e5760008060031936011261035b5760405190806001805491610ab583610170565b8086529282811690811561031c5750600114610adb576102be856102b2818703826101c1565b92508083527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b828410610b1d5750505081016020016102b2826102be6102a2565b80546020858701810191909152909301928101610b02565b503461000e576040367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e576020600435610b738161035e565b6024357fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600093849333855260068252610bb360ff6040872054166114ff565b73ffffffffffffffffffffffffffffffffffffffff16808552600382526040852080549194918290818110610bfa575b0390558060025403600255604051908152a3604051f35b610c02611052565b610be3565b503461000e576040367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e57600435610c438161035e565b602435903360005260036020526040600020828154818110610cb5575b03905560018060a01b03169081600052600360205260406000208181540190557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef604051806108043394829190602083019252565b610cbd611052565b610c60565b503461000e5760e0367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e57600435610cfe8161035e565b602435610d0a8161035e565b604435906064359060843560ff8116810361000e5760006020917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92594610d5242821015611080565b610e39610e45610d60611159565b928a8a610dfc610d828360018060a01b03166000526005602052604060002090565b805460018101909155604080517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98d820190815273ffffffffffffffffffffffffffffffffffffffff9687166020820152958e16918601919091526060850193909352608084015260a083019390935291829060c0830190565b0391610e10601f19938481018352826101c1565b5190206040519384918983019687909160429261190160f01b8352600283015260228201520190565b039081018352826101c1565b5190206040805191825260ff92909216602082015260a4359181019190915260c435606082015281805260809060015afa15610eeb575b6000519083610ecd8261083c60018060a01b0395610ea68782168015159081610edf575b506110f3565b73ffffffffffffffffffffffffffffffffffffffff16600090815260046020526040902090565b556040519384528116931691602090a3005b9050888c161438610ea0565b610ef36110e6565b610e7c565b503461000e576040367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e576020610f71600435610f398161035e565b60243590610f468261035e565b60018060a01b03166000526004835260406000209060018060a01b0316600052602052604060002090565b54604051908152f35b503461000e576020367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e5760043567ffffffffffffffff80821161000e573660238301121561000e57816004013590811161000e573660248260051b8401011161000e576024610fef920161158b565b005b503461000e576020367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e5760043561102d8161035e565b60018060a01b03166000526006602052602060ff604060002054166040519015158152f35b50634e487b7160e01b600052601160045260246000fd5b818110611074570390565b61107c611052565b0390565b1561108757565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f5045524d49545f444541444c494e455f455850495245440000000000000000006044820152606490fd5b506040513d6000823e3d90fd5b156110fa57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f494e56414c49445f5349474e45520000000000000000000000000000000000006044820152606490fd5b6000467f0000000000000000000000000000000000000000000000000000000000000000036111a757507f000000000000000000000000000000000000000000000000000000000000000090565b60405181549190816111b884610170565b808352602094858401946001918281169081156112cc5750600114611274575b50505091816111ef61126e936112609503826101c1565b519020604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f95810195865260208601929092527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc69085015246606085015230608085015291829060a0850190565b03601f1981018352826101c1565b51902090565b91908693508280527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b8284106112b757505050820101816111ef61126e6111d8565b8054868501860152879490930192810161129e565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001687525050506040830191508290506111ef61126e6111d8565b601f8111611313575050565b6000908180527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563906020601f850160051c8301941061136d575b601f0160051c01915b82811061136257505050565b818155600101611356565b909250829061134d565b90601f8211611384575050565b6001916000908382527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6906020601f850160051c830194106113e1575b601f0160051c01915b8281106113d75750505050565b81815583016113ca565b90925082906113c1565b90815167ffffffffffffffff81116114f2575b6001906114148161140f8454610170565b611377565b602080601f831160011461146d575081929394600092611462575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600383901b1c191690821b179055565b01519050388061142f565b90601f198316956114a060016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf690565b926000905b8882106114db57505083859697106114c2575b505050811b019055565b015160001960f88460031b161c191690553880806114b8565b8087859682949686015181550195019301906114a5565b6114fa6101aa565b6113fe565b1561150657565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f216d696e746572000000000000000000000000000000000000000000000000006044820152606490fd5b91908110156115755760051b0190565b634e487b7160e01b600052603260045260246000fd5b33600052600660205260ff906115a782604060002054166114ff565b60005b8381106115b75750505050565b80836115fa6115c96001948887611565565b356115d38161035e565b73ffffffffffffffffffffffffffffffffffffffff16600090815260066020526040902090565b54161561160b6115c9838887611565565b908560ff1983541691161790556000198114611628575b016115aa565b611630611052565b61162256fea2646970667358221220e1390d3b01d2e8d6119e400ccb473606903869ec9d191f1778c418e2ad807f5764736f6c634300080e0033",
    "deployedBytecode": "0x60806040526004361015610013575b600080fd5b60003560e01c806306fdde0314610167578063095ea7b31461015e5780630ce403f41461015557806318160ddd1461014c57806323b872dd14610143578063313ce5671461013a5780633644e5151461013157806340c10f191461012857806370a082311461011f5780637ecebe001461011657806395d89b411461010d5780639dc29fac14610104578063a9059cbb146100fb578063d505accf146100f2578063dd62ed3e146100e9578063e8aa4527146100e05763f46eccc4146100d857600080fd5b61000e610ff1565b5061000e610f7a565b5061000e610ef8565b5061000e610cc2565b5061000e610c07565b5061000e610b35565b5061000e610a8f565b5061000e610a33565b5061000e6109d7565b5061000e610907565b5061000e6108c5565b5061000e610868565b5061000e6106e0565b5061000e6106a3565b5061000e6104ba565b5061000e61037c565b5061000e610265565b90600182811c921680156101a0575b602083101461018a57565b634e487b7160e01b600052602260045260246000fd5b91607f169161017f565b50634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176101e357604052565b6101eb6101aa565b604052565b919091602080825283519081818401526000945b82861061024f575050806040939411610242575b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016010190565b6000838284010152610218565b8581018201518487016040015294810194610204565b503461000e5760008060031936011261035b576040519080805461028881610170565b8085529160019180831690811561031c57506001146102c2575b6102be856102b2818703826101c1565b604051918291826101f0565b0390f35b80809450527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b8284106103045750505081016020016102b2826102be6102a2565b805460208587018101919091529093019281016102e9565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016602087015250506040840192506102b291508390506102be6102a2565b80fd5b73ffffffffffffffffffffffffffffffffffffffff81160361000e57565b503461000e576040367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e576004356103b88161035e565b60243590336000526004602052816103e68260406000209060018060a01b0316600052602052604060002090565b5560405191825273ffffffffffffffffffffffffffffffffffffffff169033907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590602090a3602060405160018152f35b81601f8201121561000e5780359067ffffffffffffffff82116104ad575b6040519261048b601f84017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016602001856101c1565b8284526020838301011161000e57816000926020809301838601378301015290565b6104b56101aa565b610455565b503461000e576040367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e5767ffffffffffffffff60043581811161000e5761050b903690600401610437565b60243582811161000e57610523903690600401610437565b60075473ffffffffffffffffffffffffffffffffffffffff163303610644578151928311610637575b6000926105628161055d8654610170565b611307565b602080601f83116001146105a75750819061059794869261059c575b50508160011b916000199060031b1c19161783556113eb565b604051f35b01519050388061057e565b919293601f1984166105da600080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56390565b9387905b82821061061f57505091600193918561059797969410610606575b505050811b0183556113eb565b015160001960f88460031b161c191690553880806105f9565b806001869782949787015181550196019401906105de565b61063f6101aa565b61054c565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f216f776e657200000000000000000000000000000000000000000000000000006044820152606490fd5b503461000e576000367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e576020600254604051908152f35b503461000e576060367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e5760043561071c8161035e565b602435906107298261035e565b73ffffffffffffffffffffffffffffffffffffffff818116600081815260046020908152604080832033845290915290206044359491937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9392916107be919087905460018101610813575b505073ffffffffffffffffffffffffffffffffffffffff16600090815260036020526040902090565b6107c9868254611069565b905573ffffffffffffffffffffffffffffffffffffffff81166000908152600360205260409020805486019055604051948552169280602081015b0390a360405160018152602090f35b81811061085b575b036108533361083c8460018060a01b03166000526004602052604060002090565b9060018060a01b0316600052602052604060002090565b558638610795565b610863611052565b61081b565b503461000e576000367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e57602060405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b503461000e576000367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e5760206108ff611159565b604051908152f35b503461000e576040367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e5760206004356109458161035e565b602435907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60009384923384526006825261098660ff6040862054166114ff565b84600254811981116109ca575b0160025573ffffffffffffffffffffffffffffffffffffffff168084526003825260408085208054870190555194855293a3604051f35b6109d2611052565b610993565b503461000e576020367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e57600435610a138161035e565b60018060a01b031660005260036020526020604060002054604051908152f35b503461000e576020367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e57600435610a6f8161035e565b60018060a01b031660005260056020526020604060002054604051908152f35b503461000e5760008060031936011261035b5760405190806001805491610ab583610170565b8086529282811690811561031c5750600114610adb576102be856102b2818703826101c1565b92508083527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b828410610b1d5750505081016020016102b2826102be6102a2565b80546020858701810191909152909301928101610b02565b503461000e576040367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e576020600435610b738161035e565b6024357fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600093849333855260068252610bb360ff6040872054166114ff565b73ffffffffffffffffffffffffffffffffffffffff16808552600382526040852080549194918290818110610bfa575b0390558060025403600255604051908152a3604051f35b610c02611052565b610be3565b503461000e576040367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e57600435610c438161035e565b602435903360005260036020526040600020828154818110610cb5575b03905560018060a01b03169081600052600360205260406000208181540190557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef604051806108043394829190602083019252565b610cbd611052565b610c60565b503461000e5760e0367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e57600435610cfe8161035e565b602435610d0a8161035e565b604435906064359060843560ff8116810361000e5760006020917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92594610d5242821015611080565b610e39610e45610d60611159565b928a8a610dfc610d828360018060a01b03166000526005602052604060002090565b805460018101909155604080517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98d820190815273ffffffffffffffffffffffffffffffffffffffff9687166020820152958e16918601919091526060850193909352608084015260a083019390935291829060c0830190565b0391610e10601f19938481018352826101c1565b5190206040519384918983019687909160429261190160f01b8352600283015260228201520190565b039081018352826101c1565b5190206040805191825260ff92909216602082015260a4359181019190915260c435606082015281805260809060015afa15610eeb575b6000519083610ecd8261083c60018060a01b0395610ea68782168015159081610edf575b506110f3565b73ffffffffffffffffffffffffffffffffffffffff16600090815260046020526040902090565b556040519384528116931691602090a3005b9050888c161438610ea0565b610ef36110e6565b610e7c565b503461000e576040367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e576020610f71600435610f398161035e565b60243590610f468261035e565b60018060a01b03166000526004835260406000209060018060a01b0316600052602052604060002090565b54604051908152f35b503461000e576020367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e5760043567ffffffffffffffff80821161000e573660238301121561000e57816004013590811161000e573660248260051b8401011161000e576024610fef920161158b565b005b503461000e576020367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e5760043561102d8161035e565b60018060a01b03166000526006602052602060ff604060002054166040519015158152f35b50634e487b7160e01b600052601160045260246000fd5b818110611074570390565b61107c611052565b0390565b1561108757565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f5045524d49545f444541444c494e455f455850495245440000000000000000006044820152606490fd5b506040513d6000823e3d90fd5b156110fa57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f494e56414c49445f5349474e45520000000000000000000000000000000000006044820152606490fd5b6000467f0000000000000000000000000000000000000000000000000000000000000000036111a757507f000000000000000000000000000000000000000000000000000000000000000090565b60405181549190816111b884610170565b808352602094858401946001918281169081156112cc5750600114611274575b50505091816111ef61126e936112609503826101c1565b519020604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f95810195865260208601929092527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc69085015246606085015230608085015291829060a0850190565b03601f1981018352826101c1565b51902090565b91908693508280527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b8284106112b757505050820101816111ef61126e6111d8565b8054868501860152879490930192810161129e565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001687525050506040830191508290506111ef61126e6111d8565b601f8111611313575050565b6000908180527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563906020601f850160051c8301941061136d575b601f0160051c01915b82811061136257505050565b818155600101611356565b909250829061134d565b90601f8211611384575050565b6001916000908382527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6906020601f850160051c830194106113e1575b601f0160051c01915b8281106113d75750505050565b81815583016113ca565b90925082906113c1565b90815167ffffffffffffffff81116114f2575b6001906114148161140f8454610170565b611377565b602080601f831160011461146d575081929394600092611462575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600383901b1c191690821b179055565b01519050388061142f565b90601f198316956114a060016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf690565b926000905b8882106114db57505083859697106114c2575b505050811b019055565b015160001960f88460031b161c191690553880806114b8565b8087859682949686015181550195019301906114a5565b6114fa6101aa565b6113fe565b1561150657565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f216d696e746572000000000000000000000000000000000000000000000000006044820152606490fd5b91908110156115755760051b0190565b634e487b7160e01b600052603260045260246000fd5b33600052600660205260ff906115a782604060002054166114ff565b60005b8381106115b75750505050565b80836115fa6115c96001948887611565565b356115d38161035e565b73ffffffffffffffffffffffffffffffffffffffff16600090815260066020526040902090565b54161561160b6115c9838887611565565b908560ff1983541691161790556000198114611628575b016115aa565b611630611052565b61162256fea2646970667358221220e1390d3b01d2e8d6119e400ccb473606903869ec9d191f1778c418e2ad807f5764736f6c634300080e0033",
    "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
    },
    "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 1210,
                "contract": "src/contracts/test/MockERC20.sol:MockERC20",
                "label": "name",
                "offset": 0,
                "slot": "0",
                "type": "t_string_storage"
            },
            {
                "astId": 1212,
                "contract": "src/contracts/test/MockERC20.sol:MockERC20",
                "label": "symbol",
                "offset": 0,
                "slot": "1",
                "type": "t_string_storage"
            },
            {
                "astId": 1216,
                "contract": "src/contracts/test/MockERC20.sol:MockERC20",
                "label": "totalSupply",
                "offset": 0,
                "slot": "2",
                "type": "t_uint256"
            },
            {
                "astId": 1220,
                "contract": "src/contracts/test/MockERC20.sol:MockERC20",
                "label": "balanceOf",
                "offset": 0,
                "slot": "3",
                "type": "t_mapping(t_address,t_uint256)"
            },
            {
                "astId": 1226,
                "contract": "src/contracts/test/MockERC20.sol:MockERC20",
                "label": "allowance",
                "offset": 0,
                "slot": "4",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
            },
            {
                "astId": 1234,
                "contract": "src/contracts/test/MockERC20.sol:MockERC20",
                "label": "nonces",
                "offset": 0,
                "slot": "5",
                "type": "t_mapping(t_address,t_uint256)"
            },
            {
                "astId": 19159,
                "contract": "src/contracts/test/MockERC20.sol:MockERC20",
                "label": "minters",
                "offset": 0,
                "slot": "6",
                "type": "t_mapping(t_address,t_bool)"
            },
            {
                "astId": 19161,
                "contract": "src/contracts/test/MockERC20.sol:MockERC20",
                "label": "owner",
                "offset": 0,
                "slot": "7",
                "type": "t_address"
            }
        ],
        "types": {
            "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
            },
            "t_bool": {
                "encoding": "inplace",
                "label": "bool",
                "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => bool)",
                "numberOfBytes": "32",
                "value": "t_bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => mapping(address => uint256))",
                "numberOfBytes": "32",
                "value": "t_mapping(t_address,t_uint256)"
            },
            "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
            },
            "t_string_storage": {
                "encoding": "bytes",
                "label": "string",
                "numberOfBytes": "32"
            },
            "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
            }
        }
    }
}
