{
  "address": "0x9aa5127598c3b5Abdf0757d80818909CcaB67d95",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_decimals",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_initialSupply",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "minters",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_minters",
          "type": "address[]"
        }
      ],
      "name": "toggleMinters",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x6f72f8bfcf78798ac8f2aedd4abca5dae05758cfd49ede2952c79100576bb40b",
  "receipt": {
    "to": null,
    "from": "0x2121245dcAD697f11244068AaD6EcbC301811239",
    "contractAddress": "0x9aa5127598c3b5Abdf0757d80818909CcaB67d95",
    "transactionIndex": 0,
    "gasUsed": "1748202",
    "logsBloom": "0x
    "blockHash": "0x1194b793322c5e6a3643195e91bb854638312b2c27b56a2bd5b8355e9b24f328",
    "transactionHash": "0x6f72f8bfcf78798ac8f2aedd4abca5dae05758cfd49ede2952c79100576bb40b",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 3601005,
        "transactionHash": "0x6f72f8bfcf78798ac8f2aedd4abca5dae05758cfd49ede2952c79100576bb40b",
        "address": "0x9aa5127598c3b5Abdf0757d80818909CcaB67d95",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000002121245dcad697f11244068aad6ecbc301811239"
        ],
        "data": "0x00000000000000000000000000000000000000000000d3c21bcecceda1000000",
        "logIndex": 0,
        "blockHash": "0x1194b793322c5e6a3643195e91bb854638312b2c27b56a2bd5b8355e9b24f328"
      }
    ],
    "blockNumber": 3601005,
    "cumulativeGasUsed": "1748202",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "Kresko Testnet Staking Reward 2",
    "krREWARD2",
    18,
    "1000000000000000000000000"
  ],
  "numDeployments": 1,
  "solcInputHash": "fb19f3b1d3aeb8423671cfe6035044de",
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_minters\",\"type\":\"address[]\"}],\"name\":\"toggleMinters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/test/MockERC20.sol\":\"MockERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@rari-capital/solmate/src/tokens/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Modern and gas efficient ERC20 + EIP-2612 implementation.\\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC20.sol)\\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\\n/// @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\\nabstract contract ERC20 {\\n    /*//////////////////////////////////////////////////////////////\\n                                 EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            METADATA STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    string public name;\\n\\n    string public symbol;\\n\\n    uint8 public immutable decimals;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                              ERC20 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 public totalSupply;\\n\\n    mapping(address => uint256) public balanceOf;\\n\\n    mapping(address => mapping(address => uint256)) public allowance;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            EIP-2612 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 internal immutable INITIAL_CHAIN_ID;\\n\\n    bytes32 internal immutable INITIAL_DOMAIN_SEPARATOR;\\n\\n    mapping(address => uint256) public nonces;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(\\n        string memory _name,\\n        string memory _symbol,\\n        uint8 _decimals\\n    ) {\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = _decimals;\\n\\n        INITIAL_CHAIN_ID = block.chainid;\\n        INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator();\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               ERC20 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function approve(address spender, uint256 amount) public virtual returns (bool) {\\n        allowance[msg.sender][spender] = amount;\\n\\n        emit Approval(msg.sender, spender, amount);\\n\\n        return true;\\n    }\\n\\n    function transfer(address to, uint256 amount) public virtual returns (bool) {\\n        balanceOf[msg.sender] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(msg.sender, to, amount);\\n\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual returns (bool) {\\n        uint256 allowed = allowance[from][msg.sender]; // Saves gas for limited approvals.\\n\\n        if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount;\\n\\n        balanceOf[from] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        return true;\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                             EIP-2612 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) public virtual {\\n        require(deadline >= block.timestamp, \\\"PERMIT_DEADLINE_EXPIRED\\\");\\n\\n        // Unchecked because the only math done is incrementing\\n        // the owner's nonce which cannot realistically overflow.\\n        unchecked {\\n            address recoveredAddress = ecrecover(\\n                keccak256(\\n                    abi.encodePacked(\\n                        \\\"\\\\x19\\\\x01\\\",\\n                        DOMAIN_SEPARATOR(),\\n                        keccak256(\\n                            abi.encode(\\n                                keccak256(\\n                                    \\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\"\\n                                ),\\n                                owner,\\n                                spender,\\n                                value,\\n                                nonces[owner]++,\\n                                deadline\\n                            )\\n                        )\\n                    )\\n                ),\\n                v,\\n                r,\\n                s\\n            );\\n\\n            require(recoveredAddress != address(0) && recoveredAddress == owner, \\\"INVALID_SIGNER\\\");\\n\\n            allowance[recoveredAddress][spender] = value;\\n        }\\n\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {\\n        return block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator();\\n    }\\n\\n    function computeDomainSeparator() internal view virtual returns (bytes32) {\\n        return\\n            keccak256(\\n                abi.encode(\\n                    keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"),\\n                    keccak256(bytes(name)),\\n                    keccak256(\\\"1\\\"),\\n                    block.chainid,\\n                    address(this)\\n                )\\n            );\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                        INTERNAL MINT/BURN LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _mint(address to, uint256 amount) internal virtual {\\n        totalSupply += amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(address(0), to, amount);\\n    }\\n\\n    function _burn(address from, uint256 amount) internal virtual {\\n        balanceOf[from] -= amount;\\n\\n        // Cannot underflow because a user's balance\\n        // will never be larger than the total supply.\\n        unchecked {\\n            totalSupply -= amount;\\n        }\\n\\n        emit Transfer(from, address(0), amount);\\n    }\\n}\\n\",\"keccak256\":\"0x0240f7703cff32a61ee3e9fbb339e09a944260432a9ef37debf3692b1a6c8049\",\"license\":\"AGPL-3.0-only\"},\"src/contracts/test/MockERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.14;\\n\\nimport {ERC20} from \\\"@rari-capital/solmate/src/tokens/ERC20.sol\\\";\\n\\ncontract MockERC20 is ERC20 {\\n    mapping(address => bool) public minters;\\n\\n    constructor(\\n        string memory _name,\\n        string memory _symbol,\\n        uint8 _decimals,\\n        uint256 _initialSupply\\n    ) ERC20(_name, _symbol, _decimals) {\\n        _mint(msg.sender, _initialSupply);\\n        minters[msg.sender] = true;\\n    }\\n\\n    function toggleMinters(address[] calldata _minters) external {\\n        require(minters[msg.sender], \\\"!minter\\\");\\n        for (uint256 i; i < _minters.length; i++) {\\n            minters[_minters[i]] = !minters[_minters[i]];\\n        }\\n    }\\n\\n    function mint(address to, uint256 value) public virtual {\\n        require(minters[msg.sender], \\\"!minter\\\");\\n        _mint(to, value);\\n    }\\n\\n    function burn(address from, uint256 value) public virtual {\\n        require(minters[msg.sender], \\\"!minter\\\");\\n        _burn(from, value);\\n    }\\n}\\n\",\"keccak256\":\"0xbc4f19ac61b02e74f6bcfeccd868f190672cc804187a8b947d74fd4a0f39eb9b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60e06040523480156200001157600080fd5b50604051620024c0380380620024c083398181016040528101906200003791906200053a565b83838382600090805190602001906200005292919062000274565b5081600190805190602001906200006b92919062000274565b508060ff1660808160ff16815250504660a08181525050620000926200011060201b60201c565b60c08181525050505050620000ae3382620001a060201b60201c565b6001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050505062000889565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620001449190620006f9565b60405180910390207fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc646306040516020016200018595949392919062000783565b60405160208183030381529060405280519060200120905090565b8060026000828254620001b491906200080f565b9250508190555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200026891906200086c565b60405180910390a35050565b828054620002829062000619565b90600052602060002090601f016020900481019282620002a65760008555620002f2565b82601f10620002c157805160ff1916838001178555620002f2565b82800160010185558215620002f2579182015b82811115620002f1578251825591602001919060010190620002d4565b5b50905062000301919062000305565b5090565b5b808211156200032057600081600090555060010162000306565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200038d8262000342565b810181811067ffffffffffffffff82111715620003af57620003ae62000353565b5b80604052505050565b6000620003c462000324565b9050620003d2828262000382565b919050565b600067ffffffffffffffff821115620003f557620003f462000353565b5b620004008262000342565b9050602081019050919050565b60005b838110156200042d57808201518184015260208101905062000410565b838111156200043d576000848401525b50505050565b60006200045a6200045484620003d7565b620003b8565b9050828152602081018484840111156200047957620004786200033d565b5b620004868482856200040d565b509392505050565b600082601f830112620004a657620004a562000338565b5b8151620004b884826020860162000443565b91505092915050565b600060ff82169050919050565b620004d981620004c1565b8114620004e557600080fd5b50565b600081519050620004f981620004ce565b92915050565b6000819050919050565b6200051481620004ff565b81146200052057600080fd5b50565b600081519050620005348162000509565b92915050565b600080600080608085870312156200055757620005566200032e565b5b600085015167ffffffffffffffff81111562000578576200057762000333565b5b62000586878288016200048e565b945050602085015167ffffffffffffffff811115620005aa57620005a962000333565b5b620005b8878288016200048e565b9350506040620005cb87828801620004e8565b9250506060620005de8782880162000523565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200063257607f821691505b602082108103620006485762000647620005ea565b5b50919050565b600081905092915050565b60008190508160005260206000209050919050565b600081546200067d8162000619565b6200068981866200064e565b94506001821660008114620006a75760018114620006b957620006f0565b60ff19831686528186019350620006f0565b620006c48562000659565b60005b83811015620006e857815481890152600182019150602081019050620006c7565b838801955050505b50505092915050565b60006200070782846200066e565b915081905092915050565b6000819050919050565b620007278162000712565b82525050565b6200073881620004ff565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200076b826200073e565b9050919050565b6200077d816200075e565b82525050565b600060a0820190506200079a60008301886200071c565b620007a960208301876200071c565b620007b860408301866200071c565b620007c760608301856200072d565b620007d6608083018462000772565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200081c82620004ff565b91506200082983620004ff565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620008615762000860620007e0565b5b828201905092915050565b60006020820190506200088360008301846200072d565b92915050565b60805160a05160c051611c07620008b96000396000610787015260006107530152600061072d0152611c076000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80637ecebe0011610097578063d505accf11610066578063d505accf146102c3578063dd62ed3e146102df578063e8aa45271461030f578063f46eccc41461032b57610100565b80637ecebe001461022957806395d89b41146102595780639dc29fac14610277578063a9059cbb1461029357610100565b8063313ce567116100d3578063313ce567146101a15780633644e515146101bf57806340c10f19146101dd57806370a08231146101f957610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd1461015357806323b872dd14610171575b600080fd5b61010d61035b565b60405161011a9190611259565b60405180910390f35b61013d60048036038101906101389190611319565b6103e9565b60405161014a9190611374565b60405180910390f35b61015b6104db565b604051610168919061139e565b60405180910390f35b61018b600480360381019061018691906113b9565b6104e1565b6040516101989190611374565b60405180910390f35b6101a961072b565b6040516101b69190611428565b60405180910390f35b6101c761074f565b6040516101d4919061145c565b60405180910390f35b6101f760048036038101906101f29190611319565b6107ac565b005b610213600480360381019061020e9190611477565b610846565b604051610220919061139e565b60405180910390f35b610243600480360381019061023e9190611477565b61085e565b604051610250919061139e565b60405180910390f35b610261610876565b60405161026e9190611259565b60405180910390f35b610291600480360381019061028c9190611319565b610904565b005b6102ad60048036038101906102a89190611319565b61099e565b6040516102ba9190611374565b60405180910390f35b6102dd60048036038101906102d891906114fc565b610ab2565b005b6102f960048036038101906102f4919061159e565b610dab565b604051610306919061139e565b60405180910390f35b61032960048036038101906103249190611643565b610dd0565b005b61034560048036038101906103409190611477565b610f74565b6040516103529190611374565b60405180910390f35b60008054610368906116bf565b80601f0160208091040260200160405190810160405280929190818152602001828054610394906116bf565b80156103e15780601f106103b6576101008083540402835291602001916103e1565b820191906000526020600020905b8154815290600101906020018083116103c457829003601f168201915b505050505081565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104c9919061139e565b60405180910390a36001905092915050565b60025481565b600080600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610617578281610596919061171f565b600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b82600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610666919061171f565b9250508190555082600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef85604051610717919061139e565b60405180910390a360019150509392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f0000000000000000000000000000000000000000000000000000000000000000461461078557610780610f94565b6107a7565b7f00000000000000000000000000000000000000000000000000000000000000005b905090565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610838576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082f9061179f565b60405180910390fd5b6108428282611020565b5050565b60036020528060005260406000206000915090505481565b60056020528060005260406000206000915090505481565b60018054610883906116bf565b80601f01602080910402602001604051908101604052809291908181526020018280546108af906116bf565b80156108fc5780601f106108d1576101008083540402835291602001916108fc565b820191906000526020600020905b8154815290600101906020018083116108df57829003601f168201915b505050505081565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610990576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109879061179f565b60405180910390fd5b61099a82826110f0565b5050565b600081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109ef919061171f565b9250508190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610aa0919061139e565b60405180910390a36001905092915050565b42841015610af5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aec9061180b565b60405180910390fd5b60006001610b0161074f565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98a8a8a600560008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558b604051602001610b899695949392919061183a565b60405160208183030381529060405280519060200120604051602001610bb0929190611913565b6040516020818303038152906040528051906020012085858560405160008152602001604052604051610be6949392919061194a565b6020604051602081039080840390855afa158015610c08573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610c7c57508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610cbb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb2906119db565b60405180910390fd5b85600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92587604051610d9a919061139e565b60405180910390a350505050505050565b6004602052816000526040600020602052806000526040600020600091509150505481565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610e5c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e539061179f565b60405180910390fd5b60005b82829050811015610f6f5760066000848484818110610e8157610e806119fb565b5b9050602002016020810190610e969190611477565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161560066000858585818110610ef657610ef56119fb565b5b9050602002016020810190610f0b9190611477565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508080610f6790611a2a565b915050610e5f565b505050565b60066020528060005260406000206000915054906101000a900460ff1681565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051610fc69190611b11565b60405180910390207fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc64630604051602001611005959493929190611b28565b60405160208183030381529060405280519060200120905090565b80600260008282546110329190611b7b565b9250508190555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516110e4919061139e565b60405180910390a35050565b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461113f919061171f565b9250508190555080600260008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516111b4919061139e565b60405180910390a35050565b600081519050919050565b600082825260208201905092915050565b60005b838110156111fa5780820151818401526020810190506111df565b83811115611209576000848401525b50505050565b6000601f19601f8301169050919050565b600061122b826111c0565b61123581856111cb565b93506112458185602086016111dc565b61124e8161120f565b840191505092915050565b600060208201905081810360008301526112738184611220565b905092915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112b082611285565b9050919050565b6112c0816112a5565b81146112cb57600080fd5b50565b6000813590506112dd816112b7565b92915050565b6000819050919050565b6112f6816112e3565b811461130157600080fd5b50565b600081359050611313816112ed565b92915050565b600080604083850312156113305761132f61127b565b5b600061133e858286016112ce565b925050602061134f85828601611304565b9150509250929050565b60008115159050919050565b61136e81611359565b82525050565b60006020820190506113896000830184611365565b92915050565b611398816112e3565b82525050565b60006020820190506113b3600083018461138f565b92915050565b6000806000606084860312156113d2576113d161127b565b5b60006113e0868287016112ce565b93505060206113f1868287016112ce565b925050604061140286828701611304565b9150509250925092565b600060ff82169050919050565b6114228161140c565b82525050565b600060208201905061143d6000830184611419565b92915050565b6000819050919050565b61145681611443565b82525050565b6000602082019050611471600083018461144d565b92915050565b60006020828403121561148d5761148c61127b565b5b600061149b848285016112ce565b91505092915050565b6114ad8161140c565b81146114b857600080fd5b50565b6000813590506114ca816114a4565b92915050565b6114d981611443565b81146114e457600080fd5b50565b6000813590506114f6816114d0565b92915050565b600080600080600080600060e0888a03121561151b5761151a61127b565b5b60006115298a828b016112ce565b975050602061153a8a828b016112ce565b965050604061154b8a828b01611304565b955050606061155c8a828b01611304565b945050608061156d8a828b016114bb565b93505060a061157e8a828b016114e7565b92505060c061158f8a828b016114e7565b91505092959891949750929550565b600080604083850312156115b5576115b461127b565b5b60006115c3858286016112ce565b92505060206115d4858286016112ce565b9150509250929050565b600080fd5b600080fd5b600080fd5b60008083601f840112611603576116026115de565b5b8235905067ffffffffffffffff8111156116205761161f6115e3565b5b60208301915083602082028301111561163c5761163b6115e8565b5b9250929050565b6000806020838503121561165a5761165961127b565b5b600083013567ffffffffffffffff81111561167857611677611280565b5b611684858286016115ed565b92509250509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806116d757607f821691505b6020821081036116ea576116e9611690565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061172a826112e3565b9150611735836112e3565b925082821015611748576117476116f0565b5b828203905092915050565b7f216d696e74657200000000000000000000000000000000000000000000000000600082015250565b60006117896007836111cb565b915061179482611753565b602082019050919050565b600060208201905081810360008301526117b88161177c565b9050919050565b7f5045524d49545f444541444c494e455f45585049524544000000000000000000600082015250565b60006117f56017836111cb565b9150611800826117bf565b602082019050919050565b60006020820190508181036000830152611824816117e8565b9050919050565b611834816112a5565b82525050565b600060c08201905061184f600083018961144d565b61185c602083018861182b565b611869604083018761182b565b611876606083018661138f565b611883608083018561138f565b61189060a083018461138f565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b60006118dc60028361189b565b91506118e7826118a6565b600282019050919050565b6000819050919050565b61190d61190882611443565b6118f2565b82525050565b600061191e826118cf565b915061192a82856118fc565b60208201915061193a82846118fc565b6020820191508190509392505050565b600060808201905061195f600083018761144d565b61196c6020830186611419565b611979604083018561144d565b611986606083018461144d565b95945050505050565b7f494e56414c49445f5349474e4552000000000000000000000000000000000000600082015250565b60006119c5600e836111cb565b91506119d08261198f565b602082019050919050565b600060208201905081810360008301526119f4816119b8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611a35826112e3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611a6757611a666116f0565b5b600182019050919050565b600081905092915050565b60008190508160005260206000209050919050565b60008154611a9f816116bf565b611aa98186611a72565b94506001821660008114611ac45760018114611ad557611b08565b60ff19831686528186019350611b08565b611ade85611a7d565b60005b83811015611b0057815481890152600182019150602081019050611ae1565b838801955050505b50505092915050565b6000611b1d8284611a92565b915081905092915050565b600060a082019050611b3d600083018861144d565b611b4a602083018761144d565b611b57604083018661144d565b611b64606083018561138f565b611b71608083018461182b565b9695505050505050565b6000611b86826112e3565b9150611b91836112e3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611bc657611bc56116f0565b5b82820190509291505056fea2646970667358221220277f88fd84f77d570842af39ecabfbe5a025ef04df3aa623330299dbe12aab0b64736f6c634300080e0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c80637ecebe0011610097578063d505accf11610066578063d505accf146102c3578063dd62ed3e146102df578063e8aa45271461030f578063f46eccc41461032b57610100565b80637ecebe001461022957806395d89b41146102595780639dc29fac14610277578063a9059cbb1461029357610100565b8063313ce567116100d3578063313ce567146101a15780633644e515146101bf57806340c10f19146101dd57806370a08231146101f957610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd1461015357806323b872dd14610171575b600080fd5b61010d61035b565b60405161011a9190611259565b60405180910390f35b61013d60048036038101906101389190611319565b6103e9565b60405161014a9190611374565b60405180910390f35b61015b6104db565b604051610168919061139e565b60405180910390f35b61018b600480360381019061018691906113b9565b6104e1565b6040516101989190611374565b60405180910390f35b6101a961072b565b6040516101b69190611428565b60405180910390f35b6101c761074f565b6040516101d4919061145c565b60405180910390f35b6101f760048036038101906101f29190611319565b6107ac565b005b610213600480360381019061020e9190611477565b610846565b604051610220919061139e565b60405180910390f35b610243600480360381019061023e9190611477565b61085e565b604051610250919061139e565b60405180910390f35b610261610876565b60405161026e9190611259565b60405180910390f35b610291600480360381019061028c9190611319565b610904565b005b6102ad60048036038101906102a89190611319565b61099e565b6040516102ba9190611374565b60405180910390f35b6102dd60048036038101906102d891906114fc565b610ab2565b005b6102f960048036038101906102f4919061159e565b610dab565b604051610306919061139e565b60405180910390f35b61032960048036038101906103249190611643565b610dd0565b005b61034560048036038101906103409190611477565b610f74565b6040516103529190611374565b60405180910390f35b60008054610368906116bf565b80601f0160208091040260200160405190810160405280929190818152602001828054610394906116bf565b80156103e15780601f106103b6576101008083540402835291602001916103e1565b820191906000526020600020905b8154815290600101906020018083116103c457829003601f168201915b505050505081565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104c9919061139e565b60405180910390a36001905092915050565b60025481565b600080600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610617578281610596919061171f565b600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b82600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610666919061171f565b9250508190555082600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef85604051610717919061139e565b60405180910390a360019150509392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f0000000000000000000000000000000000000000000000000000000000000000461461078557610780610f94565b6107a7565b7f00000000000000000000000000000000000000000000000000000000000000005b905090565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610838576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082f9061179f565b60405180910390fd5b6108428282611020565b5050565b60036020528060005260406000206000915090505481565b60056020528060005260406000206000915090505481565b60018054610883906116bf565b80601f01602080910402602001604051908101604052809291908181526020018280546108af906116bf565b80156108fc5780601f106108d1576101008083540402835291602001916108fc565b820191906000526020600020905b8154815290600101906020018083116108df57829003601f168201915b505050505081565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610990576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109879061179f565b60405180910390fd5b61099a82826110f0565b5050565b600081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109ef919061171f565b9250508190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610aa0919061139e565b60405180910390a36001905092915050565b42841015610af5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aec9061180b565b60405180910390fd5b60006001610b0161074f565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98a8a8a600560008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558b604051602001610b899695949392919061183a565b60405160208183030381529060405280519060200120604051602001610bb0929190611913565b6040516020818303038152906040528051906020012085858560405160008152602001604052604051610be6949392919061194a565b6020604051602081039080840390855afa158015610c08573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610c7c57508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610cbb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb2906119db565b60405180910390fd5b85600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92587604051610d9a919061139e565b60405180910390a350505050505050565b6004602052816000526040600020602052806000526040600020600091509150505481565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610e5c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e539061179f565b60405180910390fd5b60005b82829050811015610f6f5760066000848484818110610e8157610e806119fb565b5b9050602002016020810190610e969190611477565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161560066000858585818110610ef657610ef56119fb565b5b9050602002016020810190610f0b9190611477565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508080610f6790611a2a565b915050610e5f565b505050565b60066020528060005260406000206000915054906101000a900460ff1681565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051610fc69190611b11565b60405180910390207fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc64630604051602001611005959493929190611b28565b60405160208183030381529060405280519060200120905090565b80600260008282546110329190611b7b565b9250508190555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516110e4919061139e565b60405180910390a35050565b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461113f919061171f565b9250508190555080600260008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516111b4919061139e565b60405180910390a35050565b600081519050919050565b600082825260208201905092915050565b60005b838110156111fa5780820151818401526020810190506111df565b83811115611209576000848401525b50505050565b6000601f19601f8301169050919050565b600061122b826111c0565b61123581856111cb565b93506112458185602086016111dc565b61124e8161120f565b840191505092915050565b600060208201905081810360008301526112738184611220565b905092915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112b082611285565b9050919050565b6112c0816112a5565b81146112cb57600080fd5b50565b6000813590506112dd816112b7565b92915050565b6000819050919050565b6112f6816112e3565b811461130157600080fd5b50565b600081359050611313816112ed565b92915050565b600080604083850312156113305761132f61127b565b5b600061133e858286016112ce565b925050602061134f85828601611304565b9150509250929050565b60008115159050919050565b61136e81611359565b82525050565b60006020820190506113896000830184611365565b92915050565b611398816112e3565b82525050565b60006020820190506113b3600083018461138f565b92915050565b6000806000606084860312156113d2576113d161127b565b5b60006113e0868287016112ce565b93505060206113f1868287016112ce565b925050604061140286828701611304565b9150509250925092565b600060ff82169050919050565b6114228161140c565b82525050565b600060208201905061143d6000830184611419565b92915050565b6000819050919050565b61145681611443565b82525050565b6000602082019050611471600083018461144d565b92915050565b60006020828403121561148d5761148c61127b565b5b600061149b848285016112ce565b91505092915050565b6114ad8161140c565b81146114b857600080fd5b50565b6000813590506114ca816114a4565b92915050565b6114d981611443565b81146114e457600080fd5b50565b6000813590506114f6816114d0565b92915050565b600080600080600080600060e0888a03121561151b5761151a61127b565b5b60006115298a828b016112ce565b975050602061153a8a828b016112ce565b965050604061154b8a828b01611304565b955050606061155c8a828b01611304565b945050608061156d8a828b016114bb565b93505060a061157e8a828b016114e7565b92505060c061158f8a828b016114e7565b91505092959891949750929550565b600080604083850312156115b5576115b461127b565b5b60006115c3858286016112ce565b92505060206115d4858286016112ce565b9150509250929050565b600080fd5b600080fd5b600080fd5b60008083601f840112611603576116026115de565b5b8235905067ffffffffffffffff8111156116205761161f6115e3565b5b60208301915083602082028301111561163c5761163b6115e8565b5b9250929050565b6000806020838503121561165a5761165961127b565b5b600083013567ffffffffffffffff81111561167857611677611280565b5b611684858286016115ed565b92509250509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806116d757607f821691505b6020821081036116ea576116e9611690565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061172a826112e3565b9150611735836112e3565b925082821015611748576117476116f0565b5b828203905092915050565b7f216d696e74657200000000000000000000000000000000000000000000000000600082015250565b60006117896007836111cb565b915061179482611753565b602082019050919050565b600060208201905081810360008301526117b88161177c565b9050919050565b7f5045524d49545f444541444c494e455f45585049524544000000000000000000600082015250565b60006117f56017836111cb565b9150611800826117bf565b602082019050919050565b60006020820190508181036000830152611824816117e8565b9050919050565b611834816112a5565b82525050565b600060c08201905061184f600083018961144d565b61185c602083018861182b565b611869604083018761182b565b611876606083018661138f565b611883608083018561138f565b61189060a083018461138f565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b60006118dc60028361189b565b91506118e7826118a6565b600282019050919050565b6000819050919050565b61190d61190882611443565b6118f2565b82525050565b600061191e826118cf565b915061192a82856118fc565b60208201915061193a82846118fc565b6020820191508190509392505050565b600060808201905061195f600083018761144d565b61196c6020830186611419565b611979604083018561144d565b611986606083018461144d565b95945050505050565b7f494e56414c49445f5349474e4552000000000000000000000000000000000000600082015250565b60006119c5600e836111cb565b91506119d08261198f565b602082019050919050565b600060208201905081810360008301526119f4816119b8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611a35826112e3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611a6757611a666116f0565b5b600182019050919050565b600081905092915050565b60008190508160005260206000209050919050565b60008154611a9f816116bf565b611aa98186611a72565b94506001821660008114611ac45760018114611ad557611b08565b60ff19831686528186019350611b08565b611ade85611a7d565b60005b83811015611b0057815481890152600182019150602081019050611ae1565b838801955050505b50505092915050565b6000611b1d8284611a92565b915081905092915050565b600060a082019050611b3d600083018861144d565b611b4a602083018761144d565b611b57604083018661144d565b611b64606083018561138f565b611b71608083018461182b565b9695505050505050565b6000611b86826112e3565b9150611b91836112e3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611bc657611bc56116f0565b5b82820190509291505056fea2646970667358221220277f88fd84f77d570842af39ecabfbe5a025ef04df3aa623330299dbe12aab0b64736f6c634300080e0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 20,
        "contract": "src/contracts/test/MockERC20.sol:MockERC20",
        "label": "name",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 22,
        "contract": "src/contracts/test/MockERC20.sol:MockERC20",
        "label": "symbol",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 26,
        "contract": "src/contracts/test/MockERC20.sol:MockERC20",
        "label": "totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 30,
        "contract": "src/contracts/test/MockERC20.sol:MockERC20",
        "label": "balanceOf",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 36,
        "contract": "src/contracts/test/MockERC20.sol:MockERC20",
        "label": "allowance",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 44,
        "contract": "src/contracts/test/MockERC20.sol:MockERC20",
        "label": "nonces",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 397,
        "contract": "src/contracts/test/MockERC20.sol:MockERC20",
        "label": "minters",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}