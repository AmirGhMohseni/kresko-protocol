{
  "address": "0x993292a225a3A919cf78742c17923916126e2AB9",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_decimals",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_initialSupply",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "minters",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "name": "reinitializeERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_minters",
          "type": "address[]"
        }
      ],
      "name": "toggleMinters",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xbe9df637a6fae9a8505823f6dd8f1573cb4c11bb3a9fe04b53acec128fb345f5",
  "receipt": {
    "to": null,
    "from": "0xDc46c7eA52c6b2ca13D1dB949F79F81Cc0E7193C",
    "contractAddress": "0x993292a225a3A919cf78742c17923916126e2AB9",
    "transactionIndex": 2,
    "gasUsed": "1457021",
    "logsBloom": "0x
    "blockHash": "0xa75b82126be019bc56c470d8889b9a9aefdd45936aae10030ead693422999474",
    "transactionHash": "0xbe9df637a6fae9a8505823f6dd8f1573cb4c11bb3a9fe04b53acec128fb345f5",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 9113015,
        "transactionHash": "0xbe9df637a6fae9a8505823f6dd8f1573cb4c11bb3a9fe04b53acec128fb345f5",
        "address": "0x993292a225a3A919cf78742c17923916126e2AB9",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000dc46c7ea52c6b2ca13d1db949f79f81cc0e7193c"
        ],
        "data": "0x00000000000000000000000000000000000000000052b7d2dcc80cd2e4000000",
        "logIndex": 2,
        "blockHash": "0xa75b82126be019bc56c470d8889b9a9aefdd45936aae10030ead693422999474"
      }
    ],
    "blockNumber": 9113015,
    "cumulativeGasUsed": "1606797",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "ExternalToken2",
    "EXT2",
    18,
    "100000000000000000000000000"
  ],
  "numDeployments": 1,
  "solcInputHash": "132f8a5e141524ab1988167b21417b03",
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"reinitializeERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_minters\",\"type\":\"address[]\"}],\"name\":\"toggleMinters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/test/MockERC20.sol\":\"MockERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@rari-capital/solmate/src/tokens/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Modern and gas efficient ERC20 + EIP-2612 implementation.\\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC20.sol)\\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\\n/// @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\\nabstract contract ERC20 {\\n    /*//////////////////////////////////////////////////////////////\\n                                 EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            METADATA STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    string public name;\\n\\n    string public symbol;\\n\\n    uint8 public immutable decimals;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                              ERC20 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 public totalSupply;\\n\\n    mapping(address => uint256) public balanceOf;\\n\\n    mapping(address => mapping(address => uint256)) public allowance;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            EIP-2612 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 internal immutable INITIAL_CHAIN_ID;\\n\\n    bytes32 internal immutable INITIAL_DOMAIN_SEPARATOR;\\n\\n    mapping(address => uint256) public nonces;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(\\n        string memory _name,\\n        string memory _symbol,\\n        uint8 _decimals\\n    ) {\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = _decimals;\\n\\n        INITIAL_CHAIN_ID = block.chainid;\\n        INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator();\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               ERC20 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function approve(address spender, uint256 amount) public virtual returns (bool) {\\n        allowance[msg.sender][spender] = amount;\\n\\n        emit Approval(msg.sender, spender, amount);\\n\\n        return true;\\n    }\\n\\n    function transfer(address to, uint256 amount) public virtual returns (bool) {\\n        balanceOf[msg.sender] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(msg.sender, to, amount);\\n\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual returns (bool) {\\n        uint256 allowed = allowance[from][msg.sender]; // Saves gas for limited approvals.\\n\\n        if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount;\\n\\n        balanceOf[from] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        return true;\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                             EIP-2612 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) public virtual {\\n        require(deadline >= block.timestamp, \\\"PERMIT_DEADLINE_EXPIRED\\\");\\n\\n        // Unchecked because the only math done is incrementing\\n        // the owner's nonce which cannot realistically overflow.\\n        unchecked {\\n            address recoveredAddress = ecrecover(\\n                keccak256(\\n                    abi.encodePacked(\\n                        \\\"\\\\x19\\\\x01\\\",\\n                        DOMAIN_SEPARATOR(),\\n                        keccak256(\\n                            abi.encode(\\n                                keccak256(\\n                                    \\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\"\\n                                ),\\n                                owner,\\n                                spender,\\n                                value,\\n                                nonces[owner]++,\\n                                deadline\\n                            )\\n                        )\\n                    )\\n                ),\\n                v,\\n                r,\\n                s\\n            );\\n\\n            require(recoveredAddress != address(0) && recoveredAddress == owner, \\\"INVALID_SIGNER\\\");\\n\\n            allowance[recoveredAddress][spender] = value;\\n        }\\n\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {\\n        return block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator();\\n    }\\n\\n    function computeDomainSeparator() internal view virtual returns (bytes32) {\\n        return\\n            keccak256(\\n                abi.encode(\\n                    keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"),\\n                    keccak256(bytes(name)),\\n                    keccak256(\\\"1\\\"),\\n                    block.chainid,\\n                    address(this)\\n                )\\n            );\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                        INTERNAL MINT/BURN LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _mint(address to, uint256 amount) internal virtual {\\n        totalSupply += amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(address(0), to, amount);\\n    }\\n\\n    function _burn(address from, uint256 amount) internal virtual {\\n        balanceOf[from] -= amount;\\n\\n        // Cannot underflow because a user's balance\\n        // will never be larger than the total supply.\\n        unchecked {\\n            totalSupply -= amount;\\n        }\\n\\n        emit Transfer(from, address(0), amount);\\n    }\\n}\\n\",\"keccak256\":\"0x0240f7703cff32a61ee3e9fbb339e09a944260432a9ef37debf3692b1a6c8049\",\"license\":\"AGPL-3.0-only\"},\"src/contracts/test/MockERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.14;\\n\\nimport {ERC20} from \\\"@rari-capital/solmate/src/tokens/ERC20.sol\\\";\\n\\ncontract MockERC20 is ERC20 {\\n    mapping(address => bool) public minters;\\n    address public owner;\\n\\n    constructor(\\n        string memory _name,\\n        string memory _symbol,\\n        uint8 _decimals,\\n        uint256 _initialSupply\\n    ) ERC20(_name, _symbol, _decimals) {\\n        _mint(msg.sender, _initialSupply);\\n        minters[msg.sender] = true;\\n    }\\n\\n    function reinitializeERC20(string memory _name, string memory _symbol) external {\\n        require(msg.sender == owner, \\\"!owner\\\");\\n        name = _name;\\n        symbol = _symbol;\\n    }\\n\\n    function toggleMinters(address[] calldata _minters) external {\\n        require(minters[msg.sender], \\\"!minter\\\");\\n        for (uint256 i; i < _minters.length; i++) {\\n            minters[_minters[i]] = !minters[_minters[i]];\\n        }\\n    }\\n\\n    function mint(address to, uint256 value) public virtual {\\n        require(minters[msg.sender], \\\"!minter\\\");\\n        _mint(to, value);\\n    }\\n\\n    function burn(address from, uint256 value) public virtual {\\n        require(minters[msg.sender], \\\"!minter\\\");\\n        _burn(from, value);\\n    }\\n}\\n\",\"keccak256\":\"0x880b5311dc0c934dbd2708161167701e7ac2683331dc01a299c2bf0314b4c9c3\",\"license\":\"AGPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x60e08060405234620000b85762001e458038038091620000208285620000d4565b83398101608082820312620000b857815167ffffffffffffffff90818111620000b857826200005191850162000126565b916020840151918211620000b8576200006c91840162000126565b60408301519060ff82168203620000b85760606200008d94015192620001de565b6040516116d49081620007718239608051816108b5015260a051816111c7015260c051816111ee0152f35b600080fd5b50634e487b7160e01b600052604160045260246000fd5b601f9091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01681019067ffffffffffffffff8211908210176200011757604052565b62000121620000bd565b604052565b9080601f83011215620000b85781519067ffffffffffffffff8211620001ce575b6040519260209162000181601f85017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016840186620000d4565b838552828483010111620000b85782906000905b83838310620001b557505011620001ab57505090565b6000918301015290565b8193508281939201015182828801015201839162000195565b620001d8620000bd565b62000147565b8051919493929167ffffffffffffffff81116200036d575b60009162000210826200020a85546200037d565b620003ba565b60209081601f8411600114620002ba5750918084926200026d989994620002529692620002ae575b50508160011b916000199060031b1c19161790556200046e565b6080524660a05262000263620005ad565b60c05233620006fe565b336000908152600660205260409020620002ac9080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b565b01519050388062000238565b6000805291907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe084167f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639386905b828210620003545750509260019285926200026d9a9b96620002529896106200033a575b505050811b0190556200046e565b015160001960f88460031b161c191690553880806200032c565b8060018697829497870151815501960194019062000308565b62000377620000bd565b620001f6565b90600182811c92168015620003af575b60208310146200039957565b634e487b7160e01b600052602260045260246000fd5b91607f16916200038d565b601f8111620003c7575050565b60009081805260208220906020601f850160051c8301941062000407575b601f0160051c01915b828110620003fb57505050565b818155600101620003ee565b9092508290620003e5565b90601f821162000420575050565b60019160009083825260208220906020601f850160051c8301941062000463575b601f0160051c01915b828110620004585750505050565b81815583016200044a565b909250829062000441565b805190919067ffffffffffffffff81116200059d575b6001906200049e816200049884546200037d565b62000412565b602080601f8311600114620004fa575081929394600092620004ee575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600383901b1c191690821b179055565b015190503880620004bb565b60016000527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08316959091907fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6926000905b8882106200058557505083859697106200056b575b505050811b019055565b015160001960f88460031b161c1916905538808062000561565b8087859682949686015181550195019301906200054c565b620005a7620000bd565b62000484565b604051600090815490620005c1826200037d565b92838252602093848301936001908181169081600014620006c6575060011462000686575b5050918162000600620006809362000671950382620000d4565b519020604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f95810195865260208601929092527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc69085015246606085015230608085015291829060a0850190565b03601f198101835282620000d4565b51902090565b908592506000805282600020916000925b828410620006b0575050508201018162000600620005e6565b8054868501860152879490930192810162000697565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686525050506040820190508162000600620005e6565b60025490821982116200075a5760207fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91846000940160025560018060a01b0316938484526003825260408420818154019055604051908152a3565b634e487b7160e01b600052601160045260246000fdfe60806040526004361015610013575b600080fd5b60003560e01c806306fdde031461017b578063095ea7b3146101725780630ce403f41461016957806318160ddd1461016057806323b872dd14610157578063313ce5671461014e5780633644e5151461014557806340c10f191461013c57806370a08231146101335780637ecebe001461012a5780638da5cb5b1461012157806395d89b41146101185780639dc29fac1461010f578063a9059cbb14610106578063d505accf146100fd578063dd62ed3e146100f4578063e8aa4527146100eb5763f46eccc4146100e357600080fd5b61000e61105a565b5061000e610fe3565b5061000e610f61565b5061000e610d2b565b5061000e610c70565b5061000e610b9e565b5061000e610af8565b5061000e610aa3565b5061000e610a47565b5061000e6109eb565b5061000e61091b565b5061000e6108d9565b5061000e61087c565b5061000e6106f4565b5061000e6106b7565b5061000e6104ce565b5061000e610390565b5061000e610279565b90600182811c921680156101b4575b602083101461019e57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610193565b50634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176101f757604052565b6101ff6101be565b604052565b919091602080825283519081818401526000945b828610610263575050806040939411610256575b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016010190565b600083828401015261022c565b8581018201518487016040015294810194610218565b503461000e5760008060031936011261036f576040519080805461029c81610184565b8085529160019180831690811561033057506001146102d6575b6102d2856102c6818703826101d5565b60405191829182610204565b0390f35b80809450527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b8284106103185750505081016020016102c6826102d26102b6565b805460208587018101919091529093019281016102fd565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016602087015250506040840192506102c691508390506102d26102b6565b80fd5b73ffffffffffffffffffffffffffffffffffffffff81160361000e57565b503461000e576040367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e576004356103cc81610372565b60243590336000526004602052816103fa8260406000209060018060a01b0316600052602052604060002090565b5560405191825273ffffffffffffffffffffffffffffffffffffffff169033907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590602090a3602060405160018152f35b81601f8201121561000e5780359067ffffffffffffffff82116104c1575b6040519261049f601f84017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016602001856101d5565b8284526020838301011161000e57816000926020809301838601378301015290565b6104c96101be565b610469565b503461000e576040367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e5767ffffffffffffffff60043581811161000e5761051f90369060040161044b565b60243582811161000e5761053790369060040161044b565b60075473ffffffffffffffffffffffffffffffffffffffff16330361065857815192831161064b575b600092610576816105718654610184565b611370565b602080601f83116001146105bb575081906105ab9486926105b0575b50508160011b916000199060031b1c1916178355611454565b604051f35b015190503880610592565b919293601f1984166105ee600080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56390565b9387905b8282106106335750509160019391856105ab9796941061061a575b505050811b018355611454565b015160001960f88460031b161c1916905538808061060d565b806001869782949787015181550196019401906105f2565b6106536101be565b610560565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f216f776e657200000000000000000000000000000000000000000000000000006044820152606490fd5b503461000e576000367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e576020600254604051908152f35b503461000e576060367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e5760043561073081610372565b6024359061073d82610372565b73ffffffffffffffffffffffffffffffffffffffff818116600081815260046020908152604080832033845290915290206044359491937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9392916107d2919087905460018101610827575b505073ffffffffffffffffffffffffffffffffffffffff16600090815260036020526040902090565b6107dd8682546110d2565b905573ffffffffffffffffffffffffffffffffffffffff81166000908152600360205260409020805486019055604051948552169280602081015b0390a360405160018152602090f35b81811061086f575b03610867336108508460018060a01b03166000526004602052604060002090565b9060018060a01b0316600052602052604060002090565b5586386107a9565b6108776110bb565b61082f565b503461000e576000367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e57602060405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b503461000e576000367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e5760206109136111c2565b604051908152f35b503461000e576040367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e57602060043561095981610372565b602435907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60009384923384526006825261099a60ff604086205416611568565b84600254811981116109de575b0160025573ffffffffffffffffffffffffffffffffffffffff168084526003825260408085208054870190555194855293a3604051f35b6109e66110bb565b6109a7565b503461000e576020367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e57600435610a2781610372565b60018060a01b031660005260036020526020604060002054604051908152f35b503461000e576020367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e57600435610a8381610372565b60018060a01b031660005260056020526020604060002054604051908152f35b503461000e576000367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e5760075460405173ffffffffffffffffffffffffffffffffffffffff9091168152602090f35b503461000e5760008060031936011261036f5760405190806001805491610b1e83610184565b808652928281169081156103305750600114610b44576102d2856102c6818703826101d5565b92508083527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b828410610b865750505081016020016102c6826102d26102b6565b80546020858701810191909152909301928101610b6b565b503461000e576040367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e576020600435610bdc81610372565b6024357fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600093849333855260068252610c1c60ff604087205416611568565b73ffffffffffffffffffffffffffffffffffffffff16808552600382526040852080549194918290818110610c63575b0390558060025403600255604051908152a3604051f35b610c6b6110bb565b610c4c565b503461000e576040367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e57600435610cac81610372565b602435903360005260036020526040600020828154818110610d1e575b03905560018060a01b03169081600052600360205260406000208181540190557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef604051806108183394829190602083019252565b610d266110bb565b610cc9565b503461000e5760e0367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e57600435610d6781610372565b602435610d7381610372565b604435906064359060843560ff8116810361000e5760006020917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92594610dbb428210156110e9565b610ea2610eae610dc96111c2565b928a8a610e65610deb8360018060a01b03166000526005602052604060002090565b805460018101909155604080517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98d820190815273ffffffffffffffffffffffffffffffffffffffff9687166020820152958e16918601919091526060850193909352608084015260a083019390935291829060c0830190565b0391610e79601f19938481018352826101d5565b5190206040519384918983019687909160429261190160f01b8352600283015260228201520190565b039081018352826101d5565b5190206040805191825260ff92909216602082015260a4359181019190915260c435606082015281805260809060015afa15610f54575b6000519083610f368261085060018060a01b0395610f0f8782168015159081610f48575b5061115c565b73ffffffffffffffffffffffffffffffffffffffff16600090815260046020526040902090565b556040519384528116931691602090a3005b9050888c161438610f09565b610f5c61114f565b610ee5565b503461000e576040367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e576020610fda600435610fa281610372565b60243590610faf82610372565b60018060a01b03166000526004835260406000209060018060a01b0316600052602052604060002090565b54604051908152f35b503461000e576020367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e5760043567ffffffffffffffff80821161000e573660238301121561000e57816004013590811161000e573660248260051b8401011161000e57602461105892016115f4565b005b503461000e576020367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e5760043561109681610372565b60018060a01b03166000526006602052602060ff604060002054166040519015158152f35b50634e487b7160e01b600052601160045260246000fd5b8181106110dd570390565b6110e56110bb565b0390565b156110f057565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f5045524d49545f444541444c494e455f455850495245440000000000000000006044820152606490fd5b506040513d6000823e3d90fd5b1561116357565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f494e56414c49445f5349474e45520000000000000000000000000000000000006044820152606490fd5b6000467f00000000000000000000000000000000000000000000000000000000000000000361121057507f000000000000000000000000000000000000000000000000000000000000000090565b604051815491908161122184610184565b8083526020948584019460019182811690811561133557506001146112dd575b50505091816112586112d7936112c99503826101d5565b519020604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f95810195865260208601929092527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc69085015246606085015230608085015291829060a0850190565b03601f1981018352826101d5565b51902090565b91908693508280527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b82841061132057505050820101816112586112d7611241565b80548685018601528794909301928101611307565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001687525050506040830191508290506112586112d7611241565b601f811161137c575050565b6000908180527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563906020601f850160051c830194106113d6575b601f0160051c01915b8281106113cb57505050565b8181556001016113bf565b90925082906113b6565b90601f82116113ed575050565b6001916000908382527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6906020601f850160051c8301941061144a575b601f0160051c01915b8281106114405750505050565b8181558301611433565b909250829061142a565b90815167ffffffffffffffff811161155b575b60019061147d816114788454610184565b6113e0565b602080601f83116001146114d65750819293946000926114cb575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600383901b1c191690821b179055565b015190503880611498565b90601f1983169561150960016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf690565b926000905b888210611544575050838596971061152b575b505050811b019055565b015160001960f88460031b161c19169055388080611521565b80878596829496860151815501950193019061150e565b6115636101be565b611467565b1561156f57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f216d696e746572000000000000000000000000000000000000000000000000006044820152606490fd5b91908110156115de5760051b0190565b634e487b7160e01b600052603260045260246000fd5b33600052600660205260ff906116108260406000205416611568565b60005b8381106116205750505050565b808361166361163260019488876115ce565b3561163c81610372565b73ffffffffffffffffffffffffffffffffffffffff16600090815260066020526040902090565b5416156116746116328388876115ce565b908560ff1983541691161790556000198114611691575b01611613565b6116996110bb565b61168b56fea2646970667358221220d054dcd2e55471577064ccdf1f5cfd47cb3447e06c8dd1d87daa5503819143a364736f6c634300080e0033",
  "deployedBytecode": "0x60806040526004361015610013575b600080fd5b60003560e01c806306fdde031461017b578063095ea7b3146101725780630ce403f41461016957806318160ddd1461016057806323b872dd14610157578063313ce5671461014e5780633644e5151461014557806340c10f191461013c57806370a08231146101335780637ecebe001461012a5780638da5cb5b1461012157806395d89b41146101185780639dc29fac1461010f578063a9059cbb14610106578063d505accf146100fd578063dd62ed3e146100f4578063e8aa4527146100eb5763f46eccc4146100e357600080fd5b61000e61105a565b5061000e610fe3565b5061000e610f61565b5061000e610d2b565b5061000e610c70565b5061000e610b9e565b5061000e610af8565b5061000e610aa3565b5061000e610a47565b5061000e6109eb565b5061000e61091b565b5061000e6108d9565b5061000e61087c565b5061000e6106f4565b5061000e6106b7565b5061000e6104ce565b5061000e610390565b5061000e610279565b90600182811c921680156101b4575b602083101461019e57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610193565b50634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176101f757604052565b6101ff6101be565b604052565b919091602080825283519081818401526000945b828610610263575050806040939411610256575b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016010190565b600083828401015261022c565b8581018201518487016040015294810194610218565b503461000e5760008060031936011261036f576040519080805461029c81610184565b8085529160019180831690811561033057506001146102d6575b6102d2856102c6818703826101d5565b60405191829182610204565b0390f35b80809450527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b8284106103185750505081016020016102c6826102d26102b6565b805460208587018101919091529093019281016102fd565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016602087015250506040840192506102c691508390506102d26102b6565b80fd5b73ffffffffffffffffffffffffffffffffffffffff81160361000e57565b503461000e576040367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e576004356103cc81610372565b60243590336000526004602052816103fa8260406000209060018060a01b0316600052602052604060002090565b5560405191825273ffffffffffffffffffffffffffffffffffffffff169033907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590602090a3602060405160018152f35b81601f8201121561000e5780359067ffffffffffffffff82116104c1575b6040519261049f601f84017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016602001856101d5565b8284526020838301011161000e57816000926020809301838601378301015290565b6104c96101be565b610469565b503461000e576040367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e5767ffffffffffffffff60043581811161000e5761051f90369060040161044b565b60243582811161000e5761053790369060040161044b565b60075473ffffffffffffffffffffffffffffffffffffffff16330361065857815192831161064b575b600092610576816105718654610184565b611370565b602080601f83116001146105bb575081906105ab9486926105b0575b50508160011b916000199060031b1c1916178355611454565b604051f35b015190503880610592565b919293601f1984166105ee600080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56390565b9387905b8282106106335750509160019391856105ab9796941061061a575b505050811b018355611454565b015160001960f88460031b161c1916905538808061060d565b806001869782949787015181550196019401906105f2565b6106536101be565b610560565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f216f776e657200000000000000000000000000000000000000000000000000006044820152606490fd5b503461000e576000367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e576020600254604051908152f35b503461000e576060367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e5760043561073081610372565b6024359061073d82610372565b73ffffffffffffffffffffffffffffffffffffffff818116600081815260046020908152604080832033845290915290206044359491937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9392916107d2919087905460018101610827575b505073ffffffffffffffffffffffffffffffffffffffff16600090815260036020526040902090565b6107dd8682546110d2565b905573ffffffffffffffffffffffffffffffffffffffff81166000908152600360205260409020805486019055604051948552169280602081015b0390a360405160018152602090f35b81811061086f575b03610867336108508460018060a01b03166000526004602052604060002090565b9060018060a01b0316600052602052604060002090565b5586386107a9565b6108776110bb565b61082f565b503461000e576000367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e57602060405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b503461000e576000367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e5760206109136111c2565b604051908152f35b503461000e576040367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e57602060043561095981610372565b602435907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60009384923384526006825261099a60ff604086205416611568565b84600254811981116109de575b0160025573ffffffffffffffffffffffffffffffffffffffff168084526003825260408085208054870190555194855293a3604051f35b6109e66110bb565b6109a7565b503461000e576020367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e57600435610a2781610372565b60018060a01b031660005260036020526020604060002054604051908152f35b503461000e576020367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e57600435610a8381610372565b60018060a01b031660005260056020526020604060002054604051908152f35b503461000e576000367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e5760075460405173ffffffffffffffffffffffffffffffffffffffff9091168152602090f35b503461000e5760008060031936011261036f5760405190806001805491610b1e83610184565b808652928281169081156103305750600114610b44576102d2856102c6818703826101d5565b92508083527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b828410610b865750505081016020016102c6826102d26102b6565b80546020858701810191909152909301928101610b6b565b503461000e576040367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e576020600435610bdc81610372565b6024357fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600093849333855260068252610c1c60ff604087205416611568565b73ffffffffffffffffffffffffffffffffffffffff16808552600382526040852080549194918290818110610c63575b0390558060025403600255604051908152a3604051f35b610c6b6110bb565b610c4c565b503461000e576040367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e57600435610cac81610372565b602435903360005260036020526040600020828154818110610d1e575b03905560018060a01b03169081600052600360205260406000208181540190557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef604051806108183394829190602083019252565b610d266110bb565b610cc9565b503461000e5760e0367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e57600435610d6781610372565b602435610d7381610372565b604435906064359060843560ff8116810361000e5760006020917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92594610dbb428210156110e9565b610ea2610eae610dc96111c2565b928a8a610e65610deb8360018060a01b03166000526005602052604060002090565b805460018101909155604080517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98d820190815273ffffffffffffffffffffffffffffffffffffffff9687166020820152958e16918601919091526060850193909352608084015260a083019390935291829060c0830190565b0391610e79601f19938481018352826101d5565b5190206040519384918983019687909160429261190160f01b8352600283015260228201520190565b039081018352826101d5565b5190206040805191825260ff92909216602082015260a4359181019190915260c435606082015281805260809060015afa15610f54575b6000519083610f368261085060018060a01b0395610f0f8782168015159081610f48575b5061115c565b73ffffffffffffffffffffffffffffffffffffffff16600090815260046020526040902090565b556040519384528116931691602090a3005b9050888c161438610f09565b610f5c61114f565b610ee5565b503461000e576040367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e576020610fda600435610fa281610372565b60243590610faf82610372565b60018060a01b03166000526004835260406000209060018060a01b0316600052602052604060002090565b54604051908152f35b503461000e576020367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e5760043567ffffffffffffffff80821161000e573660238301121561000e57816004013590811161000e573660248260051b8401011161000e57602461105892016115f4565b005b503461000e576020367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261000e5760043561109681610372565b60018060a01b03166000526006602052602060ff604060002054166040519015158152f35b50634e487b7160e01b600052601160045260246000fd5b8181106110dd570390565b6110e56110bb565b0390565b156110f057565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f5045524d49545f444541444c494e455f455850495245440000000000000000006044820152606490fd5b506040513d6000823e3d90fd5b1561116357565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f494e56414c49445f5349474e45520000000000000000000000000000000000006044820152606490fd5b6000467f00000000000000000000000000000000000000000000000000000000000000000361121057507f000000000000000000000000000000000000000000000000000000000000000090565b604051815491908161122184610184565b8083526020948584019460019182811690811561133557506001146112dd575b50505091816112586112d7936112c99503826101d5565b519020604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f95810195865260208601929092527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc69085015246606085015230608085015291829060a0850190565b03601f1981018352826101d5565b51902090565b91908693508280527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b82841061132057505050820101816112586112d7611241565b80548685018601528794909301928101611307565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001687525050506040830191508290506112586112d7611241565b601f811161137c575050565b6000908180527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563906020601f850160051c830194106113d6575b601f0160051c01915b8281106113cb57505050565b8181556001016113bf565b90925082906113b6565b90601f82116113ed575050565b6001916000908382527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6906020601f850160051c8301941061144a575b601f0160051c01915b8281106114405750505050565b8181558301611433565b909250829061142a565b90815167ffffffffffffffff811161155b575b60019061147d816114788454610184565b6113e0565b602080601f83116001146114d65750819293946000926114cb575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600383901b1c191690821b179055565b015190503880611498565b90601f1983169561150960016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf690565b926000905b888210611544575050838596971061152b575b505050811b019055565b015160001960f88460031b161c19169055388080611521565b80878596829496860151815501950193019061150e565b6115636101be565b611467565b1561156f57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f216d696e746572000000000000000000000000000000000000000000000000006044820152606490fd5b91908110156115de5760051b0190565b634e487b7160e01b600052603260045260246000fd5b33600052600660205260ff906116108260406000205416611568565b60005b8381106116205750505050565b808361166361163260019488876115ce565b3561163c81610372565b73ffffffffffffffffffffffffffffffffffffffff16600090815260066020526040902090565b5416156116746116328388876115ce565b908560ff1983541691161790556000198114611691575b01611613565b6116996110bb565b61168b56fea2646970667358221220d054dcd2e55471577064ccdf1f5cfd47cb3447e06c8dd1d87daa5503819143a364736f6c634300080e0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 9310,
        "contract": "src/contracts/test/MockERC20.sol:MockERC20",
        "label": "name",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 9312,
        "contract": "src/contracts/test/MockERC20.sol:MockERC20",
        "label": "symbol",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 9316,
        "contract": "src/contracts/test/MockERC20.sol:MockERC20",
        "label": "totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 9320,
        "contract": "src/contracts/test/MockERC20.sol:MockERC20",
        "label": "balanceOf",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 9326,
        "contract": "src/contracts/test/MockERC20.sol:MockERC20",
        "label": "allowance",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 9334,
        "contract": "src/contracts/test/MockERC20.sol:MockERC20",
        "label": "nonces",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 41356,
        "contract": "src/contracts/test/MockERC20.sol:MockERC20",
        "label": "minters",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 41358,
        "contract": "src/contracts/test/MockERC20.sol:MockERC20",
        "label": "owner",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}