/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
    MinterEvent,
    MinterEventInterface,
} from "../../../../../../src/contracts/diamond/events/Events.sol/MinterEvent";

const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "paymentCollateralAsset",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "paymentAmount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "paymentValue",
                type: "uint256",
            },
        ],
        name: "BurnFeePaid",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "burnFee",
                type: "uint256",
            },
        ],
        name: "BurnFeeUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "collateralAsset",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "factor",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "address",
                name: "oracle",
                type: "address",
            },
        ],
        name: "CollateralAssetAdded",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "collateralAsset",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "factor",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "address",
                name: "oracle",
                type: "address",
            },
        ],
        name: "CollateralAssetUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "collateralAsset",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "CollateralDeposited",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "collateralAsset",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "CollateralWithdrawn",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "feeRecipient",
                type: "address",
            },
        ],
        name: "FeeRecipientUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "kreskoAsset",
                type: "address",
            },
            {
                indexed: true,
                internalType: "string",
                name: "symbol",
                type: "string",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "kFactor",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "address",
                name: "oracle",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "marketCapLimit",
                type: "uint256",
            },
        ],
        name: "KreskoAssetAdded",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "kreskoAsset",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "KreskoAssetBurned",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "kreskoAsset",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "KreskoAssetMinted",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "kreskoAsset",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "kFactor",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "address",
                name: "oracle",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bool",
                name: "mintable",
                type: "bool",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "limit",
                type: "uint256",
            },
        ],
        name: "KreskoAssetUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "liquidationIncentiveMultiplier",
                type: "uint256",
            },
        ],
        name: "LiquidationIncentiveMultiplierUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "liquidator",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "repayKreskoAsset",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "repayAmount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "address",
                name: "seizedCollateralAsset",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "collateralSent",
                type: "uint256",
            },
        ],
        name: "LiquidationOccurred",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "minimumCollateralizationRatio",
                type: "uint256",
            },
        ],
        name: "MinimumCollateralizationRatioUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "minimumDebtValue",
                type: "uint256",
            },
        ],
        name: "MinimumDebtValueUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "contractAddress",
                type: "address",
            },
            {
                indexed: true,
                internalType: "bool",
                name: "isTrusted",
                type: "bool",
            },
        ],
        name: "TrustedContract",
        type: "event",
    },
];

const _bytecode =
    "0x602d6050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c634300080a000a";

type MinterEventConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: MinterEventConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
    xs.length > 1;

export class MinterEvent__factory extends ContractFactory {
    constructor(...args: MinterEventConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args);
        } else {
            super(_abi, _bytecode, args[0]);
        }
    }

    override deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<MinterEvent> {
        return super.deploy(overrides || {}) as Promise<MinterEvent>;
    }
    override getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
        return super.getDeployTransaction(overrides || {});
    }
    override attach(address: string): MinterEvent {
        return super.attach(address) as MinterEvent;
    }
    override connect(signer: Signer): MinterEvent__factory {
        return super.connect(signer) as MinterEvent__factory;
    }

    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): MinterEventInterface {
        return new utils.Interface(_abi) as MinterEventInterface;
    }
    static connect(address: string, signerOrProvider: Signer | Provider): MinterEvent {
        return new Contract(address, _abi, signerOrProvider) as MinterEvent;
    }
}
