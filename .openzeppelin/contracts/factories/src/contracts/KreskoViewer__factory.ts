/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { KreskoViewer, KreskoViewerInterface } from "../../../src/contracts/KreskoViewer";

const _abi = [
    {
        inputs: [
            {
                internalType: "contract IKresko",
                name: "_kresko",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "Kresko",
        outputs: [
            {
                internalType: "contract IKresko",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_account",
                type: "address",
            },
        ],
        name: "borrowingPowerUSD",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "rawValue",
                        type: "uint256",
                    },
                ],
                internalType: "struct FixedPoint.Unsigned",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_account",
                type: "address",
            },
        ],
        name: "collateralAssetInfoFor",
        outputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "assetAddress",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "oracleAddress",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "underlyingRebasingToken",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256",
                                name: "rawValue",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct FixedPoint.Unsigned",
                        name: "amountUSD",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256",
                                name: "rawValue",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct FixedPoint.Unsigned",
                        name: "cFactor",
                        type: "tuple",
                    },
                    {
                        internalType: "uint8",
                        name: "decimals",
                        type: "uint8",
                    },
                    {
                        internalType: "uint256",
                        name: "index",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "price",
                        type: "uint256",
                    },
                    {
                        internalType: "string",
                        name: "symbol",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "name",
                        type: "string",
                    },
                ],
                internalType: "struct KreskoViewer.CollateralAssetInfoUser[]",
                name: "result",
                type: "tuple[]",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "rawValue",
                        type: "uint256",
                    },
                ],
                internalType: "struct FixedPoint.Unsigned",
                name: "totalCollateralUSD",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address[]",
                name: "assetAddresses",
                type: "address[]",
            },
        ],
        name: "collateralAssetInfos",
        outputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "assetAddress",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "oracleAddress",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "underlyingRebasingToken",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "price",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256",
                                name: "rawValue",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct FixedPoint.Unsigned",
                        name: "cFactor",
                        type: "tuple",
                    },
                    {
                        internalType: "uint8",
                        name: "decimals",
                        type: "uint8",
                    },
                    {
                        internalType: "string",
                        name: "symbol",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "name",
                        type: "string",
                    },
                ],
                internalType: "struct KreskoViewer.CollateralAssetInfo[]",
                name: "result",
                type: "tuple[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IERC20Upgradeable[]",
                name: "_tokens",
                type: "address[]",
            },
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
        ],
        name: "getAllowances",
        outputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "owner",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "spender",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "allowance",
                        type: "uint256",
                    },
                ],
                internalType: "struct KreskoViewer.Allowance[]",
                name: "allowances",
                type: "tuple[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address[]",
                name: "_collateralAssets",
                type: "address[]",
            },
            {
                internalType: "address[]",
                name: "_krAssets",
                type: "address[]",
            },
        ],
        name: "getAssetInfos",
        outputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "assetAddress",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "oracleAddress",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "underlyingRebasingToken",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "price",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256",
                                name: "rawValue",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct FixedPoint.Unsigned",
                        name: "cFactor",
                        type: "tuple",
                    },
                    {
                        internalType: "uint8",
                        name: "decimals",
                        type: "uint8",
                    },
                    {
                        internalType: "string",
                        name: "symbol",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "name",
                        type: "string",
                    },
                ],
                internalType: "struct KreskoViewer.CollateralAssetInfo[]",
                name: "collateralAssets",
                type: "tuple[]",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "oracleAddress",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "assetAddress",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "price",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256",
                                name: "rawValue",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct FixedPoint.Unsigned",
                        name: "kFactor",
                        type: "tuple",
                    },
                    {
                        internalType: "string",
                        name: "symbol",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "name",
                        type: "string",
                    },
                ],
                internalType: "struct KreskoViewer.krAssetInfo[]",
                name: "krAssets",
                type: "tuple[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IERC20Upgradeable[]",
                name: "_tokens",
                type: "address[]",
            },
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "getBalances",
        outputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "token",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "balance",
                        type: "uint256",
                    },
                ],
                internalType: "struct KreskoViewer.Balance[]",
                name: "balances",
                type: "tuple[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IERC20MetadataUpgradeable[]",
                name: "_tokens",
                type: "address[]",
            },
        ],
        name: "getTokenMetadatas",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint8",
                        name: "decimals",
                        type: "uint8",
                    },
                    {
                        internalType: "string",
                        name: "symbol",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "name",
                        type: "string",
                    },
                ],
                internalType: "struct KreskoViewer.TokenMetadata[]",
                name: "metadatas",
                type: "tuple[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_account",
                type: "address",
            },
        ],
        name: "healthFactorFor",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "rawValue",
                        type: "uint256",
                    },
                ],
                internalType: "struct FixedPoint.Unsigned",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_account",
                type: "address",
            },
        ],
        name: "krAssetInfoFor",
        outputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "assetAddress",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "oracleAddress",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256",
                                name: "rawValue",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct FixedPoint.Unsigned",
                        name: "amountUSD",
                        type: "tuple",
                    },
                    {
                        internalType: "uint256",
                        name: "index",
                        type: "uint256",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256",
                                name: "rawValue",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct FixedPoint.Unsigned",
                        name: "kFactor",
                        type: "tuple",
                    },
                    {
                        internalType: "bool",
                        name: "mintable",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "price",
                        type: "uint256",
                    },
                    {
                        internalType: "string",
                        name: "symbol",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "name",
                        type: "string",
                    },
                ],
                internalType: "struct KreskoViewer.krAssetInfoUser[]",
                name: "result",
                type: "tuple[]",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "rawValue",
                        type: "uint256",
                    },
                ],
                internalType: "struct FixedPoint.Unsigned",
                name: "totalDebtUSD",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address[]",
                name: "assetAddresses",
                type: "address[]",
            },
        ],
        name: "krAssetInfos",
        outputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "oracleAddress",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "assetAddress",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "price",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256",
                                name: "rawValue",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct FixedPoint.Unsigned",
                        name: "kFactor",
                        type: "tuple",
                    },
                    {
                        internalType: "string",
                        name: "symbol",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "name",
                        type: "string",
                    },
                ],
                internalType: "struct KreskoViewer.krAssetInfo[]",
                name: "result",
                type: "tuple[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_account",
                type: "address",
            },
        ],
        name: "kreskoUser",
        outputs: [
            {
                components: [
                    {
                        components: [
                            {
                                internalType: "address",
                                name: "assetAddress",
                                type: "address",
                            },
                            {
                                internalType: "address",
                                name: "oracleAddress",
                                type: "address",
                            },
                            {
                                internalType: "uint256",
                                name: "amount",
                                type: "uint256",
                            },
                            {
                                components: [
                                    {
                                        internalType: "uint256",
                                        name: "rawValue",
                                        type: "uint256",
                                    },
                                ],
                                internalType: "struct FixedPoint.Unsigned",
                                name: "amountUSD",
                                type: "tuple",
                            },
                            {
                                internalType: "uint256",
                                name: "index",
                                type: "uint256",
                            },
                            {
                                components: [
                                    {
                                        internalType: "uint256",
                                        name: "rawValue",
                                        type: "uint256",
                                    },
                                ],
                                internalType: "struct FixedPoint.Unsigned",
                                name: "kFactor",
                                type: "tuple",
                            },
                            {
                                internalType: "bool",
                                name: "mintable",
                                type: "bool",
                            },
                            {
                                internalType: "uint256",
                                name: "price",
                                type: "uint256",
                            },
                            {
                                internalType: "string",
                                name: "symbol",
                                type: "string",
                            },
                            {
                                internalType: "string",
                                name: "name",
                                type: "string",
                            },
                        ],
                        internalType: "struct KreskoViewer.krAssetInfoUser[]",
                        name: "krAssets",
                        type: "tuple[]",
                    },
                    {
                        components: [
                            {
                                internalType: "address",
                                name: "assetAddress",
                                type: "address",
                            },
                            {
                                internalType: "address",
                                name: "oracleAddress",
                                type: "address",
                            },
                            {
                                internalType: "address",
                                name: "underlyingRebasingToken",
                                type: "address",
                            },
                            {
                                internalType: "uint256",
                                name: "amount",
                                type: "uint256",
                            },
                            {
                                components: [
                                    {
                                        internalType: "uint256",
                                        name: "rawValue",
                                        type: "uint256",
                                    },
                                ],
                                internalType: "struct FixedPoint.Unsigned",
                                name: "amountUSD",
                                type: "tuple",
                            },
                            {
                                components: [
                                    {
                                        internalType: "uint256",
                                        name: "rawValue",
                                        type: "uint256",
                                    },
                                ],
                                internalType: "struct FixedPoint.Unsigned",
                                name: "cFactor",
                                type: "tuple",
                            },
                            {
                                internalType: "uint8",
                                name: "decimals",
                                type: "uint8",
                            },
                            {
                                internalType: "uint256",
                                name: "index",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "price",
                                type: "uint256",
                            },
                            {
                                internalType: "string",
                                name: "symbol",
                                type: "string",
                            },
                            {
                                internalType: "string",
                                name: "name",
                                type: "string",
                            },
                        ],
                        internalType: "struct KreskoViewer.CollateralAssetInfoUser[]",
                        name: "collateralAssets",
                        type: "tuple[]",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256",
                                name: "rawValue",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct FixedPoint.Unsigned",
                        name: "healthFactor",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256",
                                name: "rawValue",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct FixedPoint.Unsigned",
                        name: "debtActualUSD",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256",
                                name: "rawValue",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct FixedPoint.Unsigned",
                        name: "debtUSD",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256",
                                name: "rawValue",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct FixedPoint.Unsigned",
                        name: "collateralActualUSD",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256",
                                name: "rawValue",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct FixedPoint.Unsigned",
                        name: "collateralUSD",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256",
                                name: "rawValue",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct FixedPoint.Unsigned",
                        name: "minCollateralUSD",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256",
                                name: "rawValue",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct FixedPoint.Unsigned",
                        name: "borrowingPowerUSD",
                        type: "tuple",
                    },
                ],
                internalType: "struct KreskoViewer.KreskoUser",
                name: "user",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];

const _bytecode =
    "";

type KreskoViewerConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: KreskoViewerConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
    xs.length > 1;

export class KreskoViewer__factory extends ContractFactory {
    constructor(...args: KreskoViewerConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args);
        } else {
            super(_abi, _bytecode, args[0]);
        }
    }

    override deploy(
        _kresko: string,
        overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<KreskoViewer> {
        return super.deploy(_kresko, overrides || {}) as Promise<KreskoViewer>;
    }
    override getDeployTransaction(
        _kresko: string,
        overrides?: Overrides & { from?: string | Promise<string> },
    ): TransactionRequest {
        return super.getDeployTransaction(_kresko, overrides || {});
    }
    override attach(address: string): KreskoViewer {
        return super.attach(address) as KreskoViewer;
    }
    override connect(signer: Signer): KreskoViewer__factory {
        return super.connect(signer) as KreskoViewer__factory;
    }

    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): KreskoViewerInterface {
        return new utils.Interface(_abi) as KreskoViewerInterface;
    }
    static connect(address: string, signerOrProvider: Signer | Provider): KreskoViewer {
        return new Contract(address, _abi, signerOrProvider) as KreskoViewer;
    }
}
