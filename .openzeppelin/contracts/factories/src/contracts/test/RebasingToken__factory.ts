/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, BigNumberish, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { RebasingToken, RebasingTokenInterface } from "../../../../src/contracts/test/RebasingToken";

const _abi = [
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_rebaseFactor",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "_allowances",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_owner",
                type: "address",
            },
            {
                internalType: "address",
                name: "_spender",
                type: "address",
            },
        ],
        name: "allowance",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_spender",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
        ],
        name: "approve",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_account",
                type: "address",
            },
        ],
        name: "balanceOf",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "decimals",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_account",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
        ],
        name: "mint",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "name",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "rebaseFactor",
        outputs: [
            {
                internalType: "uint256",
                name: "rawValue",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_account",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
        ],
        name: "setBalanceOf",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_rebaseFactor",
                type: "uint256",
            },
        ],
        name: "setRebaseFactor",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "symbol",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
        ],
        name: "transfer",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_from",
                type: "address",
            },
            {
                internalType: "address",
                name: "_to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
        ],
        name: "transferFrom",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
];

const _bytecode =
    "0x608060405234801561001057600080fd5b50604051610db1380380610db183398181016040528101906100329190610067565b6100418161004760201b60201c565b50610083565b604051806020016040528082815250600080820151816000015590505050565b60006020828403121561007957600080fd5b8151905092915050565b610d1f806100926000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c806340c10f191161008c578063a9059cbb11610066578063a9059cbb14610238578063b46310f614610268578063dd62ed3e14610284578063f12e0623146102b4576100df565b806340c10f19146101ce57806370a08231146101ea57806395d89b411461021a576100df565b80631cdd82dc116100bd5780631cdd82dc1461016257806323b872dd14610180578063313ce567146101b0576100df565b8063024c2ddd146100e457806306fdde0314610114578063095ea7b314610132575b600080fd5b6100fe60048036038101906100f99190610992565b6102d0565b60405161010b91906109c5565b60405180910390f35b61011c6102f5565b60405161012991906109d6565b60405180910390f35b61014c60048036038101906101479190610a30565b610332565b6040516101599190610a5c565b60405180910390f35b61016a6103bf565b60405161017791906109c5565b60405180910390f35b61019a60048036038101906101959190610a6f565b6103cb565b6040516101a79190610a5c565b60405180910390f35b6101b86103e1565b6040516101c59190610aab565b60405180910390f35b6101e860048036038101906101e39190610a30565b6103ea565b005b61020460048036038101906101ff9190610abf565b61044c565b60405161021191906109c5565b60405180910390f35b61022261049d565b60405161022f91906109d6565b60405180910390f35b610252600480360381019061024d9190610a30565b6104da565b60405161025f9190610a5c565b60405180910390f35b610282600480360381019061027d9190610a30565b6104ef565b005b61029e60048036038101906102999190610992565b61053f565b6040516102ab91906109c5565b60405180910390f35b6102ce60048036038101906102c99190610ae2565b6105c6565b005b6002602052816000526040600020602052806000526040600020600091509150505481565b60606040518060400160405280601381526020017f54657374205265626173696e6720546f6b656e00000000000000000000000000815250905090565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001905092915050565b60008060000154905081565b60006103d88484846105e6565b90509392505050565b60006012905090565b6103f3816107f5565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104419190610b14565b925050819055505050565b6000610496600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610839565b9050919050565b60606040518060400160405280600381526020017f464f4f0000000000000000000000000000000000000000000000000000000000815250905090565b60006104e73384846105e6565b905092915050565b6104f8816107f5565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b604051806020016040528082815250600080820151816000015590505050565b6000806105f2836107f5565b90503373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16146106bb5782600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106b39190610b33565b925050819055505b80600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561073d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073490610b51565b60405180910390fd5b80600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461078c9190610b33565b9250508190555080600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107e29190610b14565b9250508190555060019150509392505050565b600061082e600060405180602001604052908160008201548152505060405180602001604052808581525061087d90919063ffffffff16565b600001519050919050565b600061087260006040518060200160405290816000820154815250506040518060200160405280858152506108d590919063ffffffff16565b600001519050919050565b610885610952565b60405180602001604052806108ca84600001516108bc6012600a6108a99190610cb0565b886000015161092690919063ffffffff16565b61093c90919063ffffffff16565b815250905092915050565b6108dd610952565b60405180602001604052806012600a6108f69190610cb0565b6109118560000151876000015161092690919063ffffffff16565b61091b9190610cc4565b815250905092915050565b600081836109349190610cec565b905092915050565b6000818361094a9190610cc4565b905092915050565b6040518060200160405280600081525090565b60008135905073ffffffffffffffffffffffffffffffffffffffff8116811461098d57600080fd5b919050565b600080604083850312156109a557600080fd5b6109ae83610965565b91506109bc60208401610965565b90509250929050565b600060208201905082825292915050565b600060208083528351808285015260005b81811015610a06578281870101516040828701015282810190506109e7565b81811115610a18576000604083870101525b506040601f19601f8301168501019250505092915050565b60008060408385031215610a4357600080fd5b610a4c83610965565b9150602083013590509250929050565b6000602082019050821515825292915050565b600080600060608486031215610a8457600080fd5b610a8d84610965565b9250610a9b60208501610965565b9150604084013590509250925092565b600060208201905060ff8316825292915050565b600060208284031215610ad157600080fd5b610ada82610965565b905092915050565b600060208284031215610af457600080fd5b8135905092915050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610b2857610b27610afe565b5b828201905092915050565b600082821015610b4657610b45610afe565b5b828203905092915050565b60208152602660208201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260408201527f616c616e6365000000000000000000000000000000000000000000000000000060608201526000608082019050919050565b60008060018092508391505b80851115610bfb578160001904821115610bde57610bdd610afe565b5b80851615610bec5781830292505b818202915084811c9450610bc1565b509250929050565b600082610c135760019050610caa565b81610c215760009050610caa565b8160018114610c375760028114610c4157610c5f565b6001915050610caa565b60ff841115610c5357610c52610afe565b5b6001841b915050610caa565b5060208310610133831016604e8410600b8410161715610c835782820a9050610caa565b610c8d8383610bb5565b8060001904821115610ca257610ca1610afe565b5b808202925050505b92915050565b6000610cbc8383610c03565b905092915050565b600082610ce157634e487b7160e01b600052601260045260246000fd5b828204905092915050565b6000816000190483118215151615610d0757610d06610afe565b5b82820290509291505056fea164736f6c634300080a000a";

type RebasingTokenConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: RebasingTokenConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
    xs.length > 1;

export class RebasingToken__factory extends ContractFactory {
    constructor(...args: RebasingTokenConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args);
        } else {
            super(_abi, _bytecode, args[0]);
        }
    }

    override deploy(
        _rebaseFactor: BigNumberish,
        overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<RebasingToken> {
        return super.deploy(_rebaseFactor, overrides || {}) as Promise<RebasingToken>;
    }
    override getDeployTransaction(
        _rebaseFactor: BigNumberish,
        overrides?: Overrides & { from?: string | Promise<string> },
    ): TransactionRequest {
        return super.getDeployTransaction(_rebaseFactor, overrides || {});
    }
    override attach(address: string): RebasingToken {
        return super.attach(address) as RebasingToken;
    }
    override connect(signer: Signer): RebasingToken__factory {
        return super.connect(signer) as RebasingToken__factory;
    }

    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): RebasingTokenInterface {
        return new utils.Interface(_abi) as RebasingTokenInterface;
    }
    static connect(address: string, signerOrProvider: Signer | Provider): RebasingToken {
        return new Contract(address, _abi, signerOrProvider) as RebasingToken;
    }
}
