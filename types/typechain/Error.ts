/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export interface ErrorInterface extends utils.Interface {
  contractName: "Error";
  functions: {
    "ACCOUNT_NOT_LIQUIDATABLE()": FunctionFragment;
    "ADDRESS_INVALID_COLLATERAL()": FunctionFragment;
    "ADDRESS_INVALID_FEERECIPIENT()": FunctionFragment;
    "ADDRESS_INVALID_NRWT()": FunctionFragment;
    "ADDRESS_INVALID_ORACLE()": FunctionFragment;
    "ADDRESS_INVALID_REWARD_RECIPIENT()": FunctionFragment;
    "COLLATERAL_EXISTS()": FunctionFragment;
    "COLLATERAL_INVALID_FACTOR()": FunctionFragment;
    "COLLATERAL_WITHDRAW_OVERFLOW()": FunctionFragment;
    "CONTRACT_ALREADY_INITIALIZED()": FunctionFragment;
    "INVALID_FUNCTION_SIGNATURE()": FunctionFragment;
    "KRASSET_BURN_AMOUNT_OVERFLOW()": FunctionFragment;
    "KRASSET_EXISTS()": FunctionFragment;
    "KRASSET_INVALID_FACTOR()": FunctionFragment;
    "NOT_OPERATOR()": FunctionFragment;
    "NOT_OWNER()": FunctionFragment;
    "PARAM_BURN_FEE_TOO_HIGH()": FunctionFragment;
    "PARAM_LIQUIDATION_INCENTIVE_HIGH()": FunctionFragment;
    "PARAM_LIQUIDATION_INCENTIVE_LOW()": FunctionFragment;
    "PARAM_MIN_COLLATERAL_RATIO_LOW()": FunctionFragment;
    "PARAM_MIN_DEBT_AMOUNT_LOW()": FunctionFragment;
    "POOL_DOESNT_EXIST()": FunctionFragment;
    "POOL_EXISTS()": FunctionFragment;
    "REWARD_PER_BLOCK_MISSING()": FunctionFragment;
    "REWARD_TOKENS_MISSING()": FunctionFragment;
    "ZERO_ADDRESS()": FunctionFragment;
    "ZERO_BURN()": FunctionFragment;
    "ZERO_DEPOSIT()": FunctionFragment;
    "ZERO_MINT()": FunctionFragment;
    "ZERO_WITHDRAW()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "ACCOUNT_NOT_LIQUIDATABLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "ADDRESS_INVALID_COLLATERAL",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "ADDRESS_INVALID_FEERECIPIENT",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "ADDRESS_INVALID_NRWT",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "ADDRESS_INVALID_ORACLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "ADDRESS_INVALID_REWARD_RECIPIENT",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "COLLATERAL_EXISTS",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "COLLATERAL_INVALID_FACTOR",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "COLLATERAL_WITHDRAW_OVERFLOW",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CONTRACT_ALREADY_INITIALIZED",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "INVALID_FUNCTION_SIGNATURE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "KRASSET_BURN_AMOUNT_OVERFLOW",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "KRASSET_EXISTS",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "KRASSET_INVALID_FACTOR",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "NOT_OPERATOR",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "NOT_OWNER", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "PARAM_BURN_FEE_TOO_HIGH",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "PARAM_LIQUIDATION_INCENTIVE_HIGH",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "PARAM_LIQUIDATION_INCENTIVE_LOW",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "PARAM_MIN_COLLATERAL_RATIO_LOW",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "PARAM_MIN_DEBT_AMOUNT_LOW",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "POOL_DOESNT_EXIST",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "POOL_EXISTS",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "REWARD_PER_BLOCK_MISSING",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "REWARD_TOKENS_MISSING",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "ZERO_ADDRESS",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "ZERO_BURN", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "ZERO_DEPOSIT",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "ZERO_MINT", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "ZERO_WITHDRAW",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "ACCOUNT_NOT_LIQUIDATABLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ADDRESS_INVALID_COLLATERAL",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ADDRESS_INVALID_FEERECIPIENT",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ADDRESS_INVALID_NRWT",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ADDRESS_INVALID_ORACLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ADDRESS_INVALID_REWARD_RECIPIENT",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "COLLATERAL_EXISTS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "COLLATERAL_INVALID_FACTOR",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "COLLATERAL_WITHDRAW_OVERFLOW",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "CONTRACT_ALREADY_INITIALIZED",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "INVALID_FUNCTION_SIGNATURE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "KRASSET_BURN_AMOUNT_OVERFLOW",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "KRASSET_EXISTS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "KRASSET_INVALID_FACTOR",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "NOT_OPERATOR",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "NOT_OWNER", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "PARAM_BURN_FEE_TOO_HIGH",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "PARAM_LIQUIDATION_INCENTIVE_HIGH",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "PARAM_LIQUIDATION_INCENTIVE_LOW",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "PARAM_MIN_COLLATERAL_RATIO_LOW",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "PARAM_MIN_DEBT_AMOUNT_LOW",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "POOL_DOESNT_EXIST",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "POOL_EXISTS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "REWARD_PER_BLOCK_MISSING",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "REWARD_TOKENS_MISSING",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ZERO_ADDRESS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "ZERO_BURN", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "ZERO_DEPOSIT",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "ZERO_MINT", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "ZERO_WITHDRAW",
    data: BytesLike
  ): Result;

  events: {};
}

export interface Error extends BaseContract {
  contractName: "Error";
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: ErrorInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    ACCOUNT_NOT_LIQUIDATABLE(overrides?: CallOverrides): Promise<[string]>;

    ADDRESS_INVALID_COLLATERAL(overrides?: CallOverrides): Promise<[string]>;

    ADDRESS_INVALID_FEERECIPIENT(overrides?: CallOverrides): Promise<[string]>;

    ADDRESS_INVALID_NRWT(overrides?: CallOverrides): Promise<[string]>;

    ADDRESS_INVALID_ORACLE(overrides?: CallOverrides): Promise<[string]>;

    ADDRESS_INVALID_REWARD_RECIPIENT(
      overrides?: CallOverrides
    ): Promise<[string]>;

    COLLATERAL_EXISTS(overrides?: CallOverrides): Promise<[string]>;

    COLLATERAL_INVALID_FACTOR(overrides?: CallOverrides): Promise<[string]>;

    COLLATERAL_WITHDRAW_OVERFLOW(overrides?: CallOverrides): Promise<[string]>;

    CONTRACT_ALREADY_INITIALIZED(overrides?: CallOverrides): Promise<[string]>;

    INVALID_FUNCTION_SIGNATURE(overrides?: CallOverrides): Promise<[string]>;

    KRASSET_BURN_AMOUNT_OVERFLOW(overrides?: CallOverrides): Promise<[string]>;

    KRASSET_EXISTS(overrides?: CallOverrides): Promise<[string]>;

    KRASSET_INVALID_FACTOR(overrides?: CallOverrides): Promise<[string]>;

    NOT_OPERATOR(overrides?: CallOverrides): Promise<[string]>;

    NOT_OWNER(overrides?: CallOverrides): Promise<[string]>;

    PARAM_BURN_FEE_TOO_HIGH(overrides?: CallOverrides): Promise<[string]>;

    PARAM_LIQUIDATION_INCENTIVE_HIGH(
      overrides?: CallOverrides
    ): Promise<[string]>;

    PARAM_LIQUIDATION_INCENTIVE_LOW(
      overrides?: CallOverrides
    ): Promise<[string]>;

    PARAM_MIN_COLLATERAL_RATIO_LOW(
      overrides?: CallOverrides
    ): Promise<[string]>;

    PARAM_MIN_DEBT_AMOUNT_LOW(overrides?: CallOverrides): Promise<[string]>;

    POOL_DOESNT_EXIST(overrides?: CallOverrides): Promise<[string]>;

    POOL_EXISTS(overrides?: CallOverrides): Promise<[string]>;

    REWARD_PER_BLOCK_MISSING(overrides?: CallOverrides): Promise<[string]>;

    REWARD_TOKENS_MISSING(overrides?: CallOverrides): Promise<[string]>;

    ZERO_ADDRESS(overrides?: CallOverrides): Promise<[string]>;

    ZERO_BURN(overrides?: CallOverrides): Promise<[string]>;

    ZERO_DEPOSIT(overrides?: CallOverrides): Promise<[string]>;

    ZERO_MINT(overrides?: CallOverrides): Promise<[string]>;

    ZERO_WITHDRAW(overrides?: CallOverrides): Promise<[string]>;
  };

  ACCOUNT_NOT_LIQUIDATABLE(overrides?: CallOverrides): Promise<string>;

  ADDRESS_INVALID_COLLATERAL(overrides?: CallOverrides): Promise<string>;

  ADDRESS_INVALID_FEERECIPIENT(overrides?: CallOverrides): Promise<string>;

  ADDRESS_INVALID_NRWT(overrides?: CallOverrides): Promise<string>;

  ADDRESS_INVALID_ORACLE(overrides?: CallOverrides): Promise<string>;

  ADDRESS_INVALID_REWARD_RECIPIENT(overrides?: CallOverrides): Promise<string>;

  COLLATERAL_EXISTS(overrides?: CallOverrides): Promise<string>;

  COLLATERAL_INVALID_FACTOR(overrides?: CallOverrides): Promise<string>;

  COLLATERAL_WITHDRAW_OVERFLOW(overrides?: CallOverrides): Promise<string>;

  CONTRACT_ALREADY_INITIALIZED(overrides?: CallOverrides): Promise<string>;

  INVALID_FUNCTION_SIGNATURE(overrides?: CallOverrides): Promise<string>;

  KRASSET_BURN_AMOUNT_OVERFLOW(overrides?: CallOverrides): Promise<string>;

  KRASSET_EXISTS(overrides?: CallOverrides): Promise<string>;

  KRASSET_INVALID_FACTOR(overrides?: CallOverrides): Promise<string>;

  NOT_OPERATOR(overrides?: CallOverrides): Promise<string>;

  NOT_OWNER(overrides?: CallOverrides): Promise<string>;

  PARAM_BURN_FEE_TOO_HIGH(overrides?: CallOverrides): Promise<string>;

  PARAM_LIQUIDATION_INCENTIVE_HIGH(overrides?: CallOverrides): Promise<string>;

  PARAM_LIQUIDATION_INCENTIVE_LOW(overrides?: CallOverrides): Promise<string>;

  PARAM_MIN_COLLATERAL_RATIO_LOW(overrides?: CallOverrides): Promise<string>;

  PARAM_MIN_DEBT_AMOUNT_LOW(overrides?: CallOverrides): Promise<string>;

  POOL_DOESNT_EXIST(overrides?: CallOverrides): Promise<string>;

  POOL_EXISTS(overrides?: CallOverrides): Promise<string>;

  REWARD_PER_BLOCK_MISSING(overrides?: CallOverrides): Promise<string>;

  REWARD_TOKENS_MISSING(overrides?: CallOverrides): Promise<string>;

  ZERO_ADDRESS(overrides?: CallOverrides): Promise<string>;

  ZERO_BURN(overrides?: CallOverrides): Promise<string>;

  ZERO_DEPOSIT(overrides?: CallOverrides): Promise<string>;

  ZERO_MINT(overrides?: CallOverrides): Promise<string>;

  ZERO_WITHDRAW(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    ACCOUNT_NOT_LIQUIDATABLE(overrides?: CallOverrides): Promise<string>;

    ADDRESS_INVALID_COLLATERAL(overrides?: CallOverrides): Promise<string>;

    ADDRESS_INVALID_FEERECIPIENT(overrides?: CallOverrides): Promise<string>;

    ADDRESS_INVALID_NRWT(overrides?: CallOverrides): Promise<string>;

    ADDRESS_INVALID_ORACLE(overrides?: CallOverrides): Promise<string>;

    ADDRESS_INVALID_REWARD_RECIPIENT(
      overrides?: CallOverrides
    ): Promise<string>;

    COLLATERAL_EXISTS(overrides?: CallOverrides): Promise<string>;

    COLLATERAL_INVALID_FACTOR(overrides?: CallOverrides): Promise<string>;

    COLLATERAL_WITHDRAW_OVERFLOW(overrides?: CallOverrides): Promise<string>;

    CONTRACT_ALREADY_INITIALIZED(overrides?: CallOverrides): Promise<string>;

    INVALID_FUNCTION_SIGNATURE(overrides?: CallOverrides): Promise<string>;

    KRASSET_BURN_AMOUNT_OVERFLOW(overrides?: CallOverrides): Promise<string>;

    KRASSET_EXISTS(overrides?: CallOverrides): Promise<string>;

    KRASSET_INVALID_FACTOR(overrides?: CallOverrides): Promise<string>;

    NOT_OPERATOR(overrides?: CallOverrides): Promise<string>;

    NOT_OWNER(overrides?: CallOverrides): Promise<string>;

    PARAM_BURN_FEE_TOO_HIGH(overrides?: CallOverrides): Promise<string>;

    PARAM_LIQUIDATION_INCENTIVE_HIGH(
      overrides?: CallOverrides
    ): Promise<string>;

    PARAM_LIQUIDATION_INCENTIVE_LOW(overrides?: CallOverrides): Promise<string>;

    PARAM_MIN_COLLATERAL_RATIO_LOW(overrides?: CallOverrides): Promise<string>;

    PARAM_MIN_DEBT_AMOUNT_LOW(overrides?: CallOverrides): Promise<string>;

    POOL_DOESNT_EXIST(overrides?: CallOverrides): Promise<string>;

    POOL_EXISTS(overrides?: CallOverrides): Promise<string>;

    REWARD_PER_BLOCK_MISSING(overrides?: CallOverrides): Promise<string>;

    REWARD_TOKENS_MISSING(overrides?: CallOverrides): Promise<string>;

    ZERO_ADDRESS(overrides?: CallOverrides): Promise<string>;

    ZERO_BURN(overrides?: CallOverrides): Promise<string>;

    ZERO_DEPOSIT(overrides?: CallOverrides): Promise<string>;

    ZERO_MINT(overrides?: CallOverrides): Promise<string>;

    ZERO_WITHDRAW(overrides?: CallOverrides): Promise<string>;
  };

  filters: {};

  estimateGas: {
    ACCOUNT_NOT_LIQUIDATABLE(overrides?: CallOverrides): Promise<BigNumber>;

    ADDRESS_INVALID_COLLATERAL(overrides?: CallOverrides): Promise<BigNumber>;

    ADDRESS_INVALID_FEERECIPIENT(overrides?: CallOverrides): Promise<BigNumber>;

    ADDRESS_INVALID_NRWT(overrides?: CallOverrides): Promise<BigNumber>;

    ADDRESS_INVALID_ORACLE(overrides?: CallOverrides): Promise<BigNumber>;

    ADDRESS_INVALID_REWARD_RECIPIENT(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    COLLATERAL_EXISTS(overrides?: CallOverrides): Promise<BigNumber>;

    COLLATERAL_INVALID_FACTOR(overrides?: CallOverrides): Promise<BigNumber>;

    COLLATERAL_WITHDRAW_OVERFLOW(overrides?: CallOverrides): Promise<BigNumber>;

    CONTRACT_ALREADY_INITIALIZED(overrides?: CallOverrides): Promise<BigNumber>;

    INVALID_FUNCTION_SIGNATURE(overrides?: CallOverrides): Promise<BigNumber>;

    KRASSET_BURN_AMOUNT_OVERFLOW(overrides?: CallOverrides): Promise<BigNumber>;

    KRASSET_EXISTS(overrides?: CallOverrides): Promise<BigNumber>;

    KRASSET_INVALID_FACTOR(overrides?: CallOverrides): Promise<BigNumber>;

    NOT_OPERATOR(overrides?: CallOverrides): Promise<BigNumber>;

    NOT_OWNER(overrides?: CallOverrides): Promise<BigNumber>;

    PARAM_BURN_FEE_TOO_HIGH(overrides?: CallOverrides): Promise<BigNumber>;

    PARAM_LIQUIDATION_INCENTIVE_HIGH(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    PARAM_LIQUIDATION_INCENTIVE_LOW(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    PARAM_MIN_COLLATERAL_RATIO_LOW(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    PARAM_MIN_DEBT_AMOUNT_LOW(overrides?: CallOverrides): Promise<BigNumber>;

    POOL_DOESNT_EXIST(overrides?: CallOverrides): Promise<BigNumber>;

    POOL_EXISTS(overrides?: CallOverrides): Promise<BigNumber>;

    REWARD_PER_BLOCK_MISSING(overrides?: CallOverrides): Promise<BigNumber>;

    REWARD_TOKENS_MISSING(overrides?: CallOverrides): Promise<BigNumber>;

    ZERO_ADDRESS(overrides?: CallOverrides): Promise<BigNumber>;

    ZERO_BURN(overrides?: CallOverrides): Promise<BigNumber>;

    ZERO_DEPOSIT(overrides?: CallOverrides): Promise<BigNumber>;

    ZERO_MINT(overrides?: CallOverrides): Promise<BigNumber>;

    ZERO_WITHDRAW(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    ACCOUNT_NOT_LIQUIDATABLE(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    ADDRESS_INVALID_COLLATERAL(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    ADDRESS_INVALID_FEERECIPIENT(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    ADDRESS_INVALID_NRWT(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    ADDRESS_INVALID_ORACLE(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    ADDRESS_INVALID_REWARD_RECIPIENT(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    COLLATERAL_EXISTS(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    COLLATERAL_INVALID_FACTOR(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    COLLATERAL_WITHDRAW_OVERFLOW(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    CONTRACT_ALREADY_INITIALIZED(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    INVALID_FUNCTION_SIGNATURE(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    KRASSET_BURN_AMOUNT_OVERFLOW(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    KRASSET_EXISTS(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    KRASSET_INVALID_FACTOR(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    NOT_OPERATOR(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    NOT_OWNER(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    PARAM_BURN_FEE_TOO_HIGH(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    PARAM_LIQUIDATION_INCENTIVE_HIGH(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    PARAM_LIQUIDATION_INCENTIVE_LOW(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    PARAM_MIN_COLLATERAL_RATIO_LOW(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    PARAM_MIN_DEBT_AMOUNT_LOW(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    POOL_DOESNT_EXIST(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    POOL_EXISTS(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    REWARD_PER_BLOCK_MISSING(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    REWARD_TOKENS_MISSING(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    ZERO_ADDRESS(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    ZERO_BURN(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    ZERO_DEPOSIT(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    ZERO_MINT(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    ZERO_WITHDRAW(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
