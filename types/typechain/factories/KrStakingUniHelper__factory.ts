/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  KrStakingUniHelper,
  KrStakingUniHelperInterface,
} from "../KrStakingUniHelper";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IUniswapV2Router02",
        name: "_router",
        type: "address",
      },
      {
        internalType: "contract IUniswapV2Factory",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "contract IKrStaking",
        name: "_staking",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ClaimRewardsMulti",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
    ],
    name: "LiquidityAndStakeAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
    ],
    name: "LiquidityAndStakeRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountADesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBDesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "addLiquidityAndStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "claimRewardsMulti",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "contract IUniswapV2Factory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "contract IUniswapV2Router02",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "staking",
    outputs: [
      {
        internalType: "contract IKrStaking",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "withdrawAndRemoveLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516110f13803806110f183398101604081905261002f91610089565b600080546001600160a01b039485166001600160a01b0319918216179091556001805493851693821693909317909255600280549190931691161790556100d6565b6001600160a01b038116811461008657600080fd5b50565b60008060006060848603121561009e57600080fd5b83516100a981610071565b60208501519093506100ba81610071565b60408501519092506100cb81610071565b809150509250925092565b61100c806100e56000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063b6842c6011610050578063b6842c60146100dd578063c45a0155146100f0578063f887ea401461010357600080fd5b80632df56a3f146100775780634cf088d91461008c578063b4c29b68146100bc575b600080fd5b61008a610085366004610d43565b610116565b005b60025461009f906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100cf6100ca366004610db5565b610459565b6040519081526020016100b3565b61008a6100eb366004610e31565b6108ba565b60015461009f906001600160a01b031681565b60005461009f906001600160a01b031681565b6001600160a01b0382166101605760405162461bcd60e51b815260206004820152600c60248201526b4b523a20216164647265737360a01b60448201526064015b60405180910390fd5b60015460405163e6a4390560e01b81526001600160a01b0389811660048301528881166024830152600092169063e6a4390590604401602060405180830381865afa1580156101b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d79190610e4e565b60025460405163ba8fc5bf60e01b81526001600160a01b0380841660048301529293506000928392169063ba8fc5bf906024016040805180830381865afa158015610226573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024a9190610e80565b915091508061028d5760405162461bcd60e51b815260206004820152600f60248201526e4b523a2021706f6f6c45786973747360881b6044820152606401610157565b6002546040516343a4534b60e01b815233600482015260248101849052604481018a90526001600160a01b038781166064830152909116906343a4534b90608401600060405180830381600087803b1580156102e857600080fd5b505af11580156102fc573d6000803e3d6000fd5b505060005460405163095ea7b360e01b81526001600160a01b039182166004820152602481018c9052908616925063095ea7b391506044016020604051808303816000875af1158015610353573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103779190610eac565b50600054604051635d5155ef60e11b81526001600160a01b038c811660048301528b81166024830152604482018b9052606482018a90526084820189905287811660a483015260c482018790529091169063baa2abde9060e40160408051808303816000875af11580156103ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104139190610ec7565b50508188866001600160a01b03167f27b4eb450d703cc6355f1bc733710bf45d86de95f33ef1c672786817a5c9265d60405160405180910390a450505050505050505050565b60006001600160a01b0383166104a05760405162461bcd60e51b815260206004820152600c60248201526b4b523a20216164647265737360a01b6044820152606401610157565b60015460405163e6a4390560e01b81526001600160a01b038b811660048301528a81166024830152600092169063e6a4390590604401602060405180830381865afa1580156104f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105179190610e4e565b60025460405163ba8fc5bf60e01b81526001600160a01b0380841660048301529293506000928392169063ba8fc5bf906024016040805180830381865afa158015610566573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058a9190610e80565b91509150806105cd5760405162461bcd60e51b815260206004820152600f60248201526e4b523a2021706f6f6c45786973747360881b6044820152606401610157565b6105e26001600160a01b038d1633308d610a32565b6105f76001600160a01b038c1633308c610a32565b60005460405163095ea7b360e01b81526001600160a01b039182166004820152602481018c9052908d169063095ea7b3906044016020604051808303816000875af115801561064a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066e9190610eac565b5060005460405163095ea7b360e01b81526001600160a01b039182166004820152602481018b9052908c169063095ea7b3906044016020604051808303816000875af11580156106c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e69190610eac565b506000805460405162e8e33760e81b81526001600160a01b038f811660048301528e81166024830152604482018e9052606482018d9052608482018c905260a482018b90523060c483015260e482018990529091169063e8e3370090610104016060604051808303816000875af1158015610765573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107899190610eeb565b60025460405163095ea7b360e01b81526001600160a01b039182166004820152602481018390529194508716925063095ea7b391506044016020604051808303816000875af11580156107e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108049190610eac565b50600254604051630efe6a8b60e01b81526001600160a01b038981166004830152602482018690526044820184905290911690630efe6a8b90606401600060405180830381600087803b15801561085a57600080fd5b505af115801561086e573d6000803e3d6000fd5b505050508281886001600160a01b03167f67153b1f92f8a4e823af8ca2fdb93c3d313b9dcb1404c5da9a9c44234a3302e960405160405180910390a49c9b505050505050505050505050565b6001600160a01b0381166108ff5760405162461bcd60e51b815260206004820152600c60248201526b4b523a20216164647265737360a01b6044820152606401610157565b6002546040805163040f1f6d60e11b815290516000926001600160a01b03169163081e3eda9160048083019260209291908290030181865afa158015610949573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096d9190610f19565b905060005b818110156109f95760025460405163bf82b7b560e01b8152336004820152602481018390526001600160a01b0385811660448301529091169063bf82b7b590606401600060405180830381600087803b1580156109ce57600080fd5b505af11580156109e2573d6000803e3d6000fd5b5050505080806109f190610f32565b915050610972565b506040516001600160a01b038316907fac4bb348f20fccad9f5419b8d566bc60a544d193931dc39efe624899e5d068b790600090a25050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b179052610aa1908590610aa7565b50505050565b6000610afc826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610b919092919063ffffffff16565b805190915015610b8c5780806020019051810190610b1a9190610eac565b610b8c5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610157565b505050565b6060610ba08484600085610baa565b90505b9392505050565b606082471015610c225760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610157565b6001600160a01b0385163b610c795760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610157565b600080866001600160a01b03168587604051610c959190610f87565b60006040518083038185875af1925050503d8060008114610cd2576040519150601f19603f3d011682016040523d82523d6000602084013e610cd7565b606091505b5091509150610ce7828286610cf2565b979650505050505050565b60608315610d01575081610ba3565b825115610d115782518084602001fd5b8160405162461bcd60e51b81526004016101579190610fa3565b6001600160a01b0381168114610d4057600080fd5b50565b600080600080600080600060e0888a031215610d5e57600080fd5b8735610d6981610d2b565b96506020880135610d7981610d2b565b955060408801359450606088013593506080880135925060a0880135610d9e81610d2b565b8092505060c0880135905092959891949750929550565b600080600080600080600080610100898b031215610dd257600080fd5b8835610ddd81610d2b565b97506020890135610ded81610d2b565b965060408901359550606089013594506080890135935060a0890135925060c0890135610e1981610d2b565b8092505060e089013590509295985092959890939650565b600060208284031215610e4357600080fd5b8135610ba381610d2b565b600060208284031215610e6057600080fd5b8151610ba381610d2b565b80518015158114610e7b57600080fd5b919050565b60008060408385031215610e9357600080fd5b82519150610ea360208401610e6b565b90509250929050565b600060208284031215610ebe57600080fd5b610ba382610e6b565b60008060408385031215610eda57600080fd5b505080516020909101519092909150565b600080600060608486031215610f0057600080fd5b8351925060208401519150604084015190509250925092565b600060208284031215610f2b57600080fd5b5051919050565b6000600019821415610f5457634e487b7160e01b600052601160045260246000fd5b5060010190565b60005b83811015610f76578181015183820152602001610f5e565b83811115610aa15750506000910152565b60008251610f99818460208701610f5b565b9190910192915050565b6020815260008251806020840152610fc2816040850160208701610f5b565b601f01601f1916919091016040019291505056fea2646970667358221220275d7f3813cc79419993ab53294933d9d9c58a3bd6ebef9de786534809bc3e8164736f6c634300080b0033";

type KrStakingUniHelperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KrStakingUniHelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KrStakingUniHelper__factory extends ContractFactory {
  constructor(...args: KrStakingUniHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "KrStakingUniHelper";
  }

  deploy(
    _router: string,
    _factory: string,
    _staking: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<KrStakingUniHelper> {
    return super.deploy(
      _router,
      _factory,
      _staking,
      overrides || {}
    ) as Promise<KrStakingUniHelper>;
  }
  getDeployTransaction(
    _router: string,
    _factory: string,
    _staking: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _router,
      _factory,
      _staking,
      overrides || {}
    );
  }
  attach(address: string): KrStakingUniHelper {
    return super.attach(address) as KrStakingUniHelper;
  }
  connect(signer: Signer): KrStakingUniHelper__factory {
    return super.connect(signer) as KrStakingUniHelper__factory;
  }
  static readonly contractName: "KrStakingUniHelper";
  public readonly contractName: "KrStakingUniHelper";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KrStakingUniHelperInterface {
    return new utils.Interface(_abi) as KrStakingUniHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KrStakingUniHelper {
    return new Contract(address, _abi, signerOrProvider) as KrStakingUniHelper;
  }
}
