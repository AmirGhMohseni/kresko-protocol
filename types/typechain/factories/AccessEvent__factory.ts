/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AccessEvent, AccessEventInterface } from "../AccessEvent";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "targetContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "allowed",
        type: "bool",
      },
    ],
    name: "OperatorToggled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "PendingOwnershipTransfer",
    type: "event",
  },
];

const _bytecode =
  "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e92101e350ce8994de06bf6d5a1874b574f6d3e1eda5b0695882d6037251897464736f6c634300080b0033";

type AccessEventConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccessEventConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AccessEvent__factory extends ContractFactory {
  constructor(...args: AccessEventConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "AccessEvent";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AccessEvent> {
    return super.deploy(overrides || {}) as Promise<AccessEvent>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AccessEvent {
    return super.attach(address) as AccessEvent;
  }
  connect(signer: Signer): AccessEvent__factory {
    return super.connect(signer) as AccessEvent__factory;
  }
  static readonly contractName: "AccessEvent";
  public readonly contractName: "AccessEvent";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccessEventInterface {
    return new utils.Interface(_abi) as AccessEventInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AccessEvent {
    return new Contract(address, _abi, signerOrProvider) as AccessEvent;
  }
}
