/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DiamondLoupeFacet,
  DiamondLoupeFacetInterface,
} from "../DiamondLoupeFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_functionSelector",
        type: "bytes4",
      },
    ],
    name: "facetAddress",
    outputs: [
      {
        internalType: "address",
        name: "facetAddress_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "facetAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "facetAddresses_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_facet",
        type: "address",
      },
    ],
    name: "facetFunctionSelectors",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "facetFunctionSelectors_",
        type: "bytes4[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "facets",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondLoupe.Facet[]",
        name: "facets_",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506106cb806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80637a0ed627116100505780637a0ed627146100e2578063adfca15e146100f7578063cdffacc61461011757600080fd5b806301ffc9a71461006c57806352ef6b2c146100cd575b600080fd5b6100b861007a3660046104c4565b6001600160e01b03191660009081527f080f9836d135d84bdc1ee0b4214e5f2ae76516c41178c6f14a73685c9c3e5f10602052604090205460ff1690565b60405190151581526020015b60405180910390f35b6100d5610181565b6040516100c491906104f5565b6100ea610205565b6040516100c49190610587565b61010a610105366004610604565b6103f7565b6040516100c4919061062d565b6101696101253660046104c4565b6001600160e01b03191660009081527f080f9836d135d84bdc1ee0b4214e5f2ae76516c41178c6f14a73685c9c3e5f0d60205260409020546001600160a01b031690565b6040516001600160a01b0390911681526020016100c4565b60607f080f9836d135d84bdc1ee0b4214e5f2ae76516c41178c6f14a73685c9c3e5f096006018054806020026020016040519081016040528092919081815260200182805480156101fb57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101dd575b5050505050905090565b7f080f9836d135d84bdc1ee0b4214e5f2ae76516c41178c6f14a73685c9c3e5f0f546060907f080f9836d135d84bdc1ee0b4214e5f2ae76516c41178c6f14a73685c9c3e5f09908067ffffffffffffffff81111561026557610265610640565b6040519080825280602002602001820160405280156102ab57816020015b6040805180820190915260008152606060208201528152602001906001900390816102835790505b50925060005b818110156103f15760008360060182815481106102d0576102d0610656565b9060005260206000200160009054906101000a90046001600160a01b031690508085838151811061030357610303610656565b6020908102919091018101516001600160a01b0392831690529082166000908152600586018252604090819020805482518185028101850190935280835291929091908301828280156103b757602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116103645790505b50505050508583815181106103ce576103ce610656565b6020026020010151602001819052505080806103e99061066c565b9150506102b1565b50505090565b6001600160a01b03811660009081527f080f9836d135d84bdc1ee0b4214e5f2ae76516c41178c6f14a73685c9c3e5f0e60209081526040918290208054835181840281018401909452808452606093928301828280156104b857602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116104655790505b50505050509050919050565b6000602082840312156104d657600080fd5b81356001600160e01b0319811681146104ee57600080fd5b9392505050565b6020808252825182820181905260009190848201906040850190845b818110156105365783516001600160a01b031683529284019291840191600101610511565b50909695505050505050565b600081518084526020808501945080840160005b8381101561057c5781516001600160e01b03191687529582019590820190600101610556565b509495945050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156105f657888303603f19018552815180516001600160a01b031684528701518784018790526105e387850182610542565b95880195935050908601906001016105ae565b509098975050505050505050565b60006020828403121561061657600080fd5b81356001600160a01b03811681146104ee57600080fd5b6020815260006104ee6020830184610542565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060001982141561068e57634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220a11923a5ae8fee81f7ab8f7ab1359f2b75ac09b4a8026c47da85d9946b7fbf5364736f6c634300080b0033";

type DiamondLoupeFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DiamondLoupeFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DiamondLoupeFacet__factory extends ContractFactory {
  constructor(...args: DiamondLoupeFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "DiamondLoupeFacet";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DiamondLoupeFacet> {
    return super.deploy(overrides || {}) as Promise<DiamondLoupeFacet>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DiamondLoupeFacet {
    return super.attach(address) as DiamondLoupeFacet;
  }
  connect(signer: Signer): DiamondLoupeFacet__factory {
    return super.connect(signer) as DiamondLoupeFacet__factory;
  }
  static readonly contractName: "DiamondLoupeFacet";
  public readonly contractName: "DiamondLoupeFacet";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondLoupeFacetInterface {
    return new utils.Interface(_abi) as DiamondLoupeFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DiamondLoupeFacet {
    return new Contract(address, _abi, signerOrProvider) as DiamondLoupeFacet;
  }
}
