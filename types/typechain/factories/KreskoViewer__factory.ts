/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { KreskoViewer, KreskoViewerInterface } from "../KreskoViewer";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IKresko",
        name: "_kresko",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Kresko",
    outputs: [
      {
        internalType: "contract IKresko",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "borrowingPowerUSD",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "rawValue",
            type: "uint256",
          },
        ],
        internalType: "struct FixedPoint.Unsigned",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "collateralAssetInfoFor",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "assetAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "oracleAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "underlyingRebasingToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "rawValue",
                type: "uint256",
              },
            ],
            internalType: "struct FixedPoint.Unsigned",
            name: "amountUSD",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "rawValue",
                type: "uint256",
              },
            ],
            internalType: "struct FixedPoint.Unsigned",
            name: "cFactor",
            type: "tuple",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct KreskoViewer.CollateralAssetInfoUser[]",
        name: "result",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "rawValue",
            type: "uint256",
          },
        ],
        internalType: "struct FixedPoint.Unsigned",
        name: "totalCollateralUSD",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "assetAddresses",
        type: "address[]",
      },
    ],
    name: "collateralAssetInfos",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "assetAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "oracleAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "underlyingRebasingToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "rawValue",
                type: "uint256",
              },
            ],
            internalType: "struct FixedPoint.Unsigned",
            name: "cFactor",
            type: "tuple",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct KreskoViewer.CollateralAssetInfo[]",
        name: "result",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable[]",
        name: "_tokens",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "getAllowances",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "spender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "allowance",
            type: "uint256",
          },
        ],
        internalType: "struct KreskoViewer.Allowance[]",
        name: "allowances",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_collateralAssets",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "_krAssets",
        type: "address[]",
      },
    ],
    name: "getAssetInfos",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "assetAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "oracleAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "underlyingRebasingToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "rawValue",
                type: "uint256",
              },
            ],
            internalType: "struct FixedPoint.Unsigned",
            name: "cFactor",
            type: "tuple",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct KreskoViewer.CollateralAssetInfo[]",
        name: "collateralAssets",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "oracleAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "assetAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "rawValue",
                type: "uint256",
              },
            ],
            internalType: "struct FixedPoint.Unsigned",
            name: "kFactor",
            type: "tuple",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct KreskoViewer.krAssetInfo[]",
        name: "krAssets",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable[]",
        name: "_tokens",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getBalances",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
        ],
        internalType: "struct KreskoViewer.Balance[]",
        name: "balances",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20MetadataUpgradeable[]",
        name: "_tokens",
        type: "address[]",
      },
    ],
    name: "getTokenMetadatas",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct KreskoViewer.TokenMetadata[]",
        name: "metadatas",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "healthFactorFor",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "rawValue",
            type: "uint256",
          },
        ],
        internalType: "struct FixedPoint.Unsigned",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "krAssetInfoFor",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "assetAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "oracleAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "rawValue",
                type: "uint256",
              },
            ],
            internalType: "struct FixedPoint.Unsigned",
            name: "amountUSD",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "rawValue",
                type: "uint256",
              },
            ],
            internalType: "struct FixedPoint.Unsigned",
            name: "kFactor",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "mintable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct KreskoViewer.krAssetInfoUser[]",
        name: "result",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "rawValue",
            type: "uint256",
          },
        ],
        internalType: "struct FixedPoint.Unsigned",
        name: "totalDebtUSD",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "assetAddresses",
        type: "address[]",
      },
    ],
    name: "krAssetInfos",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "oracleAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "assetAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "rawValue",
                type: "uint256",
              },
            ],
            internalType: "struct FixedPoint.Unsigned",
            name: "kFactor",
            type: "tuple",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct KreskoViewer.krAssetInfo[]",
        name: "result",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "kreskoUser",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "assetAddress",
                type: "address",
              },
              {
                internalType: "address",
                name: "oracleAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "rawValue",
                    type: "uint256",
                  },
                ],
                internalType: "struct FixedPoint.Unsigned",
                name: "amountUSD",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "index",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "rawValue",
                    type: "uint256",
                  },
                ],
                internalType: "struct FixedPoint.Unsigned",
                name: "kFactor",
                type: "tuple",
              },
              {
                internalType: "bool",
                name: "mintable",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "price",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
            ],
            internalType: "struct KreskoViewer.krAssetInfoUser[]",
            name: "krAssets",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "assetAddress",
                type: "address",
              },
              {
                internalType: "address",
                name: "oracleAddress",
                type: "address",
              },
              {
                internalType: "address",
                name: "underlyingRebasingToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "rawValue",
                    type: "uint256",
                  },
                ],
                internalType: "struct FixedPoint.Unsigned",
                name: "amountUSD",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "rawValue",
                    type: "uint256",
                  },
                ],
                internalType: "struct FixedPoint.Unsigned",
                name: "cFactor",
                type: "tuple",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "index",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "price",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
            ],
            internalType: "struct KreskoViewer.CollateralAssetInfoUser[]",
            name: "collateralAssets",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "rawValue",
                type: "uint256",
              },
            ],
            internalType: "struct FixedPoint.Unsigned",
            name: "healthFactor",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "rawValue",
                type: "uint256",
              },
            ],
            internalType: "struct FixedPoint.Unsigned",
            name: "debtActualUSD",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "rawValue",
                type: "uint256",
              },
            ],
            internalType: "struct FixedPoint.Unsigned",
            name: "debtUSD",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "rawValue",
                type: "uint256",
              },
            ],
            internalType: "struct FixedPoint.Unsigned",
            name: "collateralActualUSD",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "rawValue",
                type: "uint256",
              },
            ],
            internalType: "struct FixedPoint.Unsigned",
            name: "collateralUSD",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "rawValue",
                type: "uint256",
              },
            ],
            internalType: "struct FixedPoint.Unsigned",
            name: "minCollateralUSD",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "rawValue",
                type: "uint256",
              },
            ],
            internalType: "struct FixedPoint.Unsigned",
            name: "borrowingPowerUSD",
            type: "tuple",
          },
        ],
        internalType: "struct KreskoViewer.KreskoUser",
        name: "user",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002e7b38038062002e7b83398101604081905262000034916200005a565b600080546001600160a01b0319166001600160a01b03929092169190911790556200008c565b6000602082840312156200006d57600080fd5b81516001600160a01b03811681146200008557600080fd5b9392505050565b612ddf806200009c6000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c8063b56274d411610081578063d1c070281161005b578063d1c07028146101f9578063def86ce114610219578063f79031e81461023a57600080fd5b8063b56274d4146101a6578063b69a9850146101b9578063be6d74a0146101d957600080fd5b80636bb52909116100b25780636bb52909146101425780636e0696d614610163578063983ff6151461018457600080fd5b806327c5607d146100d957806358b23fd714610102578063624ba70114610122575b600080fd5b6100ec6100e73660046120a8565b610265565b6040516100f99190612218565b60405180910390f35b61011561011036600461222b565b610607565b6040516100f991906122c5565b6101356101303660046120a8565b61084e565b6040516100f9919061240e565b610155610150366004612421565b610b97565b6040516100f9929190612485565b6101766101713660046124b3565b610bb7565b6040516100f99291906125b9565b6101976101923660046124b3565b611095565b604051905181526020016100f9565b6101976101b43660046124b3565b6111c1565b6101cc6101c73660046125dc565b6112fd565b6040516100f99190612640565b6101ec6101e73660046124b3565b611467565b6040516100f9919061277e565b61020c610207366004612829565b611669565b6040516100f9919061287b565b61022c6102273660046124b3565b6117ce565b6040516100f99291906128c6565b60005461024d906001600160a01b031681565b6040516001600160a01b0390911681526020016100f9565b6060815167ffffffffffffffff81111561028157610281611fb1565b6040519080825280602002602001820160405280156102ba57816020015b6102a7611d6f565b81526020019060019003908161029f5790505b50905060005b82518110156106015760008382815181106102dd576102dd6128d9565b602090810291909101015160008054604051635390972760e01b81526001600160a01b0380851660048301529394509192169063539097279060240160a060405180830381865afa158015610336573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035a9190612957565b90506000826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561039c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c091906129ea565b90506000836001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610402573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261042a9190810190612a05565b600080549192509081906001600160a01b0316633ae000c08761044e87600a612b93565b610459906001612ba2565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152600060448201526064016040805180830381865afa1580156104c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e49190612bc1565b915091506000866001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015610528573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105509190810190612a05565b90506000604051806101200160405280896001600160a01b0316815260200188602001516001600160a01b0316815260200188604001516001600160a01b031681526020018460000151815260200185600001518152602001886000015181526020018760ff168152602001868152602001838152509050808a8a815181106105db576105db6128d9565b6020026020010181905250505050505050505080806105f990612bed565b9150506102c0565b50919050565b6060815167ffffffffffffffff81111561062357610623611fb1565b60405190808252806020026020018201604052801561067b57816020015b6106686040518060600160405280600060ff16815260200160608152602001606081525090565b8152602001906001900390816106415790505b50905060005b82518110156106015760405180606001604052808483815181106106a7576106a76128d9565b60200260200101516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071091906129ea565b60ff16815260200184838151811061072a5761072a6128d9565b60200260200101516001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa15801561076f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107979190810190612a05565b81526020018483815181106107ae576107ae6128d9565b60200260200101516001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa1580156107f3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261081b9190810190612a05565b815250828281518110610830576108306128d9565b6020026020010181905250808061084690612bed565b915050610681565b6060815167ffffffffffffffff81111561086a5761086a611fb1565b6040519080825280602002602001820160405280156108a357816020015b610890611de8565b8152602001906001900390816108885790505b50905060005b82518110156106015760008382815181106108c6576108c66128d9565b60209081029190910101516000805460405163d7bfcecd60e01b81526001600160a01b0380851660048301529394509192169063d7bfcecd90602401608060405180830381865afa15801561091f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109439190612c08565b60008054604051631a69f54b60e21b81526001600160a01b038681166004830152670de0b6b3a7640000602483015260448201849052939450919216906369a7d52c90606401602060405180830381865afa1580156109a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ca9190612c88565b9050600082602001516001600160a01b03166350d25bcd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a349190612ca4565b90506000846001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015610a76573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a9e9190810190612a05565b90506000856001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610ae0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b089190810190612a05565b905060006040518060e0016040528087602001516001600160a01b03168152602001886001600160a01b03168152602001858152602001866000015181526020018760000151815260200183815260200184815250905080898981518110610b7257610b726128d9565b6020026020010181905250505050505050508080610b8f90612bed565b9150506108a9565b606080610ba384610265565b9150610bae8361084e565b90509250929050565b6060610bcf6040518060200160405280600081525090565b6000805460405163369c411560e11b81526001600160a01b03868116600483015290911690636d38822a90602401600060405180830381865afa158015610c1a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c429190810190612cbd565b80519091501561108f57805167ffffffffffffffff811115610c6657610c66611fb1565b604051908082528060200260200182016040528015610d0157816020015b6040805161016081018252600080825260208083018290528284018290526060808401839052845180830186528381526080850152845191820190945281815260a083015260c0820181905260e082018190526101008201526101208101829052610140810191909152815260200190600190039081610c845790505b50925060005b815181101561108d576000828281518110610d2457610d246128d9565b602090810291909101015160008054604051635390972760e01b81526001600160a01b0380851660048301529394509192169063539097279060240160a060405180830381865afa158015610d7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da19190612957565b90506000826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610de3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e0791906129ea565b60008054604051630c65e07b60e01b81526001600160a01b038c81166004830152878116602483015293945091921690630c65e07b90604401602060405180830381865afa158015610e5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e819190612ca4565b90506000846001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610ec3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610eeb9190810190612a05565b6000805460405162eb800360e61b81526001600160a01b038981166004830152602482018790526001604483015293945091928392911690633ae000c0906064016040805180830381865afa158015610f48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f6c9190612bc1565b915091506000876001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015610fb0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610fd89190810190612a05565b60408051610160810182526001600160a01b03808c16825260208b8101518216908301528a83015116918101919091526060810187905260808101859052885160a082015260ff881660c082015260e081018b90528351610100820152610120810186905261014081018290529091506110528c85611c47565b50808d8b81518110611066576110666128d9565b6020026020010181905250505050505050505050808061108590612bed565b915050610d07565b505b50915091565b60408051602081019091526000815260008054604051633fa1c54560e21b81526001600160a01b0385811660048301529091169063fe87151490602401602060405180830381865afa1580156110ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111139190612c88565b600080546040516307d1a44560e41b81526001600160a01b03878116600483015293945091921690637d1a445090602401602060405180830381865afa158015611161573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111859190612c88565b905061119381835190511090565b156111af57505060408051602081019091526000815292915050565b6111b98183611c7c565b949350505050565b604080516020810190915260008152600080546040517fff1389c50000000000000000000000000000000000000000000000000000000081526001600160a01b0385811660048301529091169063ff1389c590602401602060405180830381865afa158015611234573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112589190612c88565b600080546040516307d1a44560e41b81526001600160a01b03878116600483015293945091921690637d1a445090602401602060405180830381865afa1580156112a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ca9190612c88565b90506112d7826000611ca6565b156112e6576111b98183611cbd565b505060408051602081019091526000815292915050565b6060835167ffffffffffffffff81111561131957611319611fb1565b60405190808252806020026020018201604052801561136457816020015b60408051606081018252600080825260208083018290529282015282526000199092019101816113375790505b50905060005b845181101561145f576040518060600160405280856001600160a01b03168152602001846001600160a01b031681526020018683815181106113ae576113ae6128d9565b6020908102919091010151604051636eb1769f60e11b81526001600160a01b03888116600483015287811660248301529091169063dd62ed3e90604401602060405180830381865afa158015611408573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061142c9190612ca4565b815250828281518110611441576114416128d9565b6020026020010181905250808061145790612bed565b91505061136a565b509392505050565b61146f611e4b565b60008061147b846117ce565b9150915060008061148b86610bb7565b915091506000845111806114a0575060008251115b15611660576040518061012001604052808581526020018381526020016114c6886111c1565b815260208101859052600054604080517fff1389c50000000000000000000000000000000000000000000000000000000081526001600160a01b038b81166004830152919093019291169063ff1389c590602401602060405180830381865afa158015611537573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061155b9190612c88565b815260208101839052600054604080516307d1a44560e41b81526001600160a01b038b811660048301529190930192911690637d1a445090602401602060405180830381865afa1580156115b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d79190612c88565b8152600054604051633fa1c54560e21b81526001600160a01b038a811660048301526020909301929091169063fe87151490602401602060405180830381865afa158015611629573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061164d9190612c88565b815260200161165b88611095565b905294505b50505050919050565b6060825167ffffffffffffffff81111561168557611685611fb1565b6040519080825280602002602001820160405280156116ca57816020015b60408051808201909152600080825260208201528152602001906001900390816116a35790505b50905060005b83518110156117c75760405180604001604052808583815181106116f6576116f66128d9565b60200260200101516001600160a01b0316815260200185838151811061171e5761171e6128d9565b60209081029190910101516040516370a0823160e01b81526001600160a01b038781166004830152909116906370a0823190602401602060405180830381865afa158015611770573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117949190612ca4565b8152508282815181106117a9576117a96128d9565b602002602001018190525080806117bf90612bed565b9150506116d0565b5092915050565b60606117e66040518060200160405280600081525090565b600080546040516377d4074360e11b81526001600160a01b0386811660048301529091169063efa80e8690602401600060405180830381865afa158015611831573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526118599190810190612cbd565b80519091501561108f57805167ffffffffffffffff81111561187d5761187d611fb1565b6040519080825280602002602001820160405280156118b657816020015b6118a3611f22565b81526020019060019003908161189b5790505b50925060005b815181101561108d5760008282815181106118d9576118d96128d9565b60209081029190910101516000805460405163d7bfcecd60e01b81526001600160a01b0380851660048301529394509192169063d7bfcecd90602401608060405180830381865afa158015611932573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119569190612c08565b60008054604051630692479b60e31b81526001600160a01b038b811660048301528681166024830152939450919216906334923cd890604401602060405180830381865afa1580156119ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119d09190612ca4565b9050600082602001516001600160a01b03166350d25bcd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611a16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a3a9190612ca4565b60008054604051631a69f54b60e21b81526001600160a01b0388811660048301526024820187905260016044830152939450919216906369a7d52c90606401602060405180830381865afa158015611a96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aba9190612c88565b90506000856001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015611afc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611b249190810190612a05565b90506000866001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015611b66573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611b8e9190810190612a05565b90506000604051806101400160405280896001600160a01b0316815260200188602001516001600160a01b031681526020018781526020018581526020018a815260200188600001518152602001886060015115158152602001868152602001848152602001838152509050611c0d848c611c4790919063ffffffff16565b50808c8a81518110611c2157611c216128d9565b602002602001018190525050505050505050508080611c3f90612bed565b9150506118bc565b6040805160208101909152600081526040805160208101909152825184518291611c719190611cfe565b905290505b92915050565b6040805160208101909152600081526040805160208101909152825184518291611c719190611d11565b6000611cb182611d1d565b51835111905092915050565b6040805160208101909152600081526040518060200160405280611c718460000151611cf86012600a611cf09190612d4c565b885190611d57565b90611d63565b6000611d0a8284612d58565b9392505050565b6000611d0a8284612d70565b6040805160208101909152600081526040518060200160405280611d4f6012600a611d489190612d4c565b8590611d57565b905292915050565b6000611d0a8284612ba2565b6000611d0a8284612d87565b60405180610120016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001611dcf6040518060200160405280600081525090565b8152600060208201526060604082018190529081015290565b6040518060e0016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001611e376040518060200160405280600081525090565b815260200160608152602001606081525090565b6040518061012001604052806060815260200160608152602001611e7b6040518060200160405280600081525090565b8152602001611e966040518060200160405280600081525090565b8152602001611eb16040518060200160405280600081525090565b8152602001611ecc6040518060200160405280600081525090565b8152602001611ee76040518060200160405280600081525090565b8152602001611f026040518060200160405280600081525090565b8152602001611f1d6040518060200160405280600081525090565b905290565b60405180610140016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001611f6b6040518060200160405280600081525090565b815260200160008152602001611f8d6040518060200160405280600081525090565b81526020016000151581526020016000815260200160608152602001606081525090565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611ff057611ff0611fb1565b604052919050565b600067ffffffffffffffff82111561201257612012611fb1565b5060051b60200190565b6001600160a01b038116811461203157600080fd5b50565b600082601f83011261204557600080fd5b8135602061205a61205583611ff8565b611fc7565b82815260059290921b8401810191818101908684111561207957600080fd5b8286015b8481101561209d5780356120908161201c565b835291830191830161207d565b509695505050505050565b6000602082840312156120ba57600080fd5b813567ffffffffffffffff8111156120d157600080fd5b6111b984828501612034565b60005b838110156120f85781810151838201526020016120e0565b83811115612107576000848401525b50505050565b600081518084526121258160208601602086016120dd565b601f01601f19169290920160200192915050565b600082825180855260208086019550808260051b84010181860160005b8481101561220b57601f19868403018952815180516001600160a01b0390811685528582015181168686015260408083015190911690850152606080820151908501526080808201519085015260a080820151519085015260c08082015160ff169085015260e08082015161012082870181905291906121d88388018261210d565b9250505061010080830151925085820381870152506121f7818361210d565b9a86019a9450505090830190600101612156565b5090979650505050505050565b602081526000611d0a6020830184612139565b6000602080838503121561223e57600080fd5b823567ffffffffffffffff81111561225557600080fd5b8301601f8101851361226657600080fd5b803561227461205582611ff8565b81815260059190911b8201830190838101908783111561229357600080fd5b928401925b828410156122ba5783356122ab8161201c565b82529284019290840190612298565b979650505050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561234b57603f198984030185528151606060ff825116855288820151818a87015261231d8287018261210d565b91505087820151915084810388860152612337818361210d565b9689019694505050908601906001016122ec565b509098975050505050505050565b600082825180855260208086019550808260051b84010181860160005b8481101561220b57858303601f19018952815180516001600160a01b0390811685528582015116858501526040808201519085015260608082015190850152608080820151519085015260a08082015160e082870181905291906123dc8388018261210d565b9250505060c080830151925085820381870152506123fa818361210d565b9a86019a9450505090830190600101612376565b602081526000611d0a6020830184612359565b6000806040838503121561243457600080fd5b823567ffffffffffffffff8082111561244c57600080fd5b61245886838701612034565b9350602085013591508082111561246e57600080fd5b5061247b85828601612034565b9150509250929050565b6040815260006124986040830185612139565b82810360208401526124aa8185612359565b95945050505050565b6000602082840312156124c557600080fd5b8135611d0a8161201c565b600082825180855260208086019550808260051b84010181860160005b8481101561220b57601f19868403018952815180516001600160a01b039081168552858201518116868601526040808301519091169085015260608082015190850152608080820151519085015260a080820151519085015260c08082015160ff169085015260e0808201519085015261010080820151908501526101208082015161016082870181905291906125868388018261210d565b9250505061014080830151925085820381870152506125a5818361210d565b9a86019a94505050908301906001016124ed565b6040815260006125cc60408301856124d0565b9050825160208301529392505050565b6000806000606084860312156125f157600080fd5b833567ffffffffffffffff81111561260857600080fd5b61261486828701612034565b93505060208401356126258161201c565b915060408401356126358161201c565b809150509250925092565b602080825282518282018190526000919060409081850190868401855b8281101561269857815180516001600160a01b039081168652878201511687860152850151858501526060909301929085019060010161265d565b5091979650505050505050565b600082825180855260208086019550808260051b84010181860160005b8481101561220b57601f19868403018952815180516001600160a01b0390811685528582015116858501526040808201519085015260608082015151908501526080808201519085015260a080820151519085015260c08082015115159085015260e0808201519085015261010080820151610140828701819052919061274b8388018261210d565b92505050610120808301519250858203818701525061276a818361210d565b9a86019a94505050908301906001016126c2565b602081526000825161012080602085015261279d6101408501836126a5565b91506020850151601f198584030160408601526127ba83826124d0565b92505060408501516127cf6060860182519052565b50606085015180516080860152506080850151805160a08601525060a0850151805160c08601525060c0850151805160e08601525060e085015161010061281881870183519052565b909501515193019290925250919050565b6000806040838503121561283c57600080fd5b823567ffffffffffffffff81111561285357600080fd5b61285f85828601612034565b92505060208301356128708161201c565b809150509250929050565b602080825282518282018190526000919060409081850190868401855b8281101561269857815180516001600160a01b03168552860151868501529284019290850190600101612898565b6040815260006125cc60408301856126a5565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561290157600080fd5b6040516020810181811067ffffffffffffffff8211171561292457612924611fb1565b6040529151825250919050565b805160ff8116811461294257600080fd5b919050565b8051801515811461294257600080fd5b600060a0828403121561296957600080fd5b60405160a0810181811067ffffffffffffffff8211171561298c5761298c611fb1565b60405261299984846128ef565b815260208301516129a98161201c565b602082015260408301516129bc8161201c565b60408201526129cd60608401612931565b60608201526129de60808401612947565b60808201529392505050565b6000602082840312156129fc57600080fd5b611d0a82612931565b600060208284031215612a1757600080fd5b815167ffffffffffffffff80821115612a2f57600080fd5b818401915084601f830112612a4357600080fd5b815181811115612a5557612a55611fb1565b612a68601f8201601f1916602001611fc7565b9150808252856020828501011115612a7f57600080fd5b612a908160208401602086016120dd565b50949350505050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115612aea578160001904821115612ad057612ad0612a99565b80851615612add57918102915b93841c9390800290612ab4565b509250929050565b600082612b0157506001611c76565b81612b0e57506000611c76565b8160018114612b245760028114612b2e57612b4a565b6001915050611c76565b60ff841115612b3f57612b3f612a99565b50506001821b611c76565b5060208310610133831016604e8410600b8410161715612b6d575081810a611c76565b612b778383612aaf565b8060001904821115612b8b57612b8b612a99565b029392505050565b6000611d0a60ff841683612af2565b6000816000190483118215151615612bbc57612bbc612a99565b500290565b60008060408385031215612bd457600080fd5b612bde84846128ef565b9150610bae84602085016128ef565b6000600019821415612c0157612c01612a99565b5060010190565b600060808284031215612c1a57600080fd5b6040516080810181811067ffffffffffffffff82111715612c3d57612c3d611fb1565b604052612c4a84846128ef565b81526020830151612c5a8161201c565b6020820152612c6b60408401612947565b6040820152612c7c60608401612947565b60608201529392505050565b600060208284031215612c9a57600080fd5b611d0a83836128ef565b600060208284031215612cb657600080fd5b5051919050565b60006020808385031215612cd057600080fd5b825167ffffffffffffffff811115612ce757600080fd5b8301601f81018513612cf857600080fd5b8051612d0661205582611ff8565b81815260059190911b82018301908381019087831115612d2557600080fd5b928401925b828410156122ba578351612d3d8161201c565b82529284019290840190612d2a565b6000611d0a8383612af2565b60008219821115612d6b57612d6b612a99565b500190565b600082821015612d8257612d82612a99565b500390565b600082612da457634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220693afc5ab81e91df1307c098c4ab577faacfe3ca0b65bc4524c36b67758a261864736f6c634300080b0033";

type KreskoViewerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KreskoViewerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KreskoViewer__factory extends ContractFactory {
  constructor(...args: KreskoViewerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "KreskoViewer";
  }

  deploy(
    _kresko: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<KreskoViewer> {
    return super.deploy(_kresko, overrides || {}) as Promise<KreskoViewer>;
  }
  getDeployTransaction(
    _kresko: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_kresko, overrides || {});
  }
  attach(address: string): KreskoViewer {
    return super.attach(address) as KreskoViewer;
  }
  connect(signer: Signer): KreskoViewer__factory {
    return super.connect(signer) as KreskoViewer__factory;
  }
  static readonly contractName: "KreskoViewer";
  public readonly contractName: "KreskoViewer";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KreskoViewerInterface {
    return new utils.Interface(_abi) as KreskoViewerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KreskoViewer {
    return new Contract(address, _abi, signerOrProvider) as KreskoViewer;
  }
}
