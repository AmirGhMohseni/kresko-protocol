/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MinterInit, MinterInitInterface } from "../MinterInit";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "burnFee",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "feeRecipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "liquidationIncentiveMultiplier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minimumCollateralizationRatio",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minimumDebtValue",
            type: "uint256",
          },
        ],
        internalType: "struct MinterInitParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610351806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80635678e71714610030575b600080fd5b61004361003e3660046102b4565b610045565b005b7f080f9836d135d84bdc1ee0b4214e5f2ae76516c41178c6f14a73685c9c3e5f095473ffffffffffffffffffffffffffffffffffffffff166100856101ce565b73ffffffffffffffffffffffffffffffffffffffff16146100ed5760405162461bcd60e51b815260206004820152601f60248201527f4469616d6f6e643a204d75737420626520636f6e7472616374206f776e65720060448201526064015b60405180910390fd5b7f5076ab9fa18d2a17cfce4375a530b76392de8264a11126885cd5534d39f0a97c805460ff16156101605760405162461bcd60e51b815260206004820152601760248201527f4d533a20416c726561647920696e697469616c697a656400000000000000000060448201526064016100e4565b6101b96040518060400160405280600d81526020017f4b7265736b6f204d696e7465720000000000000000000000000000000000000081525060405180604001604052806002815260200161563160f01b815250610238565b6001820155805461ffff191661010117905550565b60003330141561023257600080368080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050505036015173ffffffffffffffffffffffffffffffffffffffff1691506102359050565b50335b90565b60006040518060800160405280604f81526020016102cd604f913980519060200120838051906020012083805190602001206102714690565b604080516020810195909552840192909252606083015260808201523060a082015260c00160405160208183030381529060405280519060200120905092915050565b600060a082840312156102c657600080fd5b5091905056fe454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e743235362073616c742c6164647265737320766572696679696e67436f6e747261637429a2646970667358221220f1a204a1ea61cae88079b7c9949dd53f3b90b150c5a4a58650cf16f4fc00174064736f6c634300080b0033";

type MinterInitConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MinterInitConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MinterInit__factory extends ContractFactory {
  constructor(...args: MinterInitConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MinterInit";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MinterInit> {
    return super.deploy(overrides || {}) as Promise<MinterInit>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MinterInit {
    return super.attach(address) as MinterInit;
  }
  connect(signer: Signer): MinterInit__factory {
    return super.connect(signer) as MinterInit__factory;
  }
  static readonly contractName: "MinterInit";
  public readonly contractName: "MinterInit";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MinterInitInterface {
    return new utils.Interface(_abi) as MinterInitInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MinterInit {
    return new Contract(address, _abi, signerOrProvider) as MinterInit;
  }
}
