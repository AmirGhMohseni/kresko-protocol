/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DiamondOwnershipFacet,
  DiamondOwnershipFacetInterface,
} from "../DiamondOwnershipFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "PendingOwnershipTransfer",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061051c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80638da5cb5b116100505780638da5cb5b14610093578063e30c3978146100b3578063f2fde38b146100bb57600080fd5b8063158ef93e1461006c57806379ba509714610089575b600080fd5b6100746100ce565b60405190151581526020015b60405180910390f35b610091610105565b005b61009b6101c3565b6040516001600160a01b039091168152602001610080565b61009b6101fb565b6100916100c93660046104b6565b61022e565b6000806100fc7f080f9836d135d84bdc1ee0b4214e5f2ae76516c41178c6f14a73685c9c3e5f0c5460ff1690565b60ff1611905090565b7f080f9836d135d84bdc1ee0b4214e5f2ae76516c41178c6f14a73685c9c3e5f0a546001600160a01b03166101386102c3565b6001600160a01b0316146101b95760405162461bcd60e51b815260206004820152602760248201527f4469616d6f6e643a204d7573742062652070656e64696e6720636f6e7472616360448201527f74206f776e65720000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6101c1610320565b565b60006101f67f080f9836d135d84bdc1ee0b4214e5f2ae76516c41178c6f14a73685c9c3e5f09546001600160a01b031690565b905090565b60006101f67f080f9836d135d84bdc1ee0b4214e5f2ae76516c41178c6f14a73685c9c3e5f0a546001600160a01b031690565b7f080f9836d135d84bdc1ee0b4214e5f2ae76516c41178c6f14a73685c9c3e5f09546001600160a01b03166102616102c3565b6001600160a01b0316146102b75760405162461bcd60e51b815260206004820152601f60248201527f4469616d6f6e643a204d75737420626520636f6e7472616374206f776e65720060448201526064016101b0565b6102c0816103c1565b50565b60003330141561031a57600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b0316915061031d9050565b50335b90565b7f080f9836d135d84bdc1ee0b4214e5f2ae76516c41178c6f14a73685c9c3e5f0a80547f080f9836d135d84bdc1ee0b4214e5f2ae76516c41178c6f14a73685c9c3e5f0980546001600160a01b03831673ffffffffffffffffffffffffffffffffffffffff199182168117835592169092556040513391907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a350565b6001600160a01b0381166104175760405162461bcd60e51b815260206004820152601d60248201527f44533a204f776e65722063616e6e6f7420626520302d6164647265737300000060448201526064016101b0565b7f080f9836d135d84bdc1ee0b4214e5f2ae76516c41178c6f14a73685c9c3e5f0a805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038381169182179092557f080f9836d135d84bdc1ee0b4214e5f2ae76516c41178c6f14a73685c9c3e5f098054604051919316907f23e1f881d1e797ea57a7247e53536f0bfc37c42e6645b3bdc4b1c9a0e0d8a13390600090a35050565b6000602082840312156104c857600080fd5b81356001600160a01b03811681146104df57600080fd5b939250505056fea2646970667358221220d7679179f97b40578e8f6e94e501a62f714857b0c956e10978e427d4fb3c926764736f6c634300080b0033";

type DiamondOwnershipFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DiamondOwnershipFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DiamondOwnershipFacet__factory extends ContractFactory {
  constructor(...args: DiamondOwnershipFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "DiamondOwnershipFacet";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DiamondOwnershipFacet> {
    return super.deploy(overrides || {}) as Promise<DiamondOwnershipFacet>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DiamondOwnershipFacet {
    return super.attach(address) as DiamondOwnershipFacet;
  }
  connect(signer: Signer): DiamondOwnershipFacet__factory {
    return super.connect(signer) as DiamondOwnershipFacet__factory;
  }
  static readonly contractName: "DiamondOwnershipFacet";
  public readonly contractName: "DiamondOwnershipFacet";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondOwnershipFacetInterface {
    return new utils.Interface(_abi) as DiamondOwnershipFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DiamondOwnershipFacet {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DiamondOwnershipFacet;
  }
}
