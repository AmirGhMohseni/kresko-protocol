/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { RebasingToken, RebasingTokenInterface } from "../RebasingToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rebaseFactor",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_allowances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "rebaseFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "rawValue",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "setBalanceOf",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rebaseFactor",
        type: "uint256",
      },
    ],
    name: "setRebaseFactor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516108f93803806108f983398101604081905261002f9161004c565b610046816040805160208101909152819052600055565b50610065565b60006020828403121561005e57600080fd5b5051919050565b610885806100746000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c806340c10f191161008c578063a9059cbb11610066578063a9059cbb146101fa578063b46310f61461020d578063dd62ed3e14610220578063f12e06231461025957600080fd5b806340c10f19146101b357806370a08231146101c857806395d89b41146101db57600080fd5b80631cdd82dc116100bd5780631cdd82dc1461018757806323b872dd14610191578063313ce567146101a457600080fd5b8063024c2ddd146100e457806306fdde0314610122578063095ea7b314610164575b600080fd5b61010f6100f23660046105b7565b600260209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b60408051808201909152601381527f54657374205265626173696e6720546f6b656e0000000000000000000000000060208201525b60405161011991906105ea565b61017761017236600461063f565b61027a565b6040519015158152602001610119565b60005461010f9081565b61017761019f366004610669565b6102a9565b60405160128152602001610119565b6101c66101c136600461063f565b6102be565b005b61010f6101d63660046106a5565b6102f8565b604080518082019091526003815262464f4f60e81b6020820152610157565b61017761020836600461063f565b61031a565b6101c661021b36600461063f565b61032e565b61010f61022e3660046105b7565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6101c66102673660046106c0565b6040805160208101909152819052600055565b3360009081526002602090815260408083206001600160a01b0386168452909152902081905560015b92915050565b60006102b6848484610357565b949350505050565b6102c7816104a9565b6001600160a01b038316600090815260016020526040812080549091906102ef9084906106ef565b90915550505050565b6001600160a01b0381166000908152600160205260408120546102a3906104d5565b6000610327338484610357565b9392505050565b610337816104a9565b6001600160a01b0390921660009081526001602052604090209190915550565b600080610363836104a9565b90506001600160a01b03851633146103b2576001600160a01b038086166000908152600260209081526040808320938816835292905290812080548592906103ac908490610707565b90915550505b6001600160a01b0385166000908152600160205260409020548111156104445760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e63650000000000000000000000000000000000000000000000000000606482015260840160405180910390fd5b6001600160a01b0385166000908152600160205260408120805483929061046c908490610707565b90915550506001600160a01b038416600090815260016020526040812080548392906104999084906106ef565b9091555060019695505050505050565b604080516020808201835260008054835283519182019093528381526104ce916104fa565b5192915050565b604080516020808201835260008054835283519182019093528381526104ce91610544565b604080516020810190915260008152604051806020016040528061053b84600001516105356012600a61052d9190610802565b885190610583565b9061058f565b90529392505050565b60408051602081019091526000815260405180602001604052806012600a61056c9190610802565b8451865161057991610583565b61053b919061080e565b60006103278284610830565b6000610327828461080e565b80356001600160a01b03811681146105b257600080fd5b919050565b600080604083850312156105ca57600080fd5b6105d38361059b565b91506105e16020840161059b565b90509250929050565b600060208083528351808285015260005b81811015610617578581018301518582016040015282016105fb565b81811115610629576000604083870101525b50601f01601f1916929092016040019392505050565b6000806040838503121561065257600080fd5b61065b8361059b565b946020939093013593505050565b60008060006060848603121561067e57600080fd5b6106878461059b565b92506106956020850161059b565b9150604084013590509250925092565b6000602082840312156106b757600080fd5b6103278261059b565b6000602082840312156106d257600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610702576107026106d9565b500190565b600082821015610719576107196106d9565b500390565b600181815b8085111561075957816000190482111561073f5761073f6106d9565b8085161561074c57918102915b93841c9390800290610723565b509250929050565b600082610770575060016102a3565b8161077d575060006102a3565b8160018114610793576002811461079d576107b9565b60019150506102a3565b60ff8411156107ae576107ae6106d9565b50506001821b6102a3565b5060208310610133831016604e8410600b84101617156107dc575081810a6102a3565b6107e6838361071e565b80600019048211156107fa576107fa6106d9565b029392505050565b60006103278383610761565b60008261082b57634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561084a5761084a6106d9565b50029056fea2646970667358221220d064666238343268c854c90750c01c227598364346ec0dcc37c17e999a1fb45664736f6c634300080b0033";

type RebasingTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RebasingTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RebasingToken__factory extends ContractFactory {
  constructor(...args: RebasingTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RebasingToken";
  }

  deploy(
    _rebaseFactor: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RebasingToken> {
    return super.deploy(
      _rebaseFactor,
      overrides || {}
    ) as Promise<RebasingToken>;
  }
  getDeployTransaction(
    _rebaseFactor: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_rebaseFactor, overrides || {});
  }
  attach(address: string): RebasingToken {
    return super.attach(address) as RebasingToken;
  }
  connect(signer: Signer): RebasingToken__factory {
    return super.connect(signer) as RebasingToken__factory;
  }
  static readonly contractName: "RebasingToken";
  public readonly contractName: "RebasingToken";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RebasingTokenInterface {
    return new utils.Interface(_abi) as RebasingTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RebasingToken {
    return new Contract(address, _abi, signerOrProvider) as RebasingToken;
  }
}
