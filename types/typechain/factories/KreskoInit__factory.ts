/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { KreskoInit, KreskoInitInterface } from "../KreskoInit";

const _abi = [
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610269806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80638129fc1c14610030575b600080fd5b61003861003a565b005b7fa1913c34ddada141a5d56c2b5b7d024a07c1db6234ef6660e64a8f3cc6c7caa0547fa1913c34ddada141a5d56c2b5b7d024a07c1db6234ef6660e64a8f3cc6c7ca9e90600160a01b900460ff16156100d95760405162461bcd60e51b815260206004820152601760248201527f4d533a20416c726561647920696e697469616c697a6564000000000000000000604482015260640160405180910390fd5b6101326040518060400160405280600e81526020017f4b7265736b6f2047656e6572616c00000000000000000000000000000000000081525060405180604001604052806002815260200161563160f01b815250610168565b600382015560020180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b179055565b60006040518060800160405280604f81526020016101e5604f913980519060200120838051906020012083805190602001206101a14690565b604080516020810195909552840192909252606083015260808201523060a082015260c0016040516020818303038152906040528051906020012090509291505056fe454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e743235362073616c742c6164647265737320766572696679696e67436f6e747261637429a2646970667358221220e102ceb246f99cd3556d97db8c7cb25d107be2878b8d12d1ad1eb552b2eeb5ef64736f6c634300080b0033";

type KreskoInitConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KreskoInitConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KreskoInit__factory extends ContractFactory {
  constructor(...args: KreskoInitConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "KreskoInit";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<KreskoInit> {
    return super.deploy(overrides || {}) as Promise<KreskoInit>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): KreskoInit {
    return super.attach(address) as KreskoInit;
  }
  connect(signer: Signer): KreskoInit__factory {
    return super.connect(signer) as KreskoInit__factory;
  }
  static readonly contractName: "KreskoInit";
  public readonly contractName: "KreskoInit";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KreskoInitInterface {
    return new utils.Interface(_abi) as KreskoInitInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KreskoInit {
    return new Contract(address, _abi, signerOrProvider) as KreskoInit;
  }
}
